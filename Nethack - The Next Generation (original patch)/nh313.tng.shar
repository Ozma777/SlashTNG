
#! /bin/sh
# This is a shell archive.  Remove anything before this line, then unpack
# it by saving it into a file and typing "sh file".  To overwrite existing
# files, type "sh file -c".  You can also feed this as standard input via
# unshar, or by typing "sh <file", e.g..  If this archive is complete, you
# will see the following message at the end:
#		"End of shell archive."
# Contents:  patch.pa ./dat/Geek.des ./dat/spec_levs ./dat/dragon.des
#   ./dat/rulebar ./dat/forge.des ./dat/quest_levs ./dat/template.des
#   ./dat/key.des ./dat/hitch.des ./src/Sysunix ./src/.gdbinit
#   ./src/school.c ./src/smith.c ./src/link ./README.DNA
#   ./README.nh-tng
# Wrapped by aus001@rs3.rrz.uni-koeln.de on Sat May 28 21:23:20 1994
PATH=/bin:/usr/bin:/usr/ucb ; export PATH
if test -f patch.pa -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"patch.pa\"
else
echo shar: Extracting \"patch.pa\" \(256107 characters\)
sed "s/^X//" >patch.pa <<'END_OF_patch.pa'
X*** /tmp/tmp.1285	Sat May 28 21:13:53 1994
X--- ./dat/dungeon.def	Sun May 22 19:04:57 1994
X***************
X*** 23,29 ****
X  LEVEL:		"castle" "none" @ (-1, 0)
X  CHAINBRANCH:	"Gehennom" "castle" + (0, 0) no_down
X  BRANCH:		"The Elemental Planes" @ (1, 0) no_down up
X! 
X  #
X  #	Gehennom
X  #
X--- 23,30 ----
X  LEVEL:		"castle" "none" @ (-1, 0)
X  CHAINBRANCH:	"Gehennom" "castle" + (0, 0) no_down
X  BRANCH:		"The Elemental Planes" @ (1, 0) no_down up
X! LEVEL:		"forge" "F" @ (15, 5) 80 
X! LEVEL:		"hitch" "H" @ (-3, 2)
X  #
X  #	Gehennom
X  #
X***************
X*** 57,63 ****
X  LEVEL:		"orcus" "O" @ (15, 5)
X  LEVEL:		"fakewiz1" "F" @ (-6,4)
X  LEVEL:		"fakewiz2" "G" @ (-6,4)
X! 
X  #
X  #	The Mines of the Gnomes of Zurich.
X  #
X--- 58,67 ----
X  LEVEL:		"orcus" "O" @ (15, 5)
X  LEVEL:		"fakewiz1" "F" @ (-6,4)
X  LEVEL:		"fakewiz2" "G" @ (-6,4)
X! LEVEL:		"school" "S" @ (8, 5) 80
X! LEVEL:		"compu" "C" @ (8, 5) 80 
X! LEVEL:		"key" "K" @ (5, 5) 80
X! LEVEL:		"dragon" "D" @ (1, 5) 60
X  #
X  #	The Mines of the Gnomes of Zurich.
X  #
X*** /tmp/tmp.1285	Sat May 28 21:13:59 1994
X--- ./dat/oracles.txt	Sun May 15 14:00:08 1994
X***************
X*** 97,99 ****
X--- 97,108 ----
X  calm, thy safety will be aided greatly, but beware lest thy clumsy feet scuff
X  the inscription, cancelling its potence.
X  -----
X+ It is said that, if thou hast managed to accomplish the great quest thou
X+ set out to, and hast gotten the Amulet manufactured by Marduk in the
X+ beginning of Time, thy way is the way up. Thou willst then face four
X+ planes, before hidden in the mists of time, dedicated to the four
X+ elements the world consists of. If, by great power and bravery on thy
X+ part, thou managest to survive them, thou willst reach the High Temples
X+ of the Aligned Gods. It is up to thee then to return to the gods
X+ what belongs to the gods.
X+ -----
X*** /tmp/tmp.1285	Sat May 28 21:14:00 1994
X--- ./dat/rumors.fal	Sun May 15 14:29:39 1994
X***************
X*** 3,13 ****
X--- 3,15 ----
X  2nd Law of Hacking:  first in, first out.
X  3rd Law of Hacking:  the last blow counts most.
X  4th Law of Hacking:  you will find the exit at the entrance.
X+ A babelfish lets you understand a leocrotta.
X  A chameleon imitating a mail daemon often delivers scrolls of fire.
X  A cockatrice corpse is guaranteed to be untainted!
X  A dead cockatrice is just a dead lizard.
X  A dragon is just a snake that ate a scroll of fire.
X  A fading corridor enlightens your insight.
X+ A game to rule them all, a game to find them, a game to bring them all ...
X  A glowing potion is too hot to drink.
X  A good amulet may protect you against guards.
X  A lizard corpse is a good thing to turn undead.
X***************
X*** 108,113 ****
X--- 110,116 ----
X  Never ask a shopkeeper for a price list.
X  Never burn a tree, unless you like getting whacked with a +5 shovel.
X  Never eat with glowing hands!
X+ Never kill a Nazgul - Sauron will get terribly upset!
X  Never mind the monsters hitting you:  they just replace the charwomen.
X  Never play leapfrog with a unicorn.
X  Never step on a cursed engraving.
X***************
X*** 193,199 ****
X  They say that a potion of yogurt is a cancelled potion of sickness.
X  They say that a purple worm is not a baby purple dragon.
X  They say that a quivering blob tastes different than a gelatinous cube.
X- They say that a runed broadsword named Stormbringer attracts vortices.
X  They say that a scroll of summoning has other names.
X  They say that a shaman can bestow blessings but usually doesn't.
X  They say that a shaman will bless you for an eye of newt and wing of bat.
X--- 196,201 ----
X***************
X*** 326,331 ****
X--- 328,334 ----
X  They say that you should call your armor `rustproof'.
X  They say that you should name your dog Spuds to have a cool pet.
X  They say that you should name your weapon after your first monster kill.
X+ They say that you should not bother flaming USENETters, they're fire resistant.
X  They say that you should never introduce a rope golem to a succubus.
X  They say that you should never sleep near invisible ring wraiths.
X  They say that you should never try to leave the dungeon with a bag of gems.
X*** /tmp/tmp.1285	Sat May 28 21:14:01 1994
X--- ./dat/rumors.tru	Sun May 22 16:16:38 1994
X***************
X*** 1,3 ****
X--- 1,4 ----
X+ A babelfish might remind you of a wraith.
X  A blindfold can be very useful if you're telepathic.
X  A candelabrum affixed with seven candles shows the way with a magical light.
X  A crystal plate mail will not rust.
X***************
X*** 7,12 ****
X--- 8,14 ----
X  A potion of blindness lets you see invisible things.
X  A priest can get the gods to listen easily.
X  A priestess and a virgin you might be, but that unicorn won't care.
X+ A Ravenous Bugblatter Beast Of Traal seems to be concerned about your life.
X  A ring of conflict is a bad thing if there is a nurse in the room.
X  A short sword is not as good as a long sword.
X  A succubus will go farther than a nymph.
X***************
X*** 39,44 ****
X--- 41,47 ----
X  Don't mess with shopkeepers, or you'll get the Guild after you.
X  Dragons never whip their children; they wouldn't feel it!
X  Eat your carrots.  They're good for your eyes.
X+ Eating a creeping 42 is not really like eating a wraith.
X  Eating a freezing sphere is like eating a yeti.
X  Eating a killer bee is like eating a scorpion.
X  Eating a tengu is like eating a nymph.
X***************
X*** 58,63 ****
X--- 61,67 ----
X  Getting hungry?  Stop wearing rings!
X  Gods expect the best from their priesthood.
X  Gods look down their noses at demigods.
X+ Greek mythology is often very vivid.
X  Handle your flasks carefully -- there might be a ghost inside!
X  Holy water has many uses.
X  Hunger is a confusing experience for a dog!
X***************
X*** 108,115 ****
X--- 112,121 ----
X  Potions don't usually mix, but sometimes...
X  Psst!  It's done with mirrors!
X  Put on a ring of teleportation:  it will take you away from onslaught.
X+ Quantum mechanics know about quantum mechanics.
X  Rays aren't boomerangs, of course, but still...
X  Read the manual before entering the cave -- you might get killed otherwise.
X+ Reading Adams might be fun -- even if it doesn't help you.
X  Reading Herbert might be enlightening in one case.
X  Reading Tolkien might help you.
X  Reading scrolls after drinking booze can give confusing results.
X***************
X*** 168,173 ****
X--- 174,180 ----
X  They say that a polymorph trap is magic and magic protection prevents it.
X  They say that a potion of healing can cancel a potion of sickness.
X  They say that a potion of monster detection sometimes works both ways.
X+ They say that a runed broadsword named Stormbringer attracts vortices.
X  They say that a sink looks different from high above the floor.
X  They say that a summoned demon could improve your game.
X  They say that a tin of wraith meat is a rare dining experience.
X***************
X*** 187,192 ****
X--- 194,200 ----
X  They say that by listening carefully, you can hear a secret door!
X  They say that carrots and carrot juice may improve your vision.
X  They say that cave spiders are not considered expensive health food.
X+ They say that chemical knowledge is useless without proper equipment.
X  They say that demigods must leave behind their prized earthly possessions.
X  They say that disturbing a djinni can be a costly mistake.
X  They say that dragon scales can be quite enchanting.
X***************
X*** 249,254 ****
X--- 257,263 ----
X  They say that sinks run hot and cold and many flavors in between.
X  They say that snake charmers aren't charismatic, just musical.
X  They say that soldiers are always prepared and usually protected.
X+ They say that some bags are hungry.
X  They say that some eggs could hatch in your pack, lucky or not.
X  They say that some fire ants will make you a hot meal.
X  They say that some horns play hot music and others are too cool for words.
X*** /tmp/tmp.1285	Sat May 28 21:14:15 1994
X--- ./dat/castle.des	Thu Apr 21 19:03:38 1994
X***************
X*** 129,135 ****
X  OBJECT:object[3],random,(54,11)
X  OBJECT:object[3],random,(55,11)
X  # THE WAND OF WISHING in 1 of the 4 towers
X! OBJECT:'/',"wishing",place[0]
X  # Prevent monsters from eating it.  (@'s never eat objects)
X  ENGRAVING:place[0],burn,"Elbereth"
X  # The treasure of the lord
X--- 129,135 ----
X  OBJECT:object[3],random,(54,11)
X  OBJECT:object[3],random,(55,11)
X  # THE WAND OF WISHING in 1 of the 4 towers
X! OBJECT:'/',"wishing",place[0],uncursed,3,"Wand Of Might"
X  # Prevent monsters from eating it.  (@'s never eat objects)
X  ENGRAVING:place[0],burn,"Elbereth"
X  # The treasure of the lord
X*** /tmp/tmp.1285	Sat May 28 21:14:18 1994
X--- ./dat/gehennom.des	Wed Apr 27 18:14:14 1994
X***************
X*** 644,646 ****
X--- 644,1182 ----
X  MONSTER:'V',random,random
X  MONSTER:'V',random,random
X  STAIR:(63,15),up
X+ 
X+ #
X+ # ... and finally: a school
X+ # It is probably no coincidence that it is in hell :-)
X+ #
X+ # I had to comment out many pupils - weird things seem to happen when
X+ # there are more than 127 monsters (lev_comp bug/feature ?)
X+ 
X+ MAZE: "school", ' '
X+ MESSAGE: "You feel reminded of your days of learning ..."
X+ GEOMETRY: center,center
X+ 
X+ #         1         2         3         4         5         6         7
X+ # 23456789012345678901234567890123456789012345678901234567890123456789012345
X+ MAP
X+ |--|        |-------|-----|-----|-----|-----|-----|-----|-----|-----|------|
X+ |..+########+.......|.....|.....|.....|.....|.....|.....|.....|.....|......|
X+ |--|        |.......|.....|.....|.....|.....|.....|.....|.....|.....|......|
X+             |.......|.....|.....|.....|.....|.....|.....|.....|.....|......|
X+      #######+.......|--+--|--+--|--+--|--+--|--+--|--+--|--+--|--+--|--+---|
X+      #      |..............................................................|
X+      #      |..............................................................|
X+      #      |.......|--+--|--+--|--+--|--+--|--+--|--+--|--+--|--+--|--+---|
X+ |----+----| |.......|.....|.....|.....|.....|.....|.....|.....|.....|......|
X+ |.........| |.......|.....|.....|.....|.....|.....|.....|.....|.....|......|
X+ |.........| |.......|.....|.....|.....|.....|.....|.....|.....|.....|......|
X+ |.........| |.......|-----|-----|-----|-----|-----|-----|-----|-----|------|
X+ |.........| |..............................................................|
X+ |.........| |..............................................................|
X+ |.........| |.......|--+----------------------------+--|--+----------------|
X+ |.........| |.......|..................................|...................|
X+ |.........| |.......|..................................+...................|
X+ |.........| |.......|..................................|...............\...|
X+ |.........| |.......|..................................|...................|
X+ |---------| |--------------------------------------------------------------|
X+ ENDMAP
X+ 
X+ # the antechamber
X+ REGION:(01,01,02,01),unlit,"ordinary"
X+ # the actual school
X+ REGION:(13,01,74,18),lit,"ordinary"
X+ # the gym
X+ REGION:(01,09,09,18),lit,"ordinary"
X+ 
X+ # Stairs: up in the antechamber, down behind the principal's throne
X+ STAIR:(01,01),up
X+ STAIR:(72,17),down
X+ 
X+ # main doors
X+ DOOR:locked,(12,01)
X+ DOOR:locked,(12,04)
X+ # the classes
X+ DOOR:locked,(23,04)
X+ DOOR:locked,(29,04)
X+ DOOR:locked,(35,04)
X+ DOOR:locked,(41,04)
X+ DOOR:locked,(47,04)
X+ DOOR:locked,(53,04)
X+ DOOR:locked,(59,04)
X+ DOOR:locked,(65,04)
X+ DOOR:locked,(71,04)
X+ DOOR:locked,(23,07)
X+ DOOR:locked,(29,07)
X+ DOOR:locked,(35,07)
X+ DOOR:locked,(41,07)
X+ DOOR:locked,(47,07)
X+ DOOR:locked,(53,07)
X+ DOOR:locked,(59,07)
X+ DOOR:locked,(65,07)
X+ DOOR:locked,(71,07)
X+ # the Teacher's Room
X+ DOOR:locked,(23,14)
X+ DOOR:locked,(52,14)
X+ # the Principal's Office
X+ DOOR:locked,(58,14)
X+ DOOR:locked,(55,16)
X+ # the Gym
X+ DOOR:locked,(05,08)
X+ 
X+ # Engravings: the classes and other rooms
X+ ENGRAVING:(23,05),burn,"C101"
X+ ENGRAVING:(29,05),burn,"C102"
X+ ENGRAVING:(35,05),burn,"C103"
X+ ENGRAVING:(41,05),burn,"C104"
X+ ENGRAVING:(47,05),burn,"C105"
X+ ENGRAVING:(53,05),burn,"C106"
X+ ENGRAVING:(59,05),burn,"C107"
X+ ENGRAVING:(65,05),burn,"C108"
X+ ENGRAVING:(71,05),burn,"C109"
X+ ENGRAVING:(23,06),burn,"C201"
X+ ENGRAVING:(29,06),burn,"C202"
X+ ENGRAVING:(35,06),burn,"C203"
X+ ENGRAVING:(41,06),burn,"C204"
X+ ENGRAVING:(47,06),burn,"Library"
X+ ENGRAVING:(53,06),burn,"B111 (Biology)"
X+ ENGRAVING:(59,06),burn,"B115 (Chemical Storage)"
X+ ENGRAVING:(65,06),burn,"B116 (Chemistry)"
X+ ENGRAVING:(71,06),burn,"C311 (Computers)"
X+ ENGRAVING:(23,13),burn,"Teacher's Room"
X+ ENGRAVING:(52,13),burn,"Teacher's Room"
X+ ENGRAVING:(58,13),burn,"Principal's Office"
X+ ENGRAVING:(05,07),burn,"Abandon all hope, ye who enter here!"
X+ ENGRAVING:(11,01),burn,"KILLER HIGH SCHOOL"
X+ 
X+ # Room C101, in memorial of my old kind but tough English teacher 
X+ # Mr. Baumert
X+ MONSTER:'@',"teacher",(23,03),"Mr. Baumert",peaceful
X+ MONSTER:'@',"pupil",(21,01)
X+ MONSTER:'@',"pupil",(22,01)
X+ MONSTER:'@',"pupil",(23,01)
X+ MONSTER:'@',"pupil",(24,01)
X+ # MONSTER:'@',"pupil",(25,01)
X+ # MONSTER:'@',"pupil",(21,02)
X+ # MONSTER:'@',"pupil",(22,02)
X+ # MONSTER:'@',"pupil",(23,02)
X+ # MONSTER:'@',"pupil",(24,02)
X+ # MONSTER:'@',"pupil",(25,02)
X+ # MONSTER:'@',"pupil",(21,03)
X+ # MONSTER:'@',"pupil",(22,03)
X+ # MONSTER:'@',"pupil",(24,03)
X+ # MONSTER:'@',"pupil",(25,03)
X+ 
X+ # Room C102, Mr. Gier. I have always loved his blasts of sleep.
X+ MONSTER:'@',"teacher",(29,03),"Mr. Gier",hostile
X+ MONSTER:'@',"pupil",(27,01)
X+ MONSTER:'@',"pupil",(28,01)
X+ MONSTER:'@',"pupil",(29,01)
X+ MONSTER:'@',"pupil",(30,01)
X+ MONSTER:'@',"pupil",(31,01)
X+ # MONSTER:'@',"pupil",(27,02)
X+ # MONSTER:'@',"pupil",(28,02)
X+ # MONSTER:'@',"pupil",(29,02)
X+ # MONSTER:'@',"pupil",(30,02)
X+ # MONSTER:'@',"pupil",(31,02)
X+ # MONSTER:'@',"pupil",(27,03)
X+ # MONSTER:'@',"pupil",(28,03)
X+ # MONSTER:'@',"pupil",(30,03)
X+ # MONSTER:'@',"pupil",(31,03)
X+ 
X+ # Room C103. Mrs. Dickler. Her capabilities in explaining maths 
X+ # were always of use.
X+ MONSTER:'@',"teacher",(35,03),"Mrs. Dickler"
X+ MONSTER:'@',"pupil",(33,01)
X+ MONSTER:'@',"pupil",(34,01)
X+ MONSTER:'@',"pupil",(35,01)
X+ MONSTER:'@',"pupil",(36,01)
X+ # MONSTER:'@',"pupil",(37,01)
X+ # MONSTER:'@',"pupil",(33,02)
X+ # MONSTER:'@',"pupil",(34,02)
X+ # MONSTER:'@',"pupil",(35,02)
X+ # MONSTER:'@',"pupil",(36,02)
X+ # MONSTER:'@',"pupil",(37,02)
X+ # MONSTER:'@',"pupil",(33,03)
X+ # MONSTER:'@',"pupil",(34,03)
X+ # MONSTER:'@',"pupil",(36,03)
X+ # MONSTER:'@',"pupil",(37,03)
X+ 
X+ # Room C104. Mrs. Wessel. Thank you for being so kind ...
X+ MONSTER:'@',"teacher",(41,03),"Mrs. Wessel"
X+ MONSTER:'@',"pupil",(39,01)
X+ MONSTER:'@',"pupil",(40,01)
X+ MONSTER:'@',"pupil",(41,01)
X+ MONSTER:'@',"pupil",(42,01)
X+ # MONSTER:'@',"pupil",(43,01)
X+ # MONSTER:'@',"pupil",(39,02)
X+ # MONSTER:'@',"pupil",(40,02)
X+ # MONSTER:'@',"pupil",(41,02)
X+ # MONSTER:'@',"pupil",(42,02)
X+ # MONSTER:'@',"pupil",(43,02)
X+ # MONSTER:'@',"pupil",(39,03)
X+ # MONSTER:'@',"pupil",(40,03)
X+ # MONSTER:'@',"pupil",(42,03)
X+ # MONSTER:'@',"pupil",(43,03)
X+ 
X+ # C105. Mr. Koerfgen - I have always loved your acid blasts
X+ # Guess why there are so many corpses here :-)
X+ MONSTER:'@',"teacher",(47,03),"Mr. Koerfgen",hostile
X+ OBJECT:'/',"acid",(47,03)
X+ MONSTER:'@',"pupil",(45,01)
X+ OBJECT:'%',"corpse",(46,01),"pupil",0
X+ MONSTER:'@',"pupil",(47,01)
X+ OBJECT:'%',"corpse",(48,01),"pupil",0
X+ MONSTER:'@',"pupil",(49,01)
X+ OBJECT:'%',"corpse",(45,02),"pupil",0
X+ # MONSTER:'@',"pupil",(46,02)
X+ OBJECT:'%',"corpse",(47,02),"pupil",0
X+ # MONSTER:'@',"pupil",(48,02)
X+ OBJECT:'%',"corpse",(49,02),"pupil",0
X+ # MONSTER:'@',"pupil",(45,03)
X+ OBJECT:'%',"corpse",(46,03),"pupil",0
X+ # MONSTER:'@',"pupil",(48,03)
X+ OBJECT:'%',"corpse",(49,03),"pupil",0
X+ 
X+ # C106 is the residence of Mr. Schuster.
X+ MONSTER:'@',"teacher",(53,03),"Mr. Schuster"
X+ MONSTER:'@',"pupil",(51,01)
X+ MONSTER:'@',"pupil",(52,01)
X+ MONSTER:'@',"pupil",(53,01)
X+ MONSTER:'@',"pupil",(54,01)
X+ MONSTER:'@',"pupil",(55,01)
X+ # MONSTER:'@',"pupil",(51,02)
X+ # MONSTER:'@',"pupil",(52,02)
X+ # MONSTER:'@',"pupil",(53,02)
X+ # MONSTER:'@',"pupil",(54,02)
X+ # MONSTER:'@',"pupil",(55,02)
X+ # MONSTER:'@',"pupil",(51,03)
X+ # MONSTER:'@',"pupil",(52,03)
X+ # MONSTER:'@',"pupil",(54,03)
X+ # MONSTER:'@',"pupil",(55,03)
X+ 
X+ # The room C107 is dedicated to the memorial of Mr. Marre who 
X+ # perhaps was the most amusing and kind teacher known to mankind ...
X+ MONSTER:'@',"teacher",(53,03),"Mr. Marre",peaceful
X+ MONSTER:'@',"pupil",(51,01)
X+ MONSTER:'@',"pupil",(52,01)
X+ MONSTER:'@',"pupil",(53,01)
X+ MONSTER:'@',"pupil",(54,01)
X+ MONSTER:'@',"pupil",(55,01)
X+ MONSTER:'@',"pupil",(51,02)
X+ MONSTER:'@',"pupil",(52,02)
X+ # MONSTER:'@',"pupil",(53,02)
X+ # MONSTER:'@',"pupil",(54,02)
X+ # MONSTER:'@',"pupil",(55,02)
X+ # MONSTER:'@',"pupil",(51,03)
X+ # MONSTER:'@',"pupil",(52,03)
X+ # MONSTER:'@',"pupil",(54,03)
X+ # MONSTER:'@',"pupil",(55,03)
X+ 
X+ # Room C108 is the torture chamber of another funny chemistry teacher,
X+ # Mr. Ennen
X+ MONSTER:'@',"teacher",(65,03),"Mr. Ennen"
X+ MONSTER:'@',"pupil",(63,01)
X+ MONSTER:'@',"pupil",(64,01)
X+ MONSTER:'@',"pupil",(65,01)
X+ MONSTER:'@',"pupil",(66,01)
X+ MONSTER:'@',"pupil",(67,01)
X+ MONSTER:'@',"pupil",(63,02)
X+ # MONSTER:'@',"pupil",(64,02)
X+ # MONSTER:'@',"pupil",(65,02)
X+ # MONSTER:'@',"pupil",(66,02)
X+ # MONSTER:'@',"pupil",(67,02)
X+ # MONSTER:'@',"pupil",(63,03)
X+ # MONSTER:'@',"pupil",(64,03)
X+ # MONSTER:'@',"pupil",(66,03)
X+ # MONSTER:'@',"pupil",(67,03)
X+ 
X+ # Room C109 is dedicated to Mr. Lewald, our former principal who was
X+ # so kind to all - perhaps too kind ...
X+ # Should me make him a principal in MONSTER: or not?
X+ MONSTER:'@',"teacher",(71,03),"Mr. Lewald"
X+ MONSTER:'@',"pupil",(69,01)
X+ MONSTER:'@',"pupil",(70,01)
X+ MONSTER:'@',"pupil",(71,01)
X+ MONSTER:'@',"pupil",(72,01)
X+ MONSTER:'@',"pupil",(73,01)
X+ # MONSTER:'@',"pupil",(74,01)
X+ # MONSTER:'@',"pupil",(69,02)
X+ # MONSTER:'@',"pupil",(70,02)
X+ # MONSTER:'@',"pupil",(71,02)
X+ # MONSTER:'@',"pupil",(72,02)
X+ # MONSTER:'@',"pupil",(73,02)
X+ # MONSTER:'@',"pupil",(74,02)
X+ # MONSTER:'@',"pupil",(69,03)
X+ # MONSTER:'@',"pupil",(70,03)
X+ # MONSTER:'@',"pupil",(72,03)
X+ # MONSTER:'@',"pupil",(73,03)
X+ # MONSTER:'@',"pupil",(74,03)
X+ 
X+ # Room C201 - Mr. Bitterberg
X+ # Mr. Bitterberg, should you ever read this, I congratulate you for finally
X+ # being convinced to use The One True Operating System, UNIX, and The One
X+ # True Computer Game, Nethack.
X+ MONSTER:'@',"teacher",(23,08),"Mr. Bitterberg"
X+ MONSTER:'@',"pupil",(21,08)
X+ MONSTER:'@',"pupil",(22,08)
X+ MONSTER:'@',"pupil",(24,08)
X+ # MONSTER:'@',"pupil",(25,08)
X+ # MONSTER:'@',"pupil",(21,09)
X+ # MONSTER:'@',"pupil",(22,09)
X+ # MONSTER:'@',"pupil",(23,09)
X+ # MONSTER:'@',"pupil",(24,09)
X+ # MONSTER:'@',"pupil",(25,09)
X+ # MONSTER:'@',"pupil",(21,10)
X+ # MONSTER:'@',"pupil",(22,10)
X+ # MONSTER:'@',"pupil",(23,10)
X+ # MONSTER:'@',"pupil",(24,10)
X+ # MONSTER:'@',"pupil",(25,10)
X+ 
X+ # Room C202 - Mr. Ellerhold
X+ # He teaches Music, yet he is the most demanding teacher of the whole
X+ # school, much to the dislike of the pupils (and that's the reason
X+ # why there are so few pupils left).
X+ MONSTER:'@',"teacher",(29,08),"Mr. Ellerhold"
X+ MONSTER:'@',"pupil",(27,08)
X+ MONSTER:'@',"pupil",(28,08)
X+ 
X+ # Room C203 - Mr. Hartstone
X+ # He is very funny, in fact he is the teacher most entertaining to listen
X+ # to ...
X+ MONSTER:'@',"teacher",(35,08),"Mr. Hartstone",peaceful
X+ MONSTER:'@',"pupil",(33,08)
X+ MONSTER:'@',"pupil",(34,08)
X+ MONSTER:'@',"pupil",(36,08)
X+ MONSTER:'@',"pupil",(37,08)
X+ MONSTER:'@',"pupil",(33,09)
X+ MONSTER:'@',"pupil",(34,09)
X+ # MONSTER:'@',"pupil",(35,09)
X+ # MONSTER:'@',"pupil",(36,09)
X+ # MONSTER:'@',"pupil",(37,09)
X+ # MONSTER:'@',"pupil",(33,10)
X+ # MONSTER:'@',"pupil",(34,10)
X+ # MONSTER:'@',"pupil",(35,10)
X+ # MONSTER:'@',"pupil",(36,10)
X+ # MONSTER:'@',"pupil",(37,10)
X+ 
X+ # Room C204 - Mrs. Ludwig. She is one (perhaps the only) exception to
X+ # the rule regarding PE teachers stated below ...
X+ MONSTER:'@',"teacher",(41,08),"Mrs. Ludwig",peaceful
X+ MONSTER:'@',"pupil",(39,08)
X+ MONSTER:'@',"pupil",(40,08)
X+ MONSTER:'@',"pupil",(42,08)
X+ MONSTER:'@',"pupil",(43,08)
X+ MONSTER:'@',"pupil",(39,09)
X+ MONSTER:'@',"pupil",(40,09)
X+ # MONSTER:'@',"pupil",(41,09)
X+ # MONSTER:'@',"pupil",(42,09)
X+ # MONSTER:'@',"pupil",(43,09)
X+ # MONSTER:'@',"pupil",(39,10)
X+ # MONSTER:'@',"pupil",(40,10)
X+ # MONSTER:'@',"pupil",(41,10)
X+ # MONSTER:'@',"pupil",(42,10)
X+ # MONSTER:'@',"pupil",(43,10)
X+ 
X+ # The library, also the residence of Mrs. Meurer 
X+ MONSTER:'@',"teacher",(47,08),"Mrs. Meurer"
X+ OBJECT:'?',random,(45,08)
X+ OBJECT:'?',random,(46,08)
X+ OBJECT:'+',random,(47,08)
X+ OBJECT:'?',random,(48,08)
X+ OBJECT:'?',random,(49,08)
X+ OBJECT:'?',random,(45,09)
X+ OBJECT:'?',random,(46,09)
X+ OBJECT:'+',random,(47,09)
X+ OBJECT:'?',random,(48,09)
X+ OBJECT:'?',random,(49,09)
X+ OBJECT:'?',random,(45,10)
X+ OBJECT:'?',random,(46,10)
X+ OBJECT:'+',random,(47,10)
X+ OBJECT:'?',random,(48,10)
X+ OBJECT:'?',random,(49,10)
X+ 
X+ # The biology room (B111), occupied by Mr. Overbeck, who always was
X+ # kind and always had time for a joke
X+ # Mr. Overbeck is not peaceful - so let's have fun with polymorph ...
X+ MONSTER:'@',"teacher",(53,08),"Mr. Overbeck"
X+ OBJECT:'/',"polymorph",(53,08)
X+ # He has a wand of polymorph and always was *very* generous in its usage ...
X+ # the following are the (former) pupils.
X+ MONSTER:random,random,(51,08)
X+ MONSTER:random,random,(52,08)
X+ MONSTER:random,random,(54,08)
X+ MONSTER:random,random,(55,08)
X+ MONSTER:random,random,(51,09)
X+ MONSTER:random,random,(52,09)
X+ MONSTER:random,random,(53,09)
X+ # MONSTER:random,random,(54,09)
X+ # MONSTER:random,random,(55,09)
X+ # MONSTER:random,random,(51,10)
X+ # MONSTER:random,random,(52,10)
X+ # MONSTER:random,random,(53,10)
X+ # MONSTER:random,random,(54,10)
X+ # MONSTER:random,random,(55,10)
X+ 
X+ # The chemical storage (B115)
X+ OBJECT:'!',random,(57,08)
X+ OBJECT:'!',random,(58,08)
X+ OBJECT:'!',random,(59,08)
X+ OBJECT:'!',random,(60,08)
X+ OBJECT:'!',random,(61,08)
X+ OBJECT:'!',random,(57,09)
X+ OBJECT:'!',random,(58,09)
X+ OBJECT:'!',random,(59,09)
X+ OBJECT:'!',random,(60,09)
X+ OBJECT:'!',random,(61,09)
X+ OBJECT:'!',random,(57,10)
X+ OBJECT:'!',random,(58,10)
X+ OBJECT:'!',random,(59,10)
X+ OBJECT:'!',random,(60,10)
X+ OBJECT:'!',random,(61,10)
X+ 
X+ # The chemistry room (B116) is occupied by Mr. Klomp, the teacher I believe to
X+ # be most balanced between teaching, kindness and humour.
X+ MONSTER:'@',"teacher",(65,08),"Mr. Klomp",peaceful
X+ MONSTER:'@',"pupil",(63,08)
X+ MONSTER:'@',"pupil",(64,08)
X+ MONSTER:'@',"pupil",(66,08)
X+ MONSTER:'@',"pupil",(67,08)
X+ MONSTER:'@',"pupil",(63,09)
X+ MONSTER:'@',"pupil",(64,09)
X+ MONSTER:'@',"pupil",(65,09)
X+ # MONSTER:'@',"pupil",(66,09)
X+ # MONSTER:'@',"pupil",(67,09)
X+ # MONSTER:'@',"pupil",(63,10)
X+ # MONSTER:'@',"pupil",(64,10)
X+ # MONSTER:'@',"pupil",(65,10)
X+ # MONSTER:'@',"pupil",(66,10)
X+ # MONSTER:'@',"pupil",(67,10)
X+ 
X+ # The computer room (C311), and, with it, Mr. Alers
X+ MONSTER:'@',"teacher",(71,08),"Mr. Alers",peaceful
X+ MONSTER:'@',"pupil",(69,08)
X+ MONSTER:'@',"pupil",(70,08)
X+ MONSTER:'@',"pupil",(72,08)
X+ MONSTER:'@',"pupil",(73,08)
X+ MONSTER:'@',"pupil",(74,08)
X+ MONSTER:'@',"pupil",(69,09)
X+ MONSTER:'@',"pupil",(70,09)
X+ MONSTER:'@',"pupil",(71,09)
X+ MONSTER:'@',"pupil",(72,09)
X+ # MONSTER:'@',"pupil",(73,09)
X+ # MONSTER:'@',"pupil",(74,09)
X+ # MONSTER:'@',"pupil",(69,10)
X+ # MONSTER:'@',"pupil",(70,10)
X+ # MONSTER:'@',"pupil",(71,10)
X+ # MONSTER:'@',"pupil",(72,10)
X+ # MONSTER:'@',"pupil",(73,10)
X+ # MONSTER:'@',"pupil",(74,08)
X+ OBJECT:'(',"pack of floppies",(69,08)
X+ OBJECT:'(',"pack of floppies",(70,08)
X+ OBJECT:'(',"pack of floppies",(71,08)
X+ OBJECT:'(',"pack of floppies",(72,08)
X+ OBJECT:'(',"pack of floppies",(73,08)
X+ OBJECT:'(',"pack of floppies",(74,08)
X+ OBJECT:'(',"pack of floppies",(69,09)
X+ OBJECT:'(',"pack of floppies",(70,09)
X+ OBJECT:'(',"pack of floppies",(71,09)
X+ OBJECT:'(',"pack of floppies",(72,09)
X+ OBJECT:'(',"pack of floppies",(73,09)
X+ OBJECT:'(',"pack of floppies",(74,09)
X+ OBJECT:'(',"pack of floppies",(69,10)
X+ OBJECT:'(',"pack of floppies",(70,10)
X+ OBJECT:'(',"pack of floppies",(71,10)
X+ OBJECT:'(',"pack of floppies",(72,10)
X+ OBJECT:'(',"pack of floppies",(73,10)
X+ OBJECT:'(',"pack of floppies",(74,10)
X+ 
X+ # the Teacher's Room
X+ MONSTER:'@',"teacher",(30,16),"Mr. Biciste"
X+ 
X+ # the Principal
X+ MONSTER:'@',"principal",(71,17),"Mr. Gemein"
X+ MONSTER:'@',"teacher",(70,17),"Mr. Haas"
X+ 
X+ # the Gym
X+ # it contains such crap as Mr. Geis and Mrs. Haastert
X+ # Remember the old rule that all PE teachers are sadists.
X+ # (with very few exceptions)
X+ MONSTER:'@',"teacher",(02,12),"Mr. Geis"
X+ MONSTER:'@',"teacher",(08,15),"Mrs. Haastert"
X+ MONSTER:'@',"pupil",(01,09)
X+ MONSTER:'@',"pupil",(02,10)
X+ MONSTER:'@',"pupil",(03,11)
X+ MONSTER:'@',"pupil",(04,12)
X+ MONSTER:'@',"pupil",(05,13)
X+ MONSTER:'@',"pupil",(06,14)
X+ MONSTER:'@',"pupil",(07,15)
X+ MONSTER:'@',"pupil",(08,16)
X+ MONSTER:'@',"pupil",(09,17)
X+ # MONSTER:'@',"pupil",(01,18)
X+ # MONSTER:'@',"pupil",(02,09)
X+ # MONSTER:'@',"pupil",(01,10)
X+ # MONSTER:'@',"pupil",(01,11)
X+ # MONSTER:'@',"pupil",(01,12)
X+ # MONSTER:'@',"pupil",(01,13)
X+ # This is the ultimate fate of those addicted to sports ...
X+ MONSTER:'Z',"human zombie",(01,14)
X+ MONSTER:'Z',"human zombie",(01,15)
X+ MONSTER:'Z',"human zombie",(01,16)
X+ MONSTER:'Z',"human zombie",(01,17)
X+ MONSTER:'Z',"skeleton",(01,18)
X+ 
X+ # The Computer Land
X+ MAZE: "compu", ' '
X+ GEOMETRY: center,center
X+ #         1         2         3         4         5         6         7
X+ # 23456789012345678901234567890123456789012345678901234567890123456789012345
X+ MAP
X+ |--------------------------------------------------------------------------|
X+ |....|.....................................................................|
X+ |-+--|.....................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |..........................................................................|
X+ |.....................................................................|--+-|
X+ |.....................................................................|....|
X+ |--------------------------------------------------------------------------|
X+ ENDMAP
X+ 
X+ DOOR:locked,(02,02)
X+ STAIR:(01,01),up
X+ DOOR:locked,(73,17)
X+ STAIR:(74,18),down
X+ 
X+ MONSTER:'x',"PDP-9",random
X+ MONSTER:'x',"PDP-11",random
X+ MONSTER:'x',"VAX",random
X+ MONSTER:'x',"Cray",random
X+ MONSTER:'&',"news daemon",random
X+ MONSTER:'&',"printer daemon",random
X+ MONSTER:'&',"UNIX Kernel",random
X+ 
X+ MONSTER:'x',"bug",random
X+ MONSTER:'x',"bug",random
X+ MONSTER:'x',"bug",random
X+ MONSTER:'x',"bug",random
X+ MONSTER:'x',"bug",random
X+ MONSTER:'x',"bug",random
X+ MONSTER:'x',"heisenbug",random
X+ MONSTER:'x',"heisenbug",random
X+ 
X+ OBJECT:'=',"timely backup",random
X+ OBJECT:'?',"root password detection",random
X+ OBJECT:'"',"amulet of data storage",random
X+ OBJECT:'/',"bugging",random
X+ 
X*** /tmp/tmp.1285	Sat May 28 21:14:24 1994
X--- ./dat/data.base	Sun May 22 19:51:39 1994
X***************
X*** 102,107 ****
X--- 102,136 ----
X  		pentacle).   Traditionally, the  athame  is  a double-edged,
X  		black-handled,  cross-hilted   dagger  of  between  six  and
X  		eighteen inches length.
X+ babelfish
X+ 		"The Babel fish," said The Hitch  Hiker's Guide  to  the  Galaxy
X+ 		quietly,  "is  small,  yellow  and  leech-like, and probably the
X+ 		oddest thing in the Universe. It feeds on brainwave  energy  not
X+ 		from  its  carrier  but  from  those around  it.  It absorbs all
X+ 		unconscious mental frequencies  from this  brainwave  energy  to
X+ 		nourish  itself  with.  It then  excretes  into  the mind of its
X+ 		carrier a telepathic matrix formed  by  combining the  conscious
X+ 		thought frequencies with nerve signals picked up from the speech
X+ 		centres of the brain which  has  supplied  them.  The  practical
X+ 		upshot of all this is that if you stick a Babel fish in your ear
X+ 		you can instantly understand anything said to you in any form of
X+ 		language.  The  speech  patterns  you actually  hear  decode the
X+ 		brainwave matrix which has been fed into your mind by your Babel
X+ 		fish.
X+ 		[...] 
X+ 		"Meanwhile, the poor Babel  fish, by  effectively  removing  all
X+ 		barriers  to communication between different races and cultures,
X+ 		has caused more and bloddier wars  than  anything  else  in  the
X+ 		history of creation."
X+ 		[ The Hitchhiker's Guide To The Galaxy, by Douglas Adams ]
X+ bug
X+ 	 	n. An unwanted  and  unintended  property of a  program or piece
X+ 	 	of hardware, esp. one that causes it to malfunction.  Antonym of
X+ 	  	{feature}.   Examples: "There's a bug  in the editor:  it writes
X+ 		things out backwards." "The system crashed because of a hardware
X+ 	  	bug."   "Fred is a winner, but he has a few bugs" (i.e., Fred is
X+ 	   	a good guy, but he has a few personality problems).
X+ 		[ The Jargon File, version 3.0.0 ]
X  *centaur
X  		Of all the monsters put together by  the  Greek  imagination
X  		the  Centaurs (Kentauroi) constituted a class in themselves.
X***************
X*** 144,149 ****
X--- 173,313 ----
X  		sicken and die.
X  		[ Mythical Beasts by Deirdre Headon (The Leprechaun Library)
X  		  and other sources ]
X+ creeping 42
X+ 		These are the incarnations of The Answer (although nobody
X+ 		knows the question). Eating the dead body of one gives
X+ 		you a short, but insightful glimpse on the answer, thereby
X+ 		greatly increasing your experience in life. However the
X+ 		shock will cause your vision to blur temporarily.
X+ Cray
X+ 		:cray: /kray/ n. 1. (properly, capitalized) One of the line of
X+ 		supercomputers designed by Cray Research. 2.Any supercomputer at
X+ 		all.  3. The {canonical} {number-crunching} machine.
X+ 
X+ 		The term is actually the lowercased last name of Seymour Cray, a
X+ 		noted computer architect and co-founder of the company. Numerous
X+ 		vivid legends surround him, some true and some admittedly invented
X+ 		by Cray Research brass to shape their corporate culture and image.
X+ 		[ The Jargon File, version 3.0.0 ]
X+ Deep Thought
X+ 		"O people waiting in the Shadow of Deep Thought!" he cried  out.
X+ 		"Honoured Descendants of Vroomfondel and Majikthise,the Greatest
X+ 		and Most Truly Interesting Pundits the Universe has  ever  known
X+ 		... The Time of Waiting is over!"
X+ 		[...] 
X+ 		"Seven and a half million years our  race  has waited  for  this
X+ 		Great  and  Hopefully Enlightening Day!" cried the cheer leader.
X+ 		"The Day of the Answer!"
X+ 		[...] 
X+ 		"The time is nearly upon us," said one, and Arthur was surprised
X+ 		to see a word suddenly materialize in thin air just by the man's
X+ 		neck. The word was Loonquawl, and it flashed a couple  of  times
X+ 		and then disappeared again. Before Arthur was able to assimilate
X+ 		this the other man spoke and the word  Phouchg  appeared by  his
X+ 		neck.
X+  
X+ 		"Seventy-five thousand generations ago, our ancestors  set  this
X+ 		program in motion," the second man said,"and in all that time we
X+ 		will be the first to hear the computer speak."
X+  
X+ 		"An awesome prospect, Phouchg," agreed the first man, and Arthur
X+ 		suddenly   realized   that  he  was  watching  a recording  with
X+ 		subtitles.
X+  
X+ 		"We are the ones who will hear," said Phouchg,"the answer to the
X+ 		great question of Life ...!"
X+  
X+ 		"The Universe ...!" said Loonquawl.
X+  
X+ 		"And Everything ...!"
X+  
X+ 		"Shhh," said Loonquawl with  a  slight  gesture, "I  think  Deep
X+ 		Thought is preparing to speak!"
X+  
X+ 		There was a  moment's expectant  pause whilst panels slowly came
X+ 		to life on the front of  the  console. Lights flashed on and off
X+ 		experimentally and settled down into a businesslike  pattern.  A
X+ 		soft low hum came from the communication channel.
X+  
X+ 		"Good morning," said Deep Thought at last.
X+  
X+ 		"Er ... Good morning, O Deep Thought," said Loonquawl nervously,
X+ 		"do you have ... er, that is ..."
X+  
X+ 		"An answer for you?" interrupted Deep Thought majestically."Yes.
X+ 		I have."
X+  
X+ 		The two men shivered with expectancy. Their waiting had not been
X+ 		in vain.
X+  
X+ 		"There really is one?" breathed Phouchg.
X+  
X+ 		"There really is one," confirmed Deep Thought.
X+  
X+ 		"To Everything? To the great Question of Life, the  Universe and
X+ 		Everything?"
X+  
X+ 		"Yes."
X+  
X+ 		Both of the men had been trained for this moment,their lives had
X+ 		been  a  preparation  for it, they had been selected at birth as
X+ 		those who would witness the  answer,  but  even  so  they  found
X+ 		themselves gasping and squirming like excited children.
X+  
X+ 		"And you're ready to give it to us?" urged Loonquawl.
X+  
X+ 		"I am."
X+  
X+ 		"Now?"
X+  
X+ 		"Now," said Deep Thought.
X+  
X+ 		They both licked their dry lips.
X+  
X+ 		"Though I don't think," added Deep Thought,"that you're going to
X+ 		like it."
X+  
X+ 		"Doesn't matter!" said Phouchg. "We must know it! Now!"
X+  
X+ 		"Now?" inquired Deep Thought.
X+  
X+ 		"Yes! Now ..."
X+  
X+ 		"Alright," said the computer and settled into silence again. The
X+ 		two men fidgeted. The tension was unbearable.
X+  
X+ 		"You're really not going to like it," observed Deep Thought.
X+  
X+ 		"Tell us!"
X+  
X+ 		"Alright," said Deep Thought. "The Answer to the  Great Question
X+ 		..."
X+  
X+ 		"Yes ...!"
X+  
X+ 		"Of Life, the Universe and Everything ..." said Deep Thought.
X+  
X+ 		"Yes ...!"
X+  
X+ 		"Is ..." said Deep Thought, and paused.
X+  
X+ 		"Yes ...!"
X+  
X+ 		"Is ..."
X+  
X+ 		"Yes ...!!!...?"
X+  
X+ 		"Forty-two," said Deep Thought, with infinite majesty and calm.
X+ 
X+ 		[ The Hitchhiker's Guide To The Galaxy by Douglas Adams ]
X+ Douglas Adams
X+ 		Note to the real Douglas Adams: should you really ever read
X+ 		this text, please do not get upset about how you and your
X+ 		characters are represented in this work, but rather remember
X+ 		that it was you (yes, *you*) who started all this stuff!
X+ 		"All IMNSHO, constructive comments by e-mail, flame and
X+ 		murder threats to /dev/null, don't bother with flames,
X+ 		I'm fire resistant."
X  *dragon
X  		In the West  the dragon was  the  natural  enemy   of   man.
X  		Although  preferring  to live in bleak and desolate regions,
X***************
X*** 155,160 ****
X--- 319,347 ----
X  		thrashings  of  its  tail,  the  most   deadly  part  of its
X  		serpent-like body.
X  		[Mythical Beasts by Deirdre Headon (The Leprechaun Library)]
X+ Eddie
X+ 		"Hi there! This is Eddie your shipboard computer, and I'm feeling
X+ 		just  great  guys,  and  I know I'm just going to get a bundle of
X+ 		kicks out of any programme you care to run through me."
X+  
X+ 		Arthur looked inquiringly at Trillian. She motioned him  to  come
X+ 		on in but keep quiet.
X+  
X+ 		"Computer,"  said  Zaphod,  "tell  us  again  what  our   present
X+ 		trajectory is."
X+  
X+ 		"A real pleasure feller," it burbled, "we are currently in  orbit
X+ 		at an altitude of three hundred miles around the legendary planet
X+ 		of Magrathea."
X+  
X+ 		"Proving nothing," said Ford. "I wouldn't trust that computer  to
X+ 		speak my weight."
X+  
X+ 	"	I can do that for you, sure," enthused  the  computer,  punching
X+ 		out  more  tickertape.  "I  can  even  work  out  you personality
X+ 		problems to ten decimal places if it will help."
X+ 
X+ 			[ The Hitchhiker's Guide To The Galaxy, by Douglas Adams]
X  *elemental
X  		Elementals are manifestations of the  basic  nature  of  the
X  		universe.   There  are four known forms of elementals:  air,
X***************
X*** 162,167 ****
X--- 349,376 ----
X  		necessity  for  a fifth type, the spirit elemental, but none
X  		have ever been encountered, at least on this  plane  of  ex-
X  		istence.
X+ Ford Perfect
X+ Ford Prefect
X+ 		By a curious coincidence,  None  at  all  is  exactly  how  much
X+ 		suspicion  the ape-descendant  Arthur  Dent  had that one of his
X+ 		closest friends was not descended from an ape, but was  in  fact
X+ 		from  a  small planet in the vicinity of Betelgeuse and not from
X+ 		Guildford as he usually claimed.
X+  
X+ 		Arthur Dent had never, ever suspected this.
X+  
X+ 		This friend of his had first arrived on the planet some  fifteen
X+ 		Earth  years previously, and he had worked hard to blend himself
X+ 		into Earth society - with, it must be said,  some  success.  For
X+ 		instance he had spent those fifteen years pretending to be an out
X+ 		of work actor, which was plausible enough.
X+  
X+ 		He had made one careless blunder though,because he had skimped a
X+ 		bit on his preparatory research. The information he had gathered
X+ 		had  led him to  choose the name "Ford Prefect" [sic]  as  being
X+ 		inconspicuous.
X+ 
X+ 		[ The Hitchhiker's Guide To The Galaxy, by Douglas Adams]
X  *giant
X  giant humanoid
X  		Giants have always walked the earth, though they are rare in
X***************
X*** 212,217 ****
X--- 421,441 ----
X  gunyoki
X  		The samurai's last meal  before battle.  It was usually made
X  		up of cooked chestnuts, dried seaweed, and sake.
X+ heisenbug
X+ 		:heisenbug:
X+ 		/hi:'zen-buhg/ [from Heisenberg's Uncertainty
X+ 		Principle in quantum physics] n. A bug that disappears or alters
X+ 		its behavior when one attempts to probe or isolate it.(This usage
X+ 		is not even particularly fanciful; the use of a debugger sometimes
X+ 		alters a program's operating environment significantly enough
X+ 		that buggy code, such as that which relies on the values of
X+ 		uninitialized memory, behaves quite differently.)  Antonym of
X+ 		{Bohr bug}; see also {mandelbug}, {schroedinbug}.  In C,
X+ 		nine out of ten heisenbugs result from uninitialized auto
X+  		variables, {fandango on core} phenomena (esp. lossage related
X+ 		to corruption of the malloc {arena}) or errors that {smash
X+ 		the stack}.
X+ 		[ The Jargon File, version 3.0.0 ]
X  hobbit
X  		Hobbits  are  an unobtrusive  but very ancient people,  more
X  		numerous formerly than they are today;  for they love  peace
X***************
X*** 323,329 ****
X  		for Elves at any time.
X  koto
X  		A Japanese harp.
X! leprechaun
X  		The Irish Leprechaun is the Faeries' shoemaker and is  known
X  		under  various names  in different parts of Ireland:  Cluri-
X  		caune in Cork, Lurican in Kerry, Lurikeen in Kildare and Lu-
X--- 547,553 ----
X  		for Elves at any time.
X  koto
X  		A Japanese harp.
X! *leprechaun*
X  		The Irish Leprechaun is the Faeries' shoemaker and is  known
X  		under  various names  in different parts of Ireland:  Cluri-
X  		caune in Cork, Lurican in Kerry, Lurikeen in Kildare and Lu-
X***************
X*** 381,386 ****
X--- 605,611 ----
X  		of _mithril_ did not tarnish  or grow dim.
X  			   [ The Fellowship of the Ring, by J.R.R. Tolkien ]
X  mumak*
X+ giant mumak
X  		... the Mumak of Harad was indeed  a beast of vast bulk, and
X  		the like of him  does not walk now in Middle-Earth;  his kin
X  		that live still in latter days are but memories of his girth
X***************
X*** 412,417 ****
X--- 637,665 ----
X  					   [ The Hobbit, by J.R.R. Tolkien ]
X  osaku
X  		The osaku is a small tool for picking locks.
X+ PDP-*
X+ 		:PDP-10:
X+ 		[Programmed Data Processor model 10] n. The machine that
X+ 		made timesharing real. It looms large in hacker folklore because
X+ 		of its adoption in the mid-1970s by many university computing
X+ 		facilities and research labs,including the MIT AI Lab, Stanford,
X+ 		and CMU.  Some aspects of the instruction set (most notably the
X+ 		bit-field instructions) are still considered unsurpassed. The 10
X+ 		was eventually eclipsed by the VAX machines (descendants of the
X+ 		PDP-11) when DEC recognized that the 10 and VAX product lines were
X+ 		competing with each other and decided to concentrate its software
X+ 		development effort on the more profitable VAX. The machine was
X+ 		finally dropped from DEC's line in 1983,following the failure of
X+ 		the Jupiter Project at DEC to build a viable new model.  (Some
X+ 		attempts by other companies to market clones came to nothing;see
X+ 		{Foonly} and {Mars}.)  This event spelled the doom of
X+ 		{{ITS}} and the technical cultures that had spawned the original
X+ 		Jargon File, but by mid-1991 it had become something of a badge of
X+ 		honorable old-timerhood among hackers to have cut one's teeth on a
X+ 		PDP-10.  See {{TOPS-10}}, {{ITS}}, {AOS}, {BLT}, {DDT},
X+ 		{DPB}, {EXCH}, {HAKMEM}, {JFCL}, {LDB}, {pop},
X+ 		{push}, {Appendix A}.
X+ 		[ The Jargon File, version 3.0.0 ]
X  piercer
X  		Ye Piercer doth look like unto  a  stalactyte,  and  hangeth
X  		from  the  roofs of caves and caverns.  Unto the height of a
X***************
X*** 421,426 ****
X--- 669,688 ----
X  		it  to kill and devour it, though in any other way they move
X  		but exceeding slow.
X  						   [ the Bestiary of Xygag ]
X+ Prostetnik Vogon Jeltz
X+ 		Prostetnic Vogon Jeltz was not a pleasant sight, even  for other
X+ 		Vogons.  His  highly  domed nose  rose  high above a small piggy
X+ 		forehead.His dark green rubbery skin was thick enough for him to
X+ 		play the game of Vogon Civil Service politics, and play it well,
X+ 		and waterproof enough for him  to  survive indefinitely  at  sea
X+ 		depths of up to a thousand feet with no ill effects.
X+ 		Not that he ever went swimming of course.His busy schedule would
X+ 		not allow it.
X+ 		[...] 
X+ 		Prostetnic Vogon Jeltz was a fairly typical Vogon in that he was
X+ 		thoroughly vile. Also, he did not like hitch hikers.
X+ 
X+ 		[ The Hitchhiker's Guide To The Galaxy, by Douglas Adams ]
X  quantum mechanic
X  		These creatures are not native to this universe;  they  seem
X  		to have strangely derived powers, and unknown motives.
X***************
X*** 472,477 ****
X--- 734,757 ----
X  		belligerent tengus were supposed to have  been  man's  first
X  		instructors in the use of arms.
X  		[Mythical Beasts by Deirdre Headon (The Leprechaun Library)]
X+ towel
X+ Ravenous Bugblatter Beast Of Traal
X+ 		A towel, it says, is about the most massively  useful  thing  an
X+ 		interstellar hitch hiker can have. Partly it has great practical
X+ 		value-you can wrap it around you for warmth as you bound across
X+ 		the cold moons of Jaglan Beta;you can lie on it on the brilliant
X+ 		marble-sanded beaches of Santraginus V, inhaling the  heady  sea
X+ 		vapours; you can sleep under it beneath the stars which shine so
X+ 		redly on the desert world of Kakrafoon; use it  to  sail a  mini
X+ 		raft  down the slow heavy river Moth; wet it for use in hand-to-
X+ 		hand-combat;wrap it round your head to ward off noxious fumes or
X+ 		to  avoid  the gaze of the Ravenous Bugblatter Beast of Traal (a
X+ 		mindboggingly stupid animal,it assumes that if you can't see it,
X+ 		it  can't see  you - daft as a bush, but very ravenous); you can
X+ 		wave your towel in emergencies as  a  distress  signal,  and  of
X+ 		course  dry  yourself off  with it if it still seems to be clean
X+ 		enough.
X+ 		[ The Hitchhiker's Guide To The Galaxy, by Douglas Adams ]
X  tsurugi
X  		The tsurugi,  also known  as  the long samurai sword,  is an
X  		extremely  sharp,  two-handed blade favored  by the samurai.
X***************
X*** 501,509 ****
X--- 781,856 ----
X  		in her lap, and in this docile mood, the maiden  may  secure
X  		it with a golden rope.
X  		[Mythical Beasts by Deirdre Headon (The Leprechaun Library)]
X+ *UNIX*
X+ 		:UNIX:: /yoo'niks/ [In the authors' words, "A weak pun on
X+ 		Multics"] n. (also `Unix') An interactive time-sharing system
X+ 		invented in 1969 by Ken Thompson after Bell Labs left the Multics
X+ 		project,originally so he could play games on his scavengedPDP-7.
X+ 		Dennis Ritchie the inventor of C,is considered a co-author of the
X+ 		system.  The turning point in UNIX's history came when it was
X+ 		reimplemented almost entirely in C during 1972--1974, making it the
X+ 		first source-portable OS.  UNIX subsequently underwent mutations
X+ 		and expansions at the hands of many different people,resulting in
X+ 		a uniquely flexible and developer-friendly environment. By 1991,
X+ 		UNIX had become the most widely used multiuser general-purpose
X+ 		operating system in the world.Many people consider this the most
X+ 		important victory yet of hackerdom over industry opposition (but
X+ 		see {UNIX weenie} and {UNIX conspiracy} for an opposing point
X+ 		of view).  See {Version 7}, {BSD}, {USG UNIX}.
X+ 		[ The Jargon File, version 3.0.0 ]
X+ VAX
X+ 		:VAX: /vaks/ n. 1. [from Virtual Address eXtension] The most
X+ 		successful minicomputer design in industry history, possibly
X+ 		excepting its immediate ancestor, the PDP-11.Between its release
X+ 		in 1978 and its eclipse by {killer micro}s after about 1986, the
X+ 		VAX was probably the hacker's favorite machine of them all, esp.
X+ 		after the 1982 release of 4.2 BSD UNIX (see {BSD}).  Esp.
X+ 		noted for its large,assembler-programmer-friendly instruction set
X+ 		--- an asset that became a liability after the RISC revolution.
X+ 		[ The Jargon File, version 3.0.0 ]
X+ vogon
X+ vogon lord
X+ 		                                     [...] Billions of years ago
X+ 		when the Vogons had first crawled out of the  sluggish  primeval
X+ 		seas  of  Vogsphere,  and  had  lain panting  and heaving on the
X+ 		planet's virgin shores...when the first rays of the bright young
X+ 		Vogsol  sun had shone across them that morning, it was as if the
X+ 		forces of evolution ad simply given up on them there  and  then,
X+ 		had  turned aside in disgust and written them off as an ugly and
X+ 		unfortunate mistake. They never evolved again; they should never
X+ 		have survived.
X+ 		[...] 
X+ 		Meanwhile, the natural forces on the planet  Vogsphere had  been
X+ 		working  overtime  to  make  up  for their earlier blunder. They
X+ 		brought forth scintillating jewelled scuttling crabs, which  the
X+ 		Vogons  ate,  smashing  their  shells  with  iron mallets;  tall
X+ 		aspiring trees with breathtaking slenderness and colour which the
X+ 		Vogons  cut down and burned the crab meat with; elegant gazelle-
X+ 		like creatures with silken coats and dewy eyes which the  Vogons
X+ 		would  catch  and  sit on. They were no use as transport because
X+ 		their backs would snap instantly, but the  Vogons  sat  on  them
X+ 		anyway.
X+ 
X+ 		[ The Hitchhiker's Guide to the Galaxy by Douglas Adams ] 
X  wakizashi
X  		The samurai  warrior  traditionally  wears  two  swords; the
X  		wakizashi is the shorter of the two.  See also katana.
X+ walking disk drive
X+ 		:walking drives: n. An occasional failure mode of magnetic-disk
X+ 		drives back in the days when they were huge, clunky {washing
X+ 		machine}s.  Those old {dinosaur} parts carried terrific angular
X+ 		momentum;the combination of a misaligned spindle or worn bearings
X+ 		and stick-slip interactions with the floor could cause them to
X+ 		`walk' across a room, lurching alternate corners forward a couple
X+ 		of millimeters at a time.  There is a legend about a drive that
X+ 		walked over to the only door to the computer room and jammed it
X+ 		shut; the staff had to cut a hole in the wall in order to get at
X+ 		it!  Walking could also be induced by certain patterns of drive
X+ 		access(a fast seek across the whole width of the disk,followed by
X+ 		a slow seek in the other direction).  Some bands of old-time
X+ 		hackers figured out how to induce disk-accessing patterns that
X+ 		would do this to particular drive models and held disk-drive races.
X+ 		[ The Jargon File, version 3.0.0 ]
X  *long worm
X  worm tooth
X  crysknife
X*** /tmp/tmp.1285	Sat May 28 21:14:26 1994
X--- ./dat/quest.txt	Sun May 22 16:02:13 1994
X***************
X*** 965,970 ****
X--- 965,1196 ----
X  "Thus will you fulfill your destiny."
X  %E
X  #
X+ #	Geek
X+ #
X+ %Cc G 00001
X+ You now enter what is pretty known to you - it is the location of
X+ the Holy Development Team, which in a year-long effort developed
X+ the computer game "NetHack". 
X+ 
X+ With a sudden feeling of melancholy you remember the patches you
X+ yourself wrote and contributed to that game. You truly believe
X+ that this game is the best of all games known to mankind.
X+ 
X+ However -- something has changed. At first you cannot tell what,
X+ but then you notice. Everywhere there are hostile monsters like
X+ the ones you used to program in NetHack, but, now in reality.
X+ 
X+ What the heck is going on here?!
X+ %E
X+ %Cp G 00002
X+ Once again you approach %H.
X+ %E
X+ %Cp G 00003
X+ As you again approach %H you fear it might be the last time you see this place.
X+ %E
X+ %Cp G 00005
X+ "Written any patches lately?"
X+ %E
X+ %Cp G 00006
X+ "Do _you_ know what erf(3M) does?"
X+ %E
X+ %Cc G 00007
X+ "How do you like this implementation of the Ravenous Bugblatter of Traal"
X+ You reply, "Be careful not to get sued for copyright infringement!"
X+ %E
X+ %Cp G 00008
X+ :-)
X+ %E
X+ %Cp G 00009
X+ "May the force be with you!"
X+ %E
X+ %Cc G 00010
X+ "It is a pleasure to see you again, %p.
X+ 
X+ Horrible things have happened since our last meeting and I really need
X+ a brave %R to clean up things for once and all.
X+ 
X+ Let me see whether you are really able to cope with the task ... "
X+ %E
X+ %Cp G 00011
X+ "Please stand still while I finger(1) your state ..."
X+ %E
X+ %Cp G 00012
X+ $ finger %p
X+ %E
X+ %Cc G 00013
X+ "This was too much. You'll never attain the state of Hackishness.
X+ Now begone!"
X+ %E
X+ %Cc G 00014
X+ "I see you fighting %n and finally being done in by him, who we call
X+ The Dark Lord Of Software.
X+ No, I can't let you go like this, I really can't see a chance of a 
X+ %r fighting against Him. 
X+ I can only ask you to train some more until you have achieved the
X+ %R's state of ability."
X+ %E
X+ %Cc G 00015
X+ "Foo!
X+ You have strayed from the path of %d!
X+ Trying to destroy %n in this state of mind would mean the sure death
X+ of your hackish soul!
X+ Purify yourself, until you're again piously aligned with Our God,
X+ and then come again and I will admit you."
X+ %E
X+ %Cc G 00016
X+ "I now see that you are truly worthy to fight %n, my %s.
X+ 
X+ Half a year ago, a young programmer, known to everybody as %n, came
X+ to me to get a hackish education. I was suspicious from the first
X+ moment on, but I admitted him for testing and let him stay.
X+ 
X+ Several days later, upon waking up, I found %o to be missing.
X+ %n was away as well.
X+ 
X+ You are my last hope. If you fail to regain %o, NetHack development
X+ is doomed to stop forever!"
X+ %E
X+ %Cp G 00020
X+ "May %d protect you!"
X+ %E
X+ %Cp G 00021
X+ "Remember, He is completely evil, yet not invulnerable!"
X+ %E
X+ %Cp G 00022
X+ :-)
X+ %E
X+ %Cp G 00023
X+ "I know you can do it!"
X+ %E
X+ %Cp G 00024
X+ "Our fate is up to you now."
X+ %E
X+ %Cp G 00025
X+ "A level being seemingly harmless may prove to be fatal by monsters
X+ suddenly transforming one into another"
X+ %E
X+ %Cp G 00026
X+ "It is rumoured that %n filled His lair with deadly traps."
X+ %E
X+ %Cp G 00027
X+ "Do you know what 'memalezu' means?"
X+ %E
X+ %Cp G 00028
X+ "They say that you can escape the dungeon by teleporting to level 0."
X+ %E
X+ %Cp G 00029
X+ "Nobody here has an idea what to use a silver bell for."
X+ %E
X+ %Cp G 00030
X+ You have a sure feeling that you will soon find the entrace to the %i.
X+ You *know* you can do it!
X+ %E
X+ %Cp G 00031
X+ Once again you enter this place and once again you are sure you will succeed.
X+ %E
X+ %Cp G 00040
X+ You now almost smell %o.
X+ %E
X+ %Cp G 00041
X+ Once again you sense %o.
X+ %E
X+ %Cp G 00050
X+ You will never retrieve %o!
X+ %E
X+ %Cp G 00051
X+ You're doomed! You will end your life as a litte programmer slave earning
X+ $1000 ... per year! ... before taxes!
X+ %E
X+ %Cp G 00052
X+ You will never succeed! You could give up now as well!
X+ %E
X+ %Cp G 00053
X+ I will now get %o back from you and then I will make you the MS-DOS
X+ Project Manager. This will be enough torture for you!
X+ %E
X+ %Cp G 00060
X+ FORMAT C: /V /S
X+ %E
X+ %Cp G 00061
X+ You will die now, as sure as if you quaffed a potion of cyanide!
X+ %E
X+ %Cp G 00062
X+ I think I'll be generous. I will let you have a little fun with my
X+ pet succubus before you die ...
X+ %E
X+ %Cc G 00063
X+ "Perhaps you should consider the following qoute from Terry Pratchett:
X+ 
X+ 	"But I don't know how to use a sword!"
X+ 
X+ 	"Put the blunt end in your hand and the sharp end in the enemy!"
X+ 
X+ 	"There must be more to it than that!"
X+ 
X+ 	"Remember which end is which."
X+ %E
X+ %Cp G 00064
X+ "What? You said 'Microsloth'? Then die, bastard!"
X+ %E
X+ %Cp G 00065
X+ "I will soon format your body, mind and soul!"
X+ %E
X+ %Cp G 00066
X+ "I've got an idea: we can greatly speed this up (and save much pain
X+ for you). You just have to take your sword and push it into your
X+ stomach. Or, if you prefer, take a COBOL programming course."
X+ %E
X+ %Cp G 00067
X+ "Don't worry, your pains will soon be over!"
X+ %E
X+ %Cp G 00068
X+ "I'm wondering all the time why somebody like you does something like this.
X+ Does pain excite you or what? Well, I have a *great* sortiment of whips handy!"
X+ %E
X+ %Cp G 00069
X+ "Nobody will ever need more than 640 KB of RAM."
X+ %E
X+ %Cc G 00070
X+ You feel the power of %o flow through your body. Although you know
X+ you have to return it to %l, you now feel like you could continue
X+ developing NetHack on your own now.
X+ %E
X+ %Cp G 00080
X+ You see %n lying dead in a puddle of blood. Not a second do you 
X+ regret what you've done.
X+ %E
X+ %Cc G 00081
X+ "You've finally got %o back! I am very grateful for what you've done.
X+ 
X+ Yet, I am an old man and I will not long more be able to supervise
X+ NetHack. Therefore I pass the duty on to your young and responsible
X+ hands. Take the sources and expand them at your leisure, but be
X+ careful to maintain game balance.
X+ 
X+ My ultimate secret is: Nothing is true. Everything is allowed."
X+ %E
X+ %Cp G 00090
X+ Latest news regarding the Amulet Of Yendor?
X+ %E
X+ %Cc G 00091
X+ "Now I see you with the Amulet Of Yendor shining brightly in your
X+ pack. Honestly, I didn't believe you'd (or anyone else, for that
X+ matter) would manage to tear it from the hands of Moloch.
X+ 
X+ Your way is up now, back to the first level of the Dungeon, and
X+ beyond there. You now must leave the dungeon as you've entered
X+ it.
X+ 
X+ Then you will get to four planes, dedicated to the four arcane elements
X+ of earth, air, fire and water. If thou successfully pass all these,
X+ you will eventually reach the stars (or astra, as the Greek called
X+ them). This is where the sacred High Temples of the aligned gods
X+ are located. 
X+ 
X+ Return the amulet to %d at His altar, and you will be richly rewarded."
X+ %E
X+ #
X  #	Healer
X  #
X  %Cc H 00001
X***************
X*** 2800,2807 ****
X  It is written in the Book of %d:
X  
X      After the Creation, the cruel god Moloch rebelled
X!     against the authority of Marduk the Creator.
X!     Moloch stole from Marduk the most powerful of all
X      the artifacts of the gods, the Amulet of Yendor,
X      and he hid it in the dark cavities of Gehennom, the
X      Under World, where he now lurks, and bides his time.
X--- 3026,3034 ----
X  It is written in the Book of %d:
X  
X      After the Creation, the cruel god Moloch rebelled
X!     against the holy and well-deserved authority 
X!     of the Creator %m.
X!     Moloch stole from %M the most powerful of all
X      the artifacts of the gods, the Amulet of Yendor,
X      and he hid it in the dark cavities of Gehennom, the
X      Under World, where he now lurks, and bides his time.
X***************
X*** 2824,2829 ****
X--- 3051,3080 ----
X  %Cp - 00003
X  You again sense %l pleading for help.
X  %E
X+ %Cc - 09999
X+ You read the following text in the Nethack sources ...
X+ 
X+ boolean
X+ revive_nasty(x, y, msg)
X+ int x,y;
X+ const char *msg;
X+ {
X+     register struct obj *otmp, *otmp2;
X+     struct monst *mtmp;
X+     coord cc;
X+     boolean revived = FALSE;
X+ 
X+     /* prevent freeobj() of revivable corpses */
X+     for(otmp = level.objects[x][y]; otmp; otmp = otmp2) {
X+ 	otmp2 = otmp->nexthere;
X+ 	if (otmp->otyp == CORPSE &&
X+ 	    (is_rider(&mons[otmp->corpsenm]) ||
X+ 	     otmp->corpsenm == PM_WIZARD_OF_YENDOR)) {
X+ 	    /* move any living monster already at that location */
X+ 	    if((mtmp = m_at(x,y)) && enexto(&cc, x, y, mtmp->data))
X+ 
X+ ... and so on
X+ %E
X  #
X  #	Angelic maledictions.
X  #
X***************
X*** 2945,2950 ****
X--- 3196,3203 ----
X   %N:	return("neutral");
X   %L:	return("lawful");
X   %x:	return((Blind) ? "sense" : "see");
X+  %m:	return((pl_character[0] == 'E') ? "Eru Iluvatar" : ((pl_character[0] == 'G') ? "team of Babbage, Turing and Zuse" : "Marduk"));
X+  %M:	return((pl_character[0] == 'G') ? "Them" : "Him");
X   %%:	return(percent_sign);
X   a suffix:	return an(root);
X   A suffix:	return An(root);
X*** /tmp/tmp.1285	Sat May 28 21:14:27 1994
X--- ./dat/Makefile	Sun May 22 19:05:30 1994
X***************
X*** 33,43 ****
X  
X  spec_levs: ../util/lev_comp \
X  	bigroom.des castle.des endgame.des gehennom.des knox.des medusa.des \
X! 	mines.des oracle.des tower.des yendor.des
X  	../util/lev_comp bigroom.des
X  	../util/lev_comp castle.des
X  	../util/lev_comp endgame.des
X  	../util/lev_comp gehennom.des
X  	../util/lev_comp knox.des
X  	../util/lev_comp medusa.des
X  	../util/lev_comp mines.des
X--- 33,48 ----
X  
X  spec_levs: ../util/lev_comp \
X  	bigroom.des castle.des endgame.des gehennom.des knox.des medusa.des \
X! 	mines.des oracle.des tower.des yendor.des forge.des key.des dragon.des \
X! 	hitch.des
X  	../util/lev_comp bigroom.des
X  	../util/lev_comp castle.des
X+ 	../util/lev_comp dragon.des
X  	../util/lev_comp endgame.des
X+ 	../util/lev_comp forge.des
X  	../util/lev_comp gehennom.des
X+ 	../util/lev_comp hitch.des
X+ 	../util/lev_comp key.des
X  	../util/lev_comp knox.des
X  	../util/lev_comp medusa.des
X  	../util/lev_comp mines.des
X***************
X*** 47,58 ****
X  	touch spec_levs
X  
X  quest_levs: ../util/lev_comp \
X! 	Arch.des Barb.des Caveman.des Elf.des Healer.des Knight.des \
X  	Priest.des Rogue.des Samurai.des Tourist.des Valkyrie.des Wizard.des
X  	../util/lev_comp Arch.des
X  	../util/lev_comp Barb.des
X  	../util/lev_comp Caveman.des
X  	../util/lev_comp Elf.des
X  	../util/lev_comp Healer.des
X  	../util/lev_comp Knight.des
X  	../util/lev_comp Priest.des
X--- 52,64 ----
X  	touch spec_levs
X  
X  quest_levs: ../util/lev_comp \
X! 	Arch.des Barb.des Caveman.des Elf.des Geek.des Healer.des Knight.des \
X  	Priest.des Rogue.des Samurai.des Tourist.des Valkyrie.des Wizard.des
X  	../util/lev_comp Arch.des
X  	../util/lev_comp Barb.des
X  	../util/lev_comp Caveman.des
X  	../util/lev_comp Elf.des
X+ 	../util/lev_comp Geek.des
X  	../util/lev_comp Healer.des
X  	../util/lev_comp Knight.des
X  	../util/lev_comp Priest.des
X*** /tmp/tmp.1285	Sat May 28 21:15:47 1994
X--- ./include/unixconf.h	Sat Jan 22 00:00:00 1994
X***************
X*** 19,39 ****
X   */
X  
X  /* define exactly one of the following four choices */
X! #define BSD		/* define for 4.n BSD  */
X  			/* also for relatives like SunOS, Linux and DG/UX */
X  /* #define ULTRIX	/* define for Ultrix v3.0 or higher (but not lower) */
X  			/* Use BSD for < v3.0 */
X  			/* "ULTRIX" not to be confused with "ultrix" */
X! /* #define SYSV		/* define for System V */
X  /* #define HPUX		/* Hewlett-Packard's Unix, version 6.5 or higher */
X  			/* use SYSV for < v6.5 */
X  
X  
X  /* define any of the following that are appropriate */
X  /* #define SVR4		/* use in addition to SYSV for System V Release 4 */
X! #define NETWORK	/* if running on a networked system */
X  			/* e.g. Suns sharing a playground through NFS */
X! #define SUNOS4	/* SunOS 4.x */
X  /* #define LINUX  /* Another Unix clone running on Intel processors */
X  /* #define GENIX	/* Yet Another Unix Clone */
X  /* #define HISX		/* Bull Unix for XPS Machines */
X--- 19,39 ----
X   */
X  
X  /* define exactly one of the following four choices */
X! /* #define BSD		/* define for 4.n BSD  */
X  			/* also for relatives like SunOS, Linux and DG/UX */
X  /* #define ULTRIX	/* define for Ultrix v3.0 or higher (but not lower) */
X  			/* Use BSD for < v3.0 */
X  			/* "ULTRIX" not to be confused with "ultrix" */
X! #define SYSV		/* define for System V */
X  /* #define HPUX		/* Hewlett-Packard's Unix, version 6.5 or higher */
X  			/* use SYSV for < v6.5 */
X  
X  
X  /* define any of the following that are appropriate */
X  /* #define SVR4		/* use in addition to SYSV for System V Release 4 */
X! /* #define NETWORK	/* if running on a networked system */
X  			/* e.g. Suns sharing a playground through NFS */
X! /* #define SUNOS4	/* SunOS 4.x */
X  /* #define LINUX  /* Another Unix clone running on Intel processors */
X  /* #define GENIX	/* Yet Another Unix Clone */
X  /* #define HISX		/* Bull Unix for XPS Machines */
X***************
X*** 41,47 ****
X  /* #define UNIXPC	/* use in addition to SYSV for AT&T 7300/3B1 */
X  /* #define AIX_31	/* In AIX 3.1 (IBM RS/6000) use BSD ioctl's to gain
X  			   job control (note that AIX is SYSV otherwise) */
X! /* #define TEXTCOLOR	/* Use System V r3.2 terminfo color support */
X  			/* or ANSI color support on termcap systems */
X  			/* or X11 color	*/
X  /* #define POSIX_JOB_CONTROL	/* use System V POSIX job control */
X--- 41,47 ----
X  /* #define UNIXPC	/* use in addition to SYSV for AT&T 7300/3B1 */
X  /* #define AIX_31	/* In AIX 3.1 (IBM RS/6000) use BSD ioctl's to gain
X  			   job control (note that AIX is SYSV otherwise) */
X! #define TEXTCOLOR	/* Use System V r3.2 terminfo color support */
X  			/* or ANSI color support on termcap systems */
X  			/* or X11 color	*/
X  /* #define POSIX_JOB_CONTROL	/* use System V POSIX job control */
X***************
X*** 86,93 ****
X   * If defined, it can be overridden by the environment variable PAGER.
X   * Hack will use its internal pager if DEF_PAGER is not defined.
X   * (This might be preferable for security reasons.)
X!  * #define DEF_PAGER	".../mydir/mypager"
X!  */
X  
X  
X  
X--- 86,93 ----
X   * If defined, it can be overridden by the environment variable PAGER.
X   * Hack will use its internal pager if DEF_PAGER is not defined.
X   * (This might be preferable for security reasons.)
X!  */ 
X! #define DEF_PAGER	"/usr/bin/pg"
X  
X  
X  
X*** /tmp/tmp.1285	Sat May 28 21:15:53 1994
X--- ./include/artifact.h	Thu Apr 21 16:58:32 1994
X***************
X*** 31,37 ****
X  #define SPFX_DFLAG1 0x0400000	/* attack bonus on monsters w/ mflags1 flag */
X  #define SPFX_DFLAG2 0x0800000	/* attack bonus on monsters w/ mflags2 flag */
X  #define SPFX_DALIGN 0x1000000	/* attack bonus on non-aligned monsters  */
X! 
X  #define SPFX_DBONUS 0x1F00000	/* attack bonus mask */
X  
X  struct artifact {
X--- 31,38 ----
X  #define SPFX_DFLAG1 0x0400000	/* attack bonus on monsters w/ mflags1 flag */
X  #define SPFX_DFLAG2 0x0800000	/* attack bonus on monsters w/ mflags2 flag */
X  #define SPFX_DALIGN 0x1000000	/* attack bonus on non-aligned monsters  */
X! #define SPFX_PROTEC 0x2000000	/* protects you if worn (+2 to AC) */
X! #define SPFX_TOUCH  0x4000000	/* artifact doesn't care if touched */
X  #define SPFX_DBONUS 0x1F00000	/* attack bonus mask */
X  
X  struct artifact {
X***************
X*** 54,58 ****
X--- 55,61 ----
X  #define CHARGE_OBJ	(LAST_PROP+5)
X  #define LEV_TELE	(LAST_PROP+6)
X  #define CREATE_PORTAL	(LAST_PROP+7)
X+ #define IDENTIFY	(LAST_PROP+8)
X+ #define DRAGON_BREATH	(LAST_PROP+9)
X  
X  #endif /* ARTIFACT_H */
X*** /tmp/tmp.1285	Sat May 28 21:15:55 1994
X--- ./include/artilist.h	Wed Apr 27 18:56:05 1994
X***************
X*** 135,140 ****
X--- 135,175 ----
X  	(SPFX_RESTR|SPFX_DFLAG2), 0, M2_UNDEAD,
X  	PHYS(5,0),	NO_DFNS,	NO_CARY,	0, A_LAWFUL,	 0  ),
X  
X+ A("Mumakbane",			LONG_SWORD,
X+ 	(SPFX_RESTR|SPFX_DMONS), 0, PM_MUMAK,
X+ 	FIRE(5,60),	NO_DFNS,	NO_CARY,
X+ 	0, 		A_NEUTRAL,	0 ),
X+ 
X+ A("Wormbiter",			CRYSKNIFE,
X+ 	(SPFX_RESTR|SPFX_DCLAS), 0, S_WORM,
X+ 	PHYS(5,0),	NO_DFNS,	NO_CARY,
X+ 	0,		A_NEUTRAL,	0 ),
X+ 
X+ A("Shocker",			ELECTRIC_SWORD,
X+ 	SPFX_RESTR, 0, 0,
X+ 	ELEC(3,0),	NO_DFNS,	NO_CARY,
X+ 	0,		A_NEUTRAL,	0 ),
X+ 
X+ A("Scales of the Dragon Lord",	GRAY_DRAGON_SCALE_MAIL,
X+ 	(SPFX_NOGEN|SPFX_RESTR|SPFX_PROTEC), 0, 0,
X+ 	NO_ATTK,	NO_DFNS,	NO_CARY,
X+ 	DRAGON_BREATH,	A_CHAOTIC,	0 ),
X+ 
X+ A("The Burned Moth Relay",	RELAY,
X+ 	(SPFX_RESTR), SPFX_PROTEC, 0, 	
X+ 	NO_ATTK,	NO_DFNS,	NO_CARY,
X+ 	0,		A_NEUTRAL,	0 ),
X+ 
X+ A("Wand Of Might",		WAN_WISHING,
X+ 	(SPFX_RESTR|SPFX_TOUCH),	0,		0,
X+ 	NO_ATTK,	NO_DFNS,	NO_CARY,
X+ 	0,		A_NONE,		0 ),
X+ 
X+ A("The Key Of Access",		SKELETON_KEY,
X+ 	(SPFX_RESTR|SPFX_NOGEN),	0,		0,
X+ 	NO_ATTK,	NO_DFNS,	NO_CARY,
X+ 	CREATE_PORTAL,	A_NONE,		0 ),
X+ 
X  #ifdef MULDGN
X  /*
X   *	The artifacts for the quest dungeon, all self-willed.
X***************
X*** 160,165 ****
X--- 195,206 ----
X  		(SPFX_ESP|SPFX_REGEN|SPFX_HSPDAM), 0,
X  	NO_ATTK,	NO_DFNS,	NO_CARY,
X  	TAMING,		A_CHAOTIC,	'E' ),
X+ 
X+ A("The Nethack Sources",	PACK_OF_FLOPPIES,
X+ 	(SPFX_NOGEN | SPFX_RESTR | SPFX_INTEL),
X+ 		 (SPFX_SEARCH | SPFX_ESP | SPFX_REGEN), 0,
X+ 	NO_ATTK,	NO_DFNS,	NO_CARY,
X+ 	IDENTIFY,	A_NEUTRAL,	'G' ),
X  
X  A("The Staff of Aesculapius",	QUARTERSTAFF,
X  	(SPFX_NOGEN|SPFX_RESTR|SPFX_ATTK|SPFX_INTEL|SPFX_DRLI|SPFX_REGEN), 0,0,
X*** /tmp/tmp.1285	Sat May 28 21:16:10 1994
X--- ./include/extern.h	Thu Jan  1 00:00:00 1970
X***************
X*** 68,73 ****
X--- 68,74 ----
X  E const char *FDECL(artiname, (int));
X  E struct obj *FDECL(mk_artifact, (struct obj *,ALIGNTYP_P));
X  E const char *FDECL(artifact_name, (const char *,short *));
X+ E int FDECL(artifact_name2no, (const char *name));
X  E boolean FDECL(exist_artifact, (int,const char *));
X  E void FDECL(artifact_exists, (struct obj *,const char *,BOOLEAN_P));
X  E int NDECL(nartifact_exist);
X***************
X*** 82,87 ****
X--- 83,91 ----
X  E boolean FDECL(artifact_hit, (struct monst *,struct monst *,
X  				struct obj *,int *,int));
X  E int NDECL(doinvoke);
X+ E boolean FDECL(nogen_nrartifact,(int artino));
X+ E boolean FDECL(exists_nrartifact,(int artino));
X+ E int FDECL(nrartifact_obtype,(int artino));
X  
X  /* ### attrib.c ### */
X  
X***************
X*** 879,884 ****
X--- 883,889 ----
X  E int FDECL(weight, (struct obj *));
X  E void FDECL(mkgold, (long,int,int));
X  E struct obj *FDECL(mkcorpstat, (int,struct permonst *,int,int,BOOLEAN_P));
X+ E struct obj *FDECL(mkcorpstat_, (int,int,BOOLEAN_P));
X  E struct obj *FDECL(mk_tt_object, (int,int,int));
X  E struct obj *FDECL(mk_named_object, (int,struct permonst *,int,int,char *,int));
X  E void FDECL(bless, (struct obj *));
X***************
X*** 1202,1207 ****
X--- 1207,1213 ----
X  /* ### pickup.c ### */
X  
X  E int FDECL(collect_obj_classes, (char *,struct obj *,BOOLEAN_P,BOOLEAN_P));
X+ E int FDECL(put_into_container,(struct obj *,struct obj *));
X  #ifdef OVERLAY
X  E int FDECL(ck_bag, (struct obj *));
X  E int FDECL(in_container, (struct obj *));
X***************
X*** 1422,1427 ****
X--- 1428,1444 ----
X  E void FDECL(savefruitchn, (int,int));
X  #endif
X  
X+ /* ### school.c ### */
X+ 
X+ E boolean FDECL(is_principal, (struct monst *));
X+ E boolean FDECL(is_teacher, (struct monst *));
X+ E boolean FDECL(is_educator, (struct monst *));
X+ #ifdef SOUNDS
X+ E void FDECL(pupil_sound, (struct monst *));
X+ E void FDECL(teacher_sound, (struct monst *));
X+ E void FDECL(principal_sound, (struct monst *));
X+ #endif
X+ 
X  /* ### shk.c ### */
X  
X  E char *FDECL(shkname, (struct monst *));
X***************
X*** 1488,1493 ****
X--- 1505,1513 ----
X  E void NDECL(rndcurse);
X  E void NDECL(attrcurse);
X  
X+ /* ### smith.c ### */
X+ E void FDECL(smith_selling, (struct monst *));
X+ 
X  /* ### sounds.c ### */
X  
X  #ifdef SOUNDS
X***************
X*** 1497,1502 ****
X--- 1517,1523 ----
X  E void FDECL(whimper, (struct monst *));
X  E void FDECL(beg, (struct monst *));
X  #endif
X+ E struct monst *FDECL(qname, (struct monst *));		/* see sounds.c */
X  E int NDECL(dotalk);
X  
X  /* ### sp_lev.c ### */
X***************
X*** 1511,1516 ****
X--- 1532,1538 ----
X  
X  /* ### spell.c ### */
X  
X+ E boolean FDECL(spell_known, (int));
X  #ifdef OVERLAY
X  E int NDECL(learn);
X  #endif
X*** /tmp/tmp.1285	Sat May 28 21:16:17 1994
X--- ./include/mkroom.h	Sat Jan 22 00:00:00 1994
X***************
X*** 58,76 ****
X  #define ZOO		 8	/* floor covered with treasure and monsters */
X  #define DELPHI		 9	/* contains Oracle and peripherals */
X  #define TEMPLE		10	/* contains a shrine */
X  #define SHOPBASE	11	/* everything above this is a shop */
X! #define ARMORSHOP	12	/* specific shop defines for level compiler */
X! #define SCROLLSHOP	13
X! #define POTIONSHOP	14
X! #define WEAPONSHOP	15
X! #define FOODSHOP	16
X! #define RINGSHOP	17
X! #define WANDSHOP	18
X! #define TOOLSHOP	19
X! #define BOOKSHOP	20
X! #define UNIQUESHOP	21	/* shops here & above not randomly gen'd. */
X! #define CANDLESHOP	21
X! #define MAXRTYPE	21	/* maximum valid room type */
X  
X  /* Special type for search_special() */
X  #define ANY_TYPE	(-1)
X--- 58,81 ----
X  #define ZOO		 8	/* floor covered with treasure and monsters */
X  #define DELPHI		 9	/* contains Oracle and peripherals */
X  #define TEMPLE		10	/* contains a shrine */
X+ #ifdef DOUGLAS_ADAMS
X+ #define DOUGROOM	11	/* Adams, creeping 42's etc. */
X+ #define SHOPBASE	12
X+ #else
X  #define SHOPBASE	11	/* everything above this is a shop */
X! #endif
X! #define ARMORSHOP	(SHOPBASE+1)/*specific shop defines for level compiler*/
X! #define SCROLLSHOP	(SHOPBASE+2)
X! #define POTIONSHOP	(SHOPBASE+3)
X! #define WEAPONSHOP	(SHOPBASE+4)
X! #define FOODSHOP	(SHOPBASE+5)
X! #define RINGSHOP	(SHOPBASE+6)
X! #define WANDSHOP	(SHOPBASE+7)
X! #define TOOLSHOP	(SHOPBASE+8)
X! #define BOOKSHOP	(SHOPBASE+9)
X! #define UNIQUESHOP	(SHOPBASE+10)/*shops here & above not randomly gen'd. */
X! #define CANDLESHOP	(SHOPBASE+10)
X! #define MAXRTYPE	(SHOPBASE+10)	/* maximum valid room type */
X  
X  /* Special type for search_special() */
X  #define ANY_TYPE	(-1)
X*** /tmp/tmp.1285	Sat May 28 21:16:18 1994
X--- ./include/monattk.h	Sat Mar 26 16:16:18 1994
X***************
X*** 22,27 ****
X--- 22,28 ----
X  #define AT_EXPL		13		/* explodes - proximity */
X  #define AT_GAZE		14		/* gaze - ranged */
X  #define AT_TENT		15		/* tentacles */
X+ #define AT_TALK		42		/* talks to you, i.e. Marvin */
X  
X  #define AT_WEAP		254		/* uses weapon */
X  #define AT_MAGC		255		/* uses magic spell(s) */
X***************
X*** 71,76 ****
X--- 72,81 ----
X  #define AD_DETH		36		/* for Death only */
X  #define AD_PEST		37		/* for Pestilence only */
X  #define AD_FAMN		38		/* for Famine only */
X+ 
X+ #ifdef DOUGLAS_ADAMS
X+ #define AD_DEPR		42		/* depression --- random bad effect */
X+ #endif
X  
X  #define AD_CLRC		240		/* random clerical spell */
X  #define AD_SPEL		241		/* random magic spell */
X*** /tmp/tmp.1285	Sat May 28 21:16:20 1994
X--- ./include/monflag.h	Sun Apr 10 14:37:28 1994
X***************
X*** 47,53 ****
X  #define MS_SELL		34	/* demand payment, complain about shoplifters */
X  #define MS_ORACLE	35	/* do a consultation */
X  #define MS_PRIEST	36	/* ask for contribution; do cleansing */
X! 
X  
X  #define MR_FIRE         0x01    /* resists fire */
X  #define MR_COLD         0x02    /* resists cold */
X--- 47,61 ----
X  #define MS_SELL		34	/* demand payment, complain about shoplifters */
X  #define MS_ORACLE	35	/* do a consultation */
X  #define MS_PRIEST	36	/* ask for contribution; do cleansing */
X! #ifdef DOUGLAS_ADAMS
X! /* MS_DOUGLAS_ADAMS used to be 42, however I fear the DevTeam eventually 
X! ** reaching that number.  - sk */
X! #define MS_DOUGLAS_ADAMS 95	/* "42"; "Nice day"; etc. */
X! #endif
X! #define MS_PUPIL 	96
X! #define MS_TEACHER	97
X! #define MS_PRINCIPAL	98
X! #define MS_SMITH	99
X  
X  #define MR_FIRE         0x01    /* resists fire */
X  #define MR_COLD         0x02    /* resists cold */
X*** /tmp/tmp.1285	Sat May 28 21:16:21 1994
X--- ./include/monsym.h	Wed Apr 13 19:41:05 1994
X***************
X*** 145,151 ****
X  #define DEF_WORM_TAIL	'~'
X  #define DEF_MIMIC_DEF	']'
X  
X! 
X  #define G_UNIQ		0x1000		/* generated only once */
X  #define G_NOHELL	0x0800		/* not generated in "hell" */
X  #define G_HELL		0x0400		/* generated only in "hell" */
X--- 145,151 ----
X  #define DEF_WORM_TAIL	'~'
X  #define DEF_MIMIC_DEF	']'
X  
X! #define G_ROGUE		0x2000		/* only for the rogue level */
X  #define G_UNIQ		0x1000		/* generated only once */
X  #define G_NOHELL	0x0800		/* not generated in "hell" */
X  #define G_HELL		0x0400		/* generated only in "hell" */
X*** /tmp/tmp.1285	Sat May 28 21:16:24 1994
X--- ./include/obj.h	Thu Apr 21 18:09:44 1994
X***************
X*** 5,11 ****
X  #ifndef OBJ_H
X  #define OBJ_H
X  
X! /* #define obj obj_nh	/* uncomment for SCO UNIX, which has a conflicting
X  			 * typedef for "obj" in <sys/types.h> */
X  
X  struct obj {
X--- 5,11 ----
X  #ifndef OBJ_H
X  #define OBJ_H
X  
X! #define obj obj_nh	/* uncomment for SCO UNIX, which has a conflicting
X  			 * typedef for "obj" in <sys/types.h> */
X  
X  struct obj {
X***************
X*** 57,63 ****
X  	Bitfield(oinvis,1);	/* not yet implemented */
X  	Bitfield(greased,1);	/* covered with grease */
X  	Bitfield(onamelth,6);
X! 
X  	int	corpsenm;	/* type of corpse is mons[corpsenm] */
X  #define leashmon  corpsenm	/* gets m_id of attached pet */
X  #define spestudied corpsenm	/* how many times a spellbook has been studied */
X--- 57,63 ----
X  	Bitfield(oinvis,1);	/* not yet implemented */
X  	Bitfield(greased,1);	/* covered with grease */
X  	Bitfield(onamelth,6);
X! 	Bitfield(selfmade,1);	/* made with chemistry set or magic marker */
X  	int	corpsenm;	/* type of corpse is mons[corpsenm] */
X  #define leashmon  corpsenm	/* gets m_id of attached pet */
X  #define spestudied corpsenm	/* how many times a spellbook has been studied */
X*** /tmp/tmp.1285	Sat May 28 21:16:29 1994
X--- ./include/prop.h	Fri Mar 18 21:24:55 1994
X***************
X*** 54,59 ****
X  #define MAGICAL_BREATHING	47
X  #define HALF_SPDAM		48
X  #define HALF_PHDAM		49
X! #define LAST_PROP		(HALF_PHDAM)		/* the last property */
X  
X  #endif /* PROP_H */
X--- 54,60 ----
X  #define MAGICAL_BREATHING	47
X  #define HALF_SPDAM		48
X  #define HALF_PHDAM		49
X! #define SECOND_CHANCE		50
X! #define LAST_PROP		(SECOND_CHANCE)		/* the last property */
X  
X  #endif /* PROP_H */
X*** /tmp/tmp.1285	Sat May 28 21:16:30 1994
X--- ./include/qtext.h	Wed Mar 23 11:50:14 1994
X***************
X*** 6,12 ****
X  #ifndef QTEXT_H
X  #define QTEXT_H
X  
X! #define N_HDR	13		/* number of classes + 1 */
X  #define COMMON_ID	'-'	/* common message id value */
X  
X  struct qtmsg {
X--- 6,12 ----
X  #ifndef QTEXT_H
X  #define QTEXT_H
X  
X! #define N_HDR	14		/* number of classes + 1 */
X  #define COMMON_ID	'-'	/* common message id value */
X  
X  struct qtmsg {
X***************
X*** 18,24 ****
X  
X  #ifdef MAKEDEFS_C
X  
X! #define N_MSG	100		/* arbitrary */
X  
X  struct msghdr {
X  	int	n_msg;
X--- 18,25 ----
X  
X  #ifdef MAKEDEFS_C
X  
X! /*#define N_MSG	100		/* arbitrary */
X! #define N_MSG 300
X  
X  struct msghdr {
X  	int	n_msg;
X*** /tmp/tmp.1285	Sat May 28 21:16:35 1994
X--- ./include/system.h	Sat Jan 22 00:00:00 1994
X***************
X*** 135,141 ****
X  # ifdef POSIX_TYPES
X  E int FDECL(write, (int, const void *,unsigned));
X  # else
X! E int FDECL(write, (int,genericptr_t,unsigned));
X  # endif
X  #endif /* ULTRIX */
X  #ifndef	__SASC_60
X--- 135,141 ----
X  # ifdef POSIX_TYPES
X  E int FDECL(write, (int, const void *,unsigned));
X  # else
X! /* E int FDECL(write, (int,genericptr_t,unsigned)); */
X  # endif
X  #endif /* ULTRIX */
X  #ifndef	__SASC_60
X***************
X*** 309,315 ****
X  E uid_t NDECL(getuid);
X  E gid_t NDECL(getgid);
X  # else
X! E int NDECL(getpid);
X  # endif
X  # ifdef VMS
X  E int NDECL(getppid);
X--- 309,315 ----
X  E uid_t NDECL(getuid);
X  E gid_t NDECL(getgid);
X  # else
X! /* E int NDECL(getpid); */
X  # endif
X  # ifdef VMS
X  E int NDECL(getppid);
X*** /tmp/tmp.1285	Sat May 28 21:16:47 1994
X--- ./include/you.h	Sun May 22 19:53:46 1994
X***************
X*** 178,183 ****
X--- 178,185 ----
X  	Bitfield(uinvulnerable,1);	/* you're invulnerable (praying) */
X  	Bitfield(usleep,1);		/* you're sleeping */
X  
X+ 	int uinvul_time;		/* time you are invulnerable */
X+ 
X  	unsigned udg_cnt;		/* how long you have been demigod */
X  	struct u_event	uevent;		/* certain events have happened */
X  	struct u_have	uhave;		/* you're carrying special objects */
X***************
X*** 197,203 ****
X  #define LUCKMIN		(-10)
X  	schar	udaminc;
X  	schar	uac;
X! 	int	uhp,uhpmax;
X  	int	uen, uenmax;		/* magical energy - M. Stephenson */
X  	int ugangr;			/* if the gods are angry at you */
X  	int ublessed, ublesscnt;	/* blessing/duration from #pray */
X--- 199,205 ----
X  #define LUCKMIN		(-10)
X  	schar	udaminc;
X  	schar	uac;
X! 	int	uhp,uhpmax,uhplast;
X  	int	uen, uenmax;		/* magical energy - M. Stephenson */
X  	int ugangr;			/* if the gods are angry at you */
X  	int ublessed, ublesscnt;	/* blessing/duration from #pray */
X*** /tmp/tmp.1285	Sat May 28 21:16:48 1994
X--- ./include/youprop.h	Sun May 22 19:53:46 1994
X***************
X*** 128,132 ****
X--- 128,133 ----
X  				      breathless(uasmon))
X  #define Half_spell_damage	u.uprops[HALF_SPDAM].p_flgs
X  #define Half_physical_damage	u.uprops[HALF_PHDAM].p_flgs
X+ #define Second_chance		u.uprops[SECOND_CHANCE].p_flgs
X  
X  #endif /* YOUPROP_H */
X*** /tmp/tmp.1285	Sat May 28 21:16:56 1994
X--- ./util/lev_main.c	Sun Apr 10 18:20:39 1994
X***************
X*** 630,635 ****
X--- 630,637 ----
X  {
X  	register int i;
X  
X+ /*	printf("%i monsters, %i objects\n",nmons,nobj); */
X+ 
X  	/* Ok, We got the whole part, now we store it. */
X  
X  	/* The Regions */
X*** /tmp/tmp.1285	Sat May 28 21:17:01 1994
X--- ./util/Makefile	Sun Apr 10 17:30:40 1994
X***************
X*** 15,21 ****
X  
X  # if you are using gcc as your compiler,
X  #	uncomment the CC definition below if it's not in your environment
X! # CC = gcc
X  #
X  #	For Bull DPX/2 systems at B.O.S. 2.0 or higher use the following:
X  #
X--- 15,21 ----
X  
X  # if you are using gcc as your compiler,
X  #	uncomment the CC definition below if it's not in your environment
X! CC = cc
X  #
X  #	For Bull DPX/2 systems at B.O.S. 2.0 or higher use the following:
X  #
X***************
X*** 59,74 ****
X  # flags for debugging:
X  # CFLAGS = -g -I../include
X  
X! CFLAGS = -g -I../include
X! LFLAGS =
X!  
X  
X  # yacc/lex programs to use to generate *_comp.h, *_lex.c, and *_yacc.c.
X  # if, instead of yacc/lex you have bison/flex, comment/uncomment the following.
X! YACC     = yacc
X! LEX      = lex
X! # YACC     = bison -y
X! # LEX      = flex
X   
X  # these are the names of the output files from YACC/LEX. Under MS-DOS
X  # and similar systems, they may differ
X--- 59,74 ----
X  # flags for debugging:
X  # CFLAGS = -g -I../include
X  
X! CFLAGS = -g -I../include -DDOUGLAS_ADAMS
X! LFLAGS = 
X! LIBS = -lPW 
X  
X  # yacc/lex programs to use to generate *_comp.h, *_lex.c, and *_yacc.c.
X  # if, instead of yacc/lex you have bison/flex, comment/uncomment the following.
X! # YACC     = yacc
X! # LEX      = lex
X! YACC     = bison -y
X! LEX      = flex
X   
X  # these are the names of the output files from YACC/LEX. Under MS-DOS
X  # and similar systems, they may differ
X***************
X*** 113,123 ****
X  # YACCDIST = -l
X  YACCDIST =
X  
X  
X  #	dependencies for makedefs
X  #
X  makedefs:	$(MAKEOBJS)
X! 	$(CC) $(LFLAGS) -o makedefs $(MAKEOBJS)
X  
X  makedefs.o:  ../include/config.h ../include/permonst.h ../include/objclass.h \
X  		../include/monsym.h ../include/artilist.h \
X--- 113,124 ----
X  # YACCDIST = -l
X  YACCDIST =
X  
X+ all:	makedefs lev_comp dgn_comp recover
X  
X  #	dependencies for makedefs
X  #
X  makedefs:	$(MAKEOBJS)
X! 	$(CC) $(LFLAGS) -o makedefs $(MAKEOBJS) $(LIBS)
X  
X  makedefs.o:  ../include/config.h ../include/permonst.h ../include/objclass.h \
X  		../include/monsym.h ../include/artilist.h \
X***************
X*** 147,153 ****
X  #	dependencies for lev_comp
X  #
X  lev_comp:  $(SPLEVOBJS)
X! 	$(CC) $(LFLAGS) -o lev_comp $(SPLEVOBJS)
X  
X  lev_yacc.o:  ../include/hack.h ../include/sp_lev.h
X  lev_main.o:  ../include/hack.h ../include/sp_lev.h ../include/termcap.h
X--- 148,154 ----
X  #	dependencies for lev_comp
X  #
X  lev_comp:  $(SPLEVOBJS)
X! 	$(CC) $(LFLAGS) -o lev_comp $(SPLEVOBJS) $(LIBS)
X  
X  lev_yacc.o:  ../include/hack.h ../include/sp_lev.h
X  lev_main.o:  ../include/hack.h ../include/sp_lev.h ../include/termcap.h
X***************
X*** 180,186 ****
X  #	dependencies for dgn_comp
X  #
X  dgn_comp:  $(DGNCOMPOBJS)
X! 	$(CC) $(LFLAGS) -o dgn_comp $(DGNCOMPOBJS)
X  
X  dgn_yacc.o:  ../include/config.h ../include/dgn_file.h
X  dgn_main.o:  ../include/config.h
X--- 181,187 ----
X  #	dependencies for dgn_comp
X  #
X  dgn_comp:  $(DGNCOMPOBJS)
X! 	$(CC) $(LFLAGS) -o dgn_comp $(DGNCOMPOBJS) $(LIBS)
X  
X  dgn_yacc.o:  ../include/config.h ../include/dgn_file.h
X  dgn_main.o:  ../include/config.h
X***************
X*** 211,217 ****
X  #	dependencies for recover
X  #
X  recover: $(RECOVOBJS)
X! 	$(CC) $(LFLAGS) -o recover $(RECOVOBJS)
X  
X  recover.o: ../include/config.h
X  
X--- 212,218 ----
X  #	dependencies for recover
X  #
X  recover: $(RECOVOBJS)
X! 	$(CC) $(LFLAGS) -o recover $(RECOVOBJS) $(LIBS)
X  
X  recover.o: ../include/config.h
X  
X*** /tmp/tmp.1285	Sat May 28 21:17:10 1994
X--- ./src/apply.c	Sat May 14 19:57:14 1994
X***************
X*** 642,647 ****
X--- 642,650 ----
X  			(ttmp->ttyp == MAGIC_PORTAL || !Can_dig_down(&u.uz))) {
X  		pline("The %s here is too hard to dig in.",
X  			surface(dpx,dpy));
X+ 		if (Invocation_lev(&u.uz) && !u.uevent.invoked) {
X+ 			You("see the Amulet Of Yendor briefly flash between your feet.");
X+ 		}
X  		return(0);
X  	    } else if (sobj_at(BOULDER, dpx, dpy)) {
X  		pline("There isn't enough room to dig here.");
X***************
X*** 943,949 ****
X  	boolean nohole = !Can_dig_down(&u.uz);
X  
X  	if (ttmp && (ttmp->ttyp == MAGIC_PORTAL || nohole)) {
X! 		pline("The %s here is too hard to dig in.", surface(u.ux,u.uy));
X  
X  	} else if (is_pool(u.ux, u.uy) || is_lava(u.ux, u.uy)) {
X  		pline("The %s sloshes furiously for a moment, then subsides.",
X--- 946,956 ----
X  	boolean nohole = !Can_dig_down(&u.uz);
X  
X  	if (ttmp && (ttmp->ttyp == MAGIC_PORTAL || nohole)) {
X! 		if (Invocation_lev(&u.uz) && !u.uevent.invoked) {
X! 			You("see the Amulet Of Yendor briefly flash between your feet.");
X! 		} else {
X! 			pline("The %s here is too hard to dig in.", surface(u.ux,u.uy));
X! 		}
X  
X  	} else if (is_pool(u.ux, u.uy) || is_lava(u.ux, u.uy)) {
X  		pline("The %s sloshes furiously for a moment, then subsides.",
X***************
X*** 1860,1865 ****
X--- 1867,1873 ----
X  	    can->owt = weight(can);
X  	    can->known = 1;
X  	    can->spe = -1;  /* Mark tinned tins. No spinach allowed... */
X+ 	    can->selfmade = TRUE;
X  	    if (carried(corpse)) {
X  		if(corpse->unpaid) {
X  		    verbalize("You tin it, you bought it!");
X***************
X*** 2038,2043 ****
X--- 2046,2177 ----
X  	}
X  }
X  
X+ void use_floppies(struct obj *obj)
X+ {
X+ 	char *softwares[] = {
X+ 		"Microsoft Windows 3.1",
X+ 		"Bill Gates",
X+ 		"Leisure Suit Larry V",
X+ 		"LINUX 1.00",
X+ 		"your NetHack patches",
X+ 		"nothing of importance"
X+ 	};
X+ 	int x;
X+ 
X+ 	if (pl_character[0] != 'G') {
X+ 		pline("If only you knew what the heck this is ... ");
X+ 		return;
X+ 	}
X+ 
X+ 	pline("Due to years of experience with computers, you can read the");
X+ 	pline("disks' contents by merely looking at the magnetic surface ...");
X+ 
X+ 	if (Blind) {
X+ 		pline("Yet, without seeing, not even you can read anyting.");
X+ 		return;
X+ 	}
X+ 
X+ 	if (obj->oartifact == ART_NETHACK_SOURCES) {
X+ 		com_pager(9999);
X+ 	} else {
X+ 		x = rn2(sizeof(softwares) / sizeof(softwares[0]));
X+ 		pline("You see %s on the disk",softwares[x]);
X+ 		if (x == 0) {		/* Windows */
X+ 			pline("You shriek in pain!");
X+ 			make_confused(HConfusion+rn2(50)+50,TRUE);
X+ 		} else if (x == 1) {	/* Bill Gates */
X+ 			pline("You feel horrible!");
X+ 			/* nothing happens (yet ...) */
X+ 		}
X+ 	}
X+ }
X+ 
X+ static int
X+ potion_charge_cost(struct obj *pot)
X+ {
X+ 	int cost;
X+ 
X+ 	cost = objects[pot->otyp].oc_cost / 150;
X+ 	if (cost < 1) cost = 1;
X+ 	return(cost);
X+ }
X+ 
X+ static void
X+ use_chemistry_set(struct obj *chemset)
X+ {
X+ 	struct obj *bottle;
X+ 	static char bottles[] = { TOOL_CLASS, 0 };
X+ 	char namebuf[BUFSZ],potbuf[BUFSZ];
X+ 	struct obj *new_obj;
X+ 	int cost;
X+ 	char c;
X+ 
X+ 	if (!spell_known(SPE_CHEMISTRY)) {
X+ 		pline("Huh? You don't understand anything about such stuff!");
X+ 		return;
X+ 	}
X+ 	makeknown(CHEMISTRY_SET);
X+ 
X+ 	bottle = getobj(bottles,"hold the resulting potion in");
X+ 	if (!bottle) return;
X+ 	if (bottle->otyp != BOTTLE) {
X+ 		pline("Exactly how are you going to do this?");
X+ 		return;
X+ 	}
X+ 
X+ 	getlin("What potion do you want to make?",namebuf);
X+ 	if (!namebuf[0] || namebuf[0] == '\033') return;
X+ 
X+ 	potbuf[0] = 0;
X+ 	if (strncmp(namebuf,"potion of",9) != 0) {
X+ 		strcpy(potbuf,"potion of ");
X+ 	}
X+ 	strcat(potbuf,namebuf);
X+ 	new_obj = readobjnam(potbuf);
X+ 
X+ 	if (!new_obj || new_obj->oclass != POTION_CLASS) {
X+ 		goto blast_him;
X+ 	}
X+ 	if (!(objects[new_obj->otyp].oc_name_known) && 
X+ 	    !(objects[new_obj->otyp].oc_uname)) {
X+ 		You("don't know how to make such a potion!");
X+ 		c =yn_function("Do you want to give it a try anyway?","yn",'n');
X+ 		if (c != 'y') {	
X+ 			obfree(new_obj,(struct obj *) 0);
X+ 			return;
X+ 		}
X+ 		if (rnl(5)) {
X+ 			useup(bottle);
X+ 			goto blast_him;
X+ 		}
X+ 	}
X+ 	new_obj->selfmade = TRUE;
X+ 	new_obj->cursed = bottle->cursed || chemset->cursed;
X+ 	new_obj->blessed = bottle->blessed || chemset->blessed;
X+ 	if (new_obj->blessed && new_obj->cursed) {
X+ 		new_obj->blessed = new_obj->cursed = FALSE;
X+ 	}
X+ 	cost = potion_charge_cost(new_obj);
X+ 	if (cost > chemset->spe) {
X+ 		goto blast_him;
X+ 	}
X+ 	chemset->spe -= cost;
X+ 	useup(bottle);
X+ 
X+ 	if (!chemset->blessed && !rn2(chemset->cursed ? 2 : 10)) {
X+ blast_him:
X+ 		pline("You seem to have made a mistake!");
X+ 		pline("The bottle explodes!");
X+ 		losehp(rnd(chemset->cursed ? 25 : 10),"alchemic blast",KILLED_BY_AN);
X+ 		obfree(new_obj,(struct obj *) 0);
X+ 		return;
X+ 	}
X+ 
X+ 	if (!(objects[new_obj->otyp].oc_name_known)) makeknown(new_obj->otyp);
X+ 	hold_another_object(new_obj,"Oops! Where did you put that potion?",(const char *) 0,(const char *) 0);
X+ 	You("have done it!");
X+ }
X+ 
X  int
X  doapply()
X  {
X***************
X*** 2066,2073 ****
X--- 2200,2210 ----
X  	case SACK:
X  	case BAG_OF_HOLDING:
X  	case OILSKIN_SACK:
X+ 	case SCHROEDINGER_S_BOX:
X+ 	case BAG_OF_DIGESTION:
X  		res = use_container(obj, 1);
X  		break;
X+ 
X  	case BAG_OF_TRICKS:
X  		if(obj->spe > 0) {
X  			register int cnt = 1;
X***************
X*** 2209,2214 ****
X--- 2346,2403 ----
X  		} else
X  		    pline(nothing_happens);
X  		break;
X+ #ifdef DOUGLAS_ADAMS
X+ 	case HITCHHIKER_S_GUIDE_TO_THE_GALA:
X+ 		if (HHallucination) {
X+ 			pline("You carelessly push the buttons. On the screen is a text ... ");
X+ 			outrumor(-1,42);	/* always false */
X+ 		} else {
X+ 			pline("So many knobs to turn! So many buttons to press!");
X+ 			make_confused(HConfusion+rn2(10),TRUE);
X+ 		}
X+ 		break;
X+ 
X+ 	case RELAY:
X+ 		if (obj->oartifact == ART_BURNED_MOTH_RELAY) {	
X+ 			pline("There's a little badly burned moth in that relay!");
X+ 			makeknown(RELAY);
X+ 			if (pl_character[0] == 'G') {
X+ 				You("feel remembered of %s.",Hallucination ? "when the net was flat" : "the old times");
X+ 				break;
X+ 			}
X+ 		}	/* fall through */
X+ 		
X+ 	case DIODE:
X+ 	case TRANSISTOR:
X+ 	case IC:
X+ 		pline("You don't understand anything about electronics !!!");
X+ 		break;
X+ #endif
X+ 
X+ 	case GOD_O_METER:
X+ 		if (Blind) {
X+ 			pline("Being blind, you cannot see it.");
X+ 		} else if (!obj->blessed) {
X+ 			You("feel uncomfortable.");
X+ 			u.ublesscnt += rn2((obj->cursed) ? 200 : 100);
X+ 		} else {
X+ 			You("see a%s flash from the device.",(u.ublesscnt>0) ? " black" : "n amber");
X+ #ifdef WIZARD
X+ 			if (wizard) {
X+ 				Your("prayer timeout is %i.",u.ublesscnt);
X+ 			}
X+ #endif
X+ 		}
X+ 		break;
X+ 
X+ 	case PACK_OF_FLOPPIES:
X+ 		use_floppies(obj);
X+ 		break;
X+ 
X+ 	case CHEMISTRY_SET:
X+ 		use_chemistry_set(obj);
X+ 		break;
X+ 
X  	default:
X  		pline("Sorry, I don't know how to use that.");
X  	xit:
X*** /tmp/tmp.1285	Sat May 28 21:17:12 1994
X--- ./src/attrib.c	Fri Apr 15 20:44:40 1994
X***************
X*** 53,58 ****
X--- 53,64 ----
X  		     {	 1, &(HSleep_resistance), "", "" },
X  		     {	 0, 0, 0, 0 } },
X  
X+ 	g_abil[] = { {   1, &(HPoison_resistance), "", "" },
X+ 		     {   1, &(HShock_resistance), "", "" },
X+ 		     {   8, &(HTeleport_control), "controlled", "helpless" },
X+ 		     {  15, &(Warning), "sensitive", "careless" },
X+ 		     {   0, 0, 0, 0, } },
X+ 
X  	h_abil[] = { {	 1, &(HPoison_resistance), "", "" },
X  		     {	15, &(Warning), "sensitive", "" },
X  		     {	 0, 0, 0, 0 } },
X***************
X*** 117,122 ****
X--- 123,132 ----
X  		   {	30, 10, 10, 20, 20, 10 },
X  		    { A_CHAOTIC, 10 },  15, 10, 11,  2, e_abil },
X  
X+ 	g_attr = { {    10, 10, 10,  8,  9,  7 },  /* Geek (hacker) */
X+ 		   {    30, 15, 15, 10, 20, 10 },
X+ 		    { A_NEUTRAL, 10 }, 12, 10, 20, 2, g_abil },
X+ 
X  	h_attr = { {	 7,  7, 13,  7, 11, 16 },  /* Healer (druid) */
X  		   {	15, 20, 20, 15, 25, 10 },
X  		    { A_NEUTRAL, 10 },  13, 10, 20,  2, h_abil },
X***************
X*** 491,496 ****
X--- 501,508 ----
X  			break;
X  	    case 'E':	attr = &e_attr;
X  			break;
X+ 	    case 'G':	attr = &g_attr;
X+ 			break;
X  	    case 'H':	attr = &h_attr;
X  			break;
X  	    case 'K':	attr = &k_attr;
X***************
X*** 528,535 ****
X  	else u.ualign.type = attr->align.type;
X  }
X  
X! void
X! init_attr(np)
X  	register int	np;
X  {
X  	register int	i, x, tryct;
X--- 540,547 ----
X  	else u.ualign.type = attr->align.type;
X  }
X  
X! static void
X! init_attr_(np)
X  	register int	np;
X  {
X  	register int	i, x, tryct;
X***************
X*** 578,583 ****
X--- 590,689 ----
X  	    np++;
X  	}
X  }
X+ 
X+ static char get_acception(void)
X+ {
X+ 	char c;
X+ 
X+ 	pline("St:");
X+ 	if (ACURR(A_STR) > 118) {
X+ 		pline("%2d",ACURR(A_STR) - 100);
X+ 	} else if (ACURR(A_STR) == 118) {
X+ 		pline("18/**");
X+ 	} else if (ACURR(A_STR) > 18) {
X+ 		pline("18/%02d",ACURR(A_STR) - 18);
X+ 	} else {
X+ 		pline("%-1d",ACURR(A_STR));
X+ 	}
X+ 	pline(" Dx:%-1d Co:%-1d In:%-1d Wi:%-1d Ch:%-1d  ",ACURR(A_DEX),ACURR(A_CON),ACURR(A_INT),ACURR(A_WIS),ACURR(A_CHA));
X+ 	c = yn_function("Accept?","ynrq",'n');
X+ 	return(c);
X+ }
X+ 
X+ void init_attr(int np)
X+ {
X+ 	char c;
X+ 	boolean forced,askforce,ok,done;
X+ 	schar att;
X+ 	int aval;
X+ 	char buf[BUFSZ];
X+ 	int i;
X+ 
X+ 	askforce = TRUE;
X+ 	done = FALSE;
X+ 	do {
X+ 		if (askforce) {		
X+ 			askforce = FALSE;
X+ 			c = yn_function("Do you want to force anything?","yn",'n');
X+ 			if (c == 'n') {
X+ 				forced = FALSE;
X+ 			} else {
X+ 				forced = TRUE;
X+ 				c = yn_function("What do you want to force?","sdciwh",'\0');
X+ 				switch (c) {
X+ 					case 's':	att = A_STR;	break;
X+ 					case 'd':	att = A_DEX;	break;
X+ 					case 'c':	att = A_CON;	break;
X+ 					case 'i':	att = A_INT;	break;
X+ 					case 'w':	att = A_WIS;	break;
X+ 					case 'h':
X+ 					default:	att = A_CHA;	break;
X+ 				}
X+ 				while (1) {
X+ 					ok = TRUE;
X+ 					getlin("What is the minimum value?",buf);
X+ 					i = 0;
X+ 					while (buf[i]) {
X+ 						if (!isdigit(buf[i])) ok = FALSE;
X+ 						i++;
X+ 					}
X+ 					if (!ok) continue;
X+ 					aval = atoi(buf);
X+ 					if (aval < ATTRMIN(att) || aval > ATTRMAX(att)) continue;
X+ 					break;
X+ 				}
X+ 			}
X+ 		}
X+ 		i = 0;
X+ 		ok = FALSE;
X+ 		pline("Trying ... ");
X+ 		while (i < 2000 && !ok) {
X+ 			init_attr_(np);
X+ 			if (forced) {
X+ 				if (ACURR(att) >= aval) ok = TRUE;
X+ 			} else {
X+ 				ok = TRUE;
X+ 			}
X+ 			i++;
X+ 		}
X+ 		if (!ok) {
X+ 			c = yn_function("This doesn't seem to work. Try again?","yn",'n');
X+ 			if (c == 'n') askforce = TRUE;
X+ 			done = FALSE;
X+ 			continue;
X+ 		}
X+ 		c = get_acception();
X+ 		switch (c) {
X+ 			case 'y':	done = TRUE;
X+ 					break;
X+ 			case 'r':	askforce = TRUE;  /* fall through */
X+ 			case 'n':	done = FALSE;
X+ 					break;
X+ 			case 'q':	exit_nhwindows(NULL);
X+ 					terminate(0);
X+ 		}
X+ 	} while (!done);			
X+ }	
X  
X  void
X  redist_attr() {
X*** /tmp/tmp.1285	Sat May 28 21:17:14 1994
X--- ./src/artifact.c	Thu Apr 21 16:59:47 1994
X***************
X*** 40,45 ****
X--- 40,47 ----
X  static void
X  hack_artifacts()
X  {
X+ 	struct artifact *a;
X+ 
X  	/* Excalibur can be used by any lawful character, not just knights */
X  	if (pl_character[0] != 'K')
X  	    artilist[ART_EXCALIBUR].class = '\0';
X***************
X*** 48,53 ****
X--- 50,59 ----
X  	if (pl_character[0] == 'P')
X  	    artilist[ART_MITRE_OF_HOLINESS].alignment = u.ualignbase[1];
X  #endif
X+ 
X+ 	for (a=artilist+1;a->otyp;a++) {
X+ 		if (a->alignment == A_NONE) a->alignment = u.ualignbase[1];
X+ 	}
X  }
X  
X  /* zero out the artifact existence list */
X***************
X*** 160,165 ****
X--- 166,192 ----
X      return NULL;
X  }
X  
X+ int
X+ artifact_name2no(name)
X+ const char *name;
X+ {
X+ 	register const struct artifact *a;
X+ 	register int i;
X+ 	register const char *aname;
X+ 
X+ 	if (!strncmpi(name,"the ",4)) name += 4;
X+ 
X+ 	for (a = artilist+1,i=1; a->otyp; a++,i++) {
X+ 		aname = a->name;
X+ 		if (!strncmpi(aname,"the ",4)) aname += 4;
X+ 		if (!strcmpi(name, aname)) {
X+ 			return(i);
X+ 		}	
X+ 	}
X+ 
X+ 	return(0);
X+ }
X+ 
X  boolean
X  exist_artifact(otyp, name)
X  register int otyp;
X***************
X*** 389,394 ****
X--- 416,430 ----
X  	    if (on) Half_physical_damage |= wp_mask;
X  	    else Half_physical_damage &= ~wp_mask;
X  	}
X+ 	if (spfx & SPFX_PROTEC) {
X+ 	    if (on) {
X+ 		u.ublessed += 2;
X+ 		Protection |= FROMOUTSIDE;
X+ 	    } else {
X+ 	    	u.ublessed -= 2;
X+ 		if (u.ublessed <= 0) Protection &= ~FROMOUTSIDE;
X+ 	    }
X+ 	}
X  
X  	if(wp_mask == W_ART && !on && oart->inv_prop) {
X  	    /* might have to turn off invoked power too */
X***************
X*** 415,420 ****
X--- 451,457 ----
X      boolean yours = (mon == &youmonst);
X  
X      if(!oart) return 1;
X+     if (oart->spfx & SPFX_TOUCH) return 1;
X  
X      badclass = (oart->class && (!yours || oart->class != pl_character[0]));
X      badalign = (oart->spfx & SPFX_RESTR) &&
X***************
X*** 853,861 ****
X  				return ((boolean)(youattack || vis));
X  			}
X  			*dmgptr = mdef->mhp;
X! 			pline(behead_msg[rn2(SIZE(behead_msg))],
X! 			      artilist[ART_VORPAL_BLADE].name,
X! 			      mon_nam(mdef));
X  			otmp->dknown = TRUE;
X  			return TRUE;
X  		} else {
X--- 890,902 ----
X  				return ((boolean)(youattack || vis));
X  			}
X  			*dmgptr = mdef->mhp;
X! 			if (mdef->data == &mons[PM_JABBERWOCK]) {
X! 				pline("The vorpal blade goes snicker-snack!");
X! 			} else {
X! 				pline(behead_msg[rn2(SIZE(behead_msg))],
X! 				      artilist[ART_VORPAL_BLADE].name,
X! 				      mon_nam(mdef));
X! 			}
X  			otmp->dknown = TRUE;
X  			return TRUE;
X  		} else {
X***************
X*** 979,984 ****
X--- 1020,1033 ----
X  	    obfree(pseudo, (struct obj *)0);	/* now, get rid of it */
X  	    break;
X  	  }
X+ 	case IDENTIFY: {
X+ 		struct obj *pseudo = mksobj(SPE_IDENTIFY, FALSE, FALSE);
X+ 		pseudo->blessed = pseudo->cursed = 0;
X+ 		pseudo->quan = 42L;		/* do not let useup get it */
X+ 		(void) seffects(pseudo);
X+ 		obfree(pseudo, (struct obj *) 0);
X+ 		break;
X+ 	    }
X  	case HEALING: {
X  	    int healamt = (u.uhpmax + 1 - u.uhp) / 2;
X  	    if(healamt || Sick || (Blinded > 1))
X***************
X*** 1019,1024 ****
X--- 1068,1078 ----
X  	case LEV_TELE:
X  	    level_tele();
X  	    break;
X+ 	case DRAGON_BREATH:
X+ 	    getdir(NULL);
X+ 	    buzz(20+AD_FIRE-1,6,u.ux,u.uy,u.dx,u.dy);
X+ 	/*       ^^^^^^^^^^^^ - see zap.c / ZT_* defines */
X+ 	    break;
X  	case CREATE_PORTAL: {
X  	    register int i;
X  	    d_level newlev;
X***************
X*** 1122,1127 ****
X--- 1176,1196 ----
X      }
X  
X      return 1;
X+ }
X+ 
X+ boolean nogen_nrartifact(int artino)
X+ {
X+ 	return(artilist[artino].spfx & SPFX_NOGEN);
X+ }
X+ 
X+ boolean exists_nrartifact(int artino)
X+ {
X+ 	return(artiexist[artino]);
X+ }
X+ 
X+ int nrartifact_obtype(int artino)
X+ {
X+ 	return(artilist[artino].otyp);
X  }
X  
X  #endif /* OVLB */
X*** /tmp/tmp.1285	Sat May 28 21:17:17 1994
X--- ./src/cmd.c	Fri Mar 18 22:22:17 1994
X***************
X*** 534,539 ****
X--- 534,541 ----
X  	if (Stoned) you_are("turning to stone");
X  	if (Lifesaved)
X  		enl_msg("Your life ", "will be", "would have been", " saved");
X+ 	if (Second_chance)
X+   	  enl_msg("You ","will be", "would have been"," given a second chance");
X  	if (Adornment) you_are("adorned");
X  	if (Warning) you_are("warned");
X  	if (Protection) you_are("protected");
X*** /tmp/tmp.1285	Sat May 28 21:17:18 1994
X--- ./src/botl.c	Wed Mar 23 14:45:38 1994
X***************
X*** 105,110 ****
X--- 105,123 ----
X  	{"Ernil",	"Elentariel"},	/* prince (S.), elf-maiden (Q.) */
X  	{"Elentar",	"Elentari"}	/* Star-king, -queen (Q.) */
X    } },
X+ 
X+   {					'G',0,  PM_GEEK, {
X+ 	{"Newbie",			0},
X+ 	{"BASIC Programmer", 		"BASIC Programmeress"},
X+ 	{"C Programmer",		"C Programmeress"},
X+ 	{"Hacker",			"Hackeress"},
X+ 	{"NetHacker",			"NetHackeress"},
X+ 	{"Nethack Programmer",		"Nethack Programmeress"},
X+ 	{"he who uses",			"she who uses"},
X+ 	{"he who knows",		"she who knows"},
X+ 	{"he who learns",		"she who learns"},
X+   } },
X+ 
X    {					'H',0,	PM_HEALER, {
X  	{"Rhizotomist",  0},
X  	{"Empiric",	0},
X***************
X*** 244,249 ****
X--- 257,273 ----
X  	return(rank_of(u.ulevel, pl_character[0], flags.female));
X  }
X  
X+ STATIC_OVL boolean without_the()
X+ {
X+ 	char *s;
X+ 
X+ 	s = rank();
X+ 
X+ 	if ((s[0] == 'H' || s[0] == 'h') && s[1] == 'e') return(TRUE);
X+ 	if ((s[0] == 'S' || s[0] == 's') && s[1] == 'h' && s[2] == 'e') return(TRUE);
X+ 	return(FALSE);
X+ }
X+ 
X  int
X  title_to_mon(str, rank_indx, title_length)
X  const char *str;
X***************
X*** 317,323 ****
X  	Strcpy(newbot1, plname);
X  	if('a' <= newbot1[0] && newbot1[0] <= 'z') newbot1[0] += 'A'-'a';
X  	newbot1[10] = 0;
X! 	Sprintf(nb = eos(newbot1)," the ");
X  #ifdef POLYSELF
X  	if (u.mtimedone) {
X  		char mbot[BUFSZ];
X--- 341,351 ----
X  	Strcpy(newbot1, plname);
X  	if('a' <= newbot1[0] && newbot1[0] <= 'z') newbot1[0] += 'A'-'a';
X  	newbot1[10] = 0;
X! 	if (without_the()) {
X! 		Sprintf(nb = eos(newbot1),", ");
X! 	} else {
X! 		Sprintf(nb = eos(newbot1)," the ");
X! 	}
X  #ifdef POLYSELF
X  	if (u.mtimedone) {
X  		char mbot[BUFSZ];
X***************
X*** 394,399 ****
X--- 422,428 ----
X  	Sprintf(nb = eos(newbot2),
X  		"%c:%-2ld HP:%d(%d) Pw:%d(%d) AC:%-2d", oc_syms[GOLD_CLASS],
X  		u.ugold, hp, hpmax, u.uen, u.uenmax, u.uac);
X+ 	if (wizard) Sprintf(nb = eos(newbot2)," HPL:%d",u.uhplast);
X  #ifdef POLYSELF
X  	if (u.mtimedone)
X  		Sprintf(nb = eos(nb), " HD:%d", mons[u.umonnum].mlevel);
X*** /tmp/tmp.1285	Sat May 28 21:17:19 1994
X--- ./src/do_name.c	Sun Dec 26 12:03:53 1993
X***************
X*** 617,623 ****
X--- 617,625 ----
X  	"Terminator",				/* The Terminator */
X  	"boomer",				/* Bubblegum Crisis */
X  	"Dalek",				/* Dr. Who ("Exterminate!") */
X+ #ifndef DOUGLAS_ADAMS	 /* then real monsters */
X  	"microscopic space fleet", "Ravenous Bugblatter Beast of Traal",
X+ #endif
X  						/* HGttG */
X  	"teenage mutant ninja turtle",		/* TMNT */
X  	"samurai rabbit",			/* Usagi Yojimbo */
X*** /tmp/tmp.1285	Sat May 28 21:17:21 1994
X--- ./src/do.c	Fri Apr 15 22:53:52 1994
X***************
X*** 32,37 ****
X--- 32,38 ----
X  
X  STATIC_PTR int FDECL(drop, (struct obj *));
X  STATIC_PTR int NDECL(wipeoff);
X+ STATIC_PTR void NDECL(lose_comp_objects);
X  
X  #ifdef OVL2
X  static int NDECL(currentlevel_rewrite);
X***************
X*** 59,64 ****
X--- 60,87 ----
X  #endif /* OVLB */
X  #ifdef OVL0
X  
X+ STATIC_PTR void
X+ lose_comp_objects()
X+ {
X+ 	struct obj *otmp,*on;
X+ 	int x;
X+ 
X+ 	x = 0;
X+ 	for (otmp=invent;otmp;) {
X+ 		on = otmp->nobj;
X+ 		if (otmp->otyp == RIN_TIMELY_BACKUP 
X+ 		||  otmp->otyp == SCR_ROOT_PASSWORD_DETECTION
X+ 		||  otmp->otyp == AMULET_OF_DATA_STORAGE
X+ 		||  otmp->otyp == WAN_BUGGING ) {
X+ 			pline("%s%s vanish%s!",(x++) ? "" : "All of a sudden, ",doname(otmp),(otmp->quan > 1) ? "" : "es");
X+ 			setnotworn(otmp);
X+ 			freeinv(otmp);
X+ 			obfree(otmp, (struct obj *) 0);
X+ 		}
X+ 		otmp = on;
X+ 	}
X+ }
X+ 
X  /* Called when a boulder is dropped, thrown, or pushed.  If it ends up
X   * in a pool, it either fills the pool up or sinks away.  In either case,
X   * it's gone for good...  If the destination is not a pool, returns FALSE.
X***************
X*** 281,286 ****
X--- 304,316 ----
X  		pline("The water's force seems %ser now.",
X  			(obj->spe<0) ? "small" : "great");
X  		break;
X+ 	    case RIN_HEALTH:
X+ 		pline("The water's quality seems %screased.",
X+ 			(obj->spe<0) ? "de" : "in");
X+ 		break;
X+ 	    case RIN_TIMELY_BACKUP:
X+ 		pline("The sink seems undestroyable.");
X+ 		break;
X  	    default:
X  		ideed = FALSE;
X  		break;
X***************
X*** 465,471 ****
X  register struct obj *obj;
X  {
X  	if (!u.uswallow && flooreffects(obj,u.ux,u.uy,"drop")) return;
X! 	if(obj->otyp == CRYSKNIFE)
X  		obj->otyp = WORM_TOOTH;
X  	(void) snuff_candle(obj);
X  	/* uswallow check done by GAN 01/29/87 */
X--- 495,501 ----
X  register struct obj *obj;
X  {
X  	if (!u.uswallow && flooreffects(obj,u.ux,u.uy,"drop")) return;
X! 	if(obj->otyp == CRYSKNIFE && !obj->oartifact)
X  		obj->otyp = WORM_TOOTH;
X  	(void) snuff_candle(obj);
X  	/* uswallow check done by GAN 01/29/87 */
X***************
X*** 870,875 ****
X--- 900,906 ----
X  	if (Punished) placebc();
X  	losedogs();
X  	obj_delivery();
X+ 	lose_comp_objects();
X  
X  	initrack();
X  
X*** /tmp/tmp.1285	Sat May 28 21:17:22 1994
X--- ./src/decl.c	Sat Mar 19 14:45:41 1994
X***************
X*** 229,237 ****
X  struct tc_gbl_data tc_gbl_data = { 0,0, 0,0 };	/* AS,AE, LI,CO */
X  
X  #ifdef TOURIST
X! const char NEARDATA *pl_classes = "ABCEHKPRSTVW";
X  #else
X! const char NEARDATA *pl_classes = "ABCEHKPRSVW";
X  #endif
X  
X  /* dummy routine used to force linkage */
X--- 229,237 ----
X  struct tc_gbl_data tc_gbl_data = { 0,0, 0,0 };	/* AS,AE, LI,CO */
X  
X  #ifdef TOURIST
X! const char NEARDATA *pl_classes = "ABCEGHKPRSTVW";
X  #else
X! const char NEARDATA *pl_classes = "ABCEGHKPRSVW";
X  #endif
X  
X  /* dummy routine used to force linkage */
X*** /tmp/tmp.1285	Sat May 28 21:17:26 1994
X--- ./src/do_wear.c	Sun Apr 10 15:52:13 1994
X***************
X*** 347,352 ****
X--- 347,353 ----
X  
X      switch(uarmg->otyp) {
X  	case LEATHER_GLOVES:
X+ 	case GAUNTLETS_OF_TYPING:
X  		break;
X  	case GAUNTLETS_OF_FUMBLING:
X  		if (!oldprop)
X***************
X*** 374,379 ****
X--- 375,381 ----
X  
X      switch(uarmg->otyp) {
X  	case LEATHER_GLOVES:
X+ 	case GAUNTLETS_OF_TYPING:
X  		break;
X  	case GAUNTLETS_OF_FUMBLING:
X  		if (!oldprop)
X***************
X*** 484,489 ****
X--- 486,492 ----
X  	case AMULET_OF_REFLECTION:
X  	case AMULET_OF_MAGICAL_BREATHING:
X  	case FAKE_AMULET_OF_YENDOR:
X+ 	case AMULET_OF_SECOND_CHANCE:
X  		break;
X  	case AMULET_OF_CHANGE:
X  		makeknown(AMULET_OF_CHANGE);
X***************
X*** 503,508 ****
X--- 506,514 ----
X  	case AMULET_OF_RESTFUL_SLEEP:
X  		Sleeping = rnd(100);
X  		break;
X+ 	case AMULET_OF_DATA_STORAGE:
X+ 		You("feel full of knowledge.");
X+ 		break;
X  	case AMULET_OF_YENDOR:
X  		break;
X      }
X***************
X*** 520,525 ****
X--- 526,532 ----
X  	case AMULET_OF_LIFE_SAVING:
X  	case AMULET_VERSUS_POISON:
X  	case AMULET_OF_REFLECTION:
X+ 	case AMULET_OF_SECOND_CHANCE:
X  	case FAKE_AMULET_OF_YENDOR:
X  		break;
X  	case AMULET_OF_MAGICAL_BREATHING:
X***************
X*** 548,553 ****
X--- 555,563 ----
X  	case AMULET_OF_RESTFUL_SLEEP:
X  		Sleeping = 0;
X  		break;
X+ 	case AMULET_OF_DATA_STORAGE:
X+ 		You("feel intellectually poor.");
X+ 		break;
X  	case AMULET_OF_YENDOR:
X  		break;
X      }
X***************
X*** 642,647 ****
X--- 652,668 ----
X  			obj->known = TRUE;
X  		}
X  		break;
X+ 	case RIN_HEALTH:
X+ 		ABON(A_CON) += obj->spe;
X+ 		flags.botl = 1;
X+ 		if (obj->spe || objects[RIN_HEALTH].oc_name_known) {
X+ 			makeknown(RIN_HEALTH);
X+ 			obj->known = TRUE;
X+ 		}
X+ 		break;
X+ 	case RIN_TIMELY_BACKUP:
X+ 		You("feel absolutely safe.");
X+ 		break;
X      }
X  }
X  
X***************
X*** 715,720 ****
X--- 736,748 ----
X  		 * change shape again -dgk
X  		 */
X  		restartcham();
X+ 		break;
X+ 	case RIN_HEALTH:
X+ 		ABON(A_CON) -= obj->spe;
X+ 		flags.botl = 1;
X+ 		break;
X+ 	case RIN_TIMELY_BACKUP:
X+ 		You("feel unsafe.");
X  		break;
X      }
X  }
X*** /tmp/tmp.1285	Sat May 28 21:17:30 1994
X--- ./src/dothrow.c	Fri Apr 15 22:47:29 1994
X***************
X*** 432,438 ****
X  		    return(1);
X  		}
X  		if(flooreffects(obj,bhitpos.x,bhitpos.y,"fall")) return(1);
X! 		if(obj->otyp == CRYSKNIFE)
X  			obj->otyp = WORM_TOOTH;
X  	        if(mon && mon->isshk && obj->otyp == PICK_AXE) {
X  		        mpickobj(mon, obj);
X--- 432,438 ----
X  		    return(1);
X  		}
X  		if(flooreffects(obj,bhitpos.x,bhitpos.y,"fall")) return(1);
X! 		if(obj->otyp == CRYSKNIFE && !obj->oartifact)
X  			obj->otyp = WORM_TOOTH;
X  	        if(mon && mon->isshk && obj->otyp == PICK_AXE) {
X  		        mpickobj(mon, obj);
X*** /tmp/tmp.1285	Sat May 28 21:17:34 1994
X--- ./src/eat.c	Sat Apr 23 14:38:53 1994
X***************
X*** 708,713 ****
X--- 708,720 ----
X  	    case PM_WRAITH:
X  		pluslvl();
X  		break;
X+ #ifdef DOUGLAS_ADAMS
X+ 	    case PM_CREEPING___:
X+ 		pline("You feel appropriately 42!");
X+ 		pluslvl();
X+ 		make_hallucinated(HHallucination+rn1(10,50),TRUE,0L);
X+ 		break;
X+ #endif
X  #ifdef POLYSELF
X  	    case PM_HUMAN_WERERAT:
X  		u.ulycn = PM_WERERAT;
X***************
X*** 1328,1333 ****
X--- 1335,1348 ----
X  		u.ublessed += otmp->spe;
X  		flags.botl = 1;
X  		break;
X+ 	    case RIN_HEALTH:
X+ 		if (adjattrib(A_CON, otmp->spe, -1)) 
X+ 			makeknown(typ);
X+ 		break;
X+ 	    case RIN_TIMELY_BACKUP:
X+ 		You("feel very, very safe.");
X+ 		/* do something ... */
X+ 		break;
X  	}
X  }
X  
X***************
X*** 1429,1434 ****
X--- 1444,1454 ----
X  #endif
X  		}
X  		break;
X+ #ifdef DOUGLAS_ADAMS
X+ 	    case PEANUT_BAG:
X+ 		adjattrib(A_CON,rn2(2)+1,-1);
X+ 		break;
X+ #endif
X  	}
X  	return;
X  }
X***************
X*** 1690,1696 ****
X  		    if (victual.canchoke &&
X  			/* a one-gulp food will not survive a stop */
X  				victual.reqtime > 1) {
X! 			if(yn("Stop eating?") == 'y')
X  			{
X  				reset_eat();
X  				nomovemsg = NULL;
X--- 1710,1716 ----
X  		    if (victual.canchoke &&
X  			/* a one-gulp food will not survive a stop */
X  				victual.reqtime > 1) {
X! 			if(yn_function("Stop eating?","yn",'y') == 'y')
X  			{
X  				reset_eat();
X  				nomovemsg = NULL;
X*** /tmp/tmp.1285	Sat May 28 21:17:35 1994
X--- ./src/end.c	Thu May 12 13:49:54 1994
X***************
X*** 307,313 ****
X  int how;
X  {
X  	u.uswldtim = 0;
X! 	u.uhp = u.uhpmax;
X  	if (u.uhunger < 500) {
X  	    u.uhunger = 500;
X  	    newuhs(FALSE);
X--- 307,318 ----
X  int how;
X  {
X  	u.uswldtim = 0;
X! 	if (Second_chance) {
X! 		u.uhp = u.uhplast;
X! 	} else {
X! 		u.uhp = u.uhpmax;
X! 	}
X! 	u.uhplast = u.uhp;
X  	if (u.uhunger < 500) {
X  	    u.uhunger = 500;
X  	    newuhs(FALSE);
X***************
X*** 357,362 ****
X--- 362,391 ----
X      return valuables;
X  }
X  
X+ static void
X+ kill_ravenous_beasts(int how)
X+ {
X+ 	int count;
X+ 	struct monst *mtmp,*mtmp2;
X+ 
X+ 	count = 0;
X+ 	for (mtmp=fmon;mtmp;mtmp=mtmp2) {
X+ 		mtmp2 = mtmp->nmon;
X+ 		if (mtmp->data == &mons[PM_RAVENOUS_BUGBLATTER_BEAST_OF_TRAAL]) {
X+ 			count++;
X+ 			mondied(mtmp);
X+ 		}
X+ 	}
X+ 
X+ 	if (count > 0) {
X+ 		pline("Just before your consciousness passes, you hear %s.",count == 1 ? "a scream" : "several screams");
X+ 	}
X+ 
X+ 	if (how == GENOCIDED) {
X+ 		mons[PM_RAVENOUS_BUGBLATTER_BEAST_OF_TRAAL].geno |= G_GENOD;
X+ 	}
X+ }
X+ 	
X  /* Be careful not to call panic from here! */
X  void
X  done(how)
X***************
X*** 368,373 ****
X--- 397,404 ----
X  	winid endwin = WIN_ERR;
X  	boolean have_windows = flags.window_inited;
X  
X+ 	if (how < PANICKED) kill_ravenous_beasts(how);
X+ 
X  	/* kilbuf: used to copy killer in case it comes from something like
X  	 *	xname(), which would otherwise get overwritten when we call
X  	 *	xname() when listing possessions
X***************
X*** 387,405 ****
X  	}
X  #endif
X  	if (how < PANICKED) u.umortality++;
X! 	if (Lifesaved && how <= GENOCIDED) {
X  		pline("But wait...");
X! 		makeknown(AMULET_OF_LIFE_SAVING);
X! 		Your("medallion %s!",
X  		      !Blind ? "begins to glow" : "feels warm");
X  		if (how == CHOKING) You("vomit ...");
X  		You("feel much better!");
X! 		pline("The medallion crumbles to dust!");
X! 		useup(uamul);
X  
X  		(void) adjattrib(A_CON, -1, TRUE);
X  		if(u.uhpmax <= 0) u.uhpmax = 10;	/* arbitrary */
X  		savelife(how);
X  		if (how == GENOCIDED)
X  			pline("Unfortunately you are still genocided...");
X  		else {
X--- 418,439 ----
X  	}
X  #endif
X  	if (how < PANICKED) u.umortality++;
X! 	if ((Second_chance || Lifesaved) && how <= GENOCIDED) {
X  		pline("But wait...");
X! 		makeknown(Lifesaved ? AMULET_OF_LIFE_SAVING : AMULET_OF_SECOND_CHANCE);
X! 		Your("%s %s!", Lifesaved ? "medallion" : "amulet",
X  		      !Blind ? "begins to glow" : "feels warm");
X  		if (how == CHOKING) You("vomit ...");
X  		You("feel much better!");
X! 		pline("The amulet crumbles to dust!");
X! /*		useup(uamul); */
X  
X  		(void) adjattrib(A_CON, -1, TRUE);
X  		if(u.uhpmax <= 0) u.uhpmax = 10;	/* arbitrary */
X  		savelife(how);
X+ /* useup() had to be moved for savelife() to distingush between Lifesaved */
X+ /* and Second_chance */
X+ 		useup(uamul);
X  		if (how == GENOCIDED)
X  			pline("Unfortunately you are still genocided...");
X  		else {
X***************
X*** 771,780 ****
X  		    }
X  		    putstr(klwin, 0, buf);
X  		}
X! 	    /*
X! 	     * if (Hallucination)
X! 	     *     putstr(klwin, 0, "and a partridge in a pear tree");
X! 	     */
X  	    if (ntypes > 1) {
X  		putstr(klwin, 0, "");
X  		Sprintf(buf, "%ld creatures vanquished.", total_killed);
X--- 805,815 ----
X  		    }
X  		    putstr(klwin, 0, buf);
X  		}
X! 	   
X! /* Why not ? */ 
X! 	       if (Hallucination)
X! 	           putstr(klwin, 0, "and a partridge in a pear tree");
X! 	     
X  	    if (ntypes > 1) {
X  		putstr(klwin, 0, "");
X  		Sprintf(buf, "%ld creatures vanquished.", total_killed);
X*** /tmp/tmp.1285	Sat May 28 21:17:40 1994
X--- ./src/hack.c	Sun Apr 10 17:45:30 1994
X***************
X*** 1230,1235 ****
X--- 1230,1240 ----
X  		    if(monstinroom(&mons[PM_ORACLE], roomno))
X  			verbalize("Hello, %s, welcome to Delphi!", plname);
X  		    break;
X+ #ifdef DOUGLAS_ADAMS
X+ 		case DOUGROOM:
X+ 		    You("feel 42.");
X+ 		    break;
X+ #endif
X  		case TEMPLE:
X  		    intemple(roomno + ROOMOFFSET);
X  		    /* fall through */
X***************
X*** 1483,1489 ****
X  	register int nval;
X  {
X  	if(multi < nval) return;	/* This is a bug fix by ab@unido */
X! 	u.uinvulnerable = FALSE;	/* Kludge to avoid ctrl-C bug -dlc */
X  	u.usleep = 0;
X  	multi = nval;
X  	flags.mv = flags.run = 0;
X--- 1488,1494 ----
X  	register int nval;
X  {
X  	if(multi < nval) return;	/* This is a bug fix by ab@unido */
X! 	if (!u.uinvul_time) u.uinvulnerable = FALSE;	/* Kludge to avoid ctrl-C bug -dlc */
X  	u.usleep = 0;
X  	multi = nval;
X  	flags.mv = flags.run = 0;
X***************
X*** 1507,1512 ****
X--- 1512,1518 ----
X  		return;
X  	}
X  #endif
X+ 	u.uhplast = u.uhp;
X  	u.uhp -= n;
X  	if(u.uhp > u.uhpmax)
X  		u.uhpmax = u.uhp;	/* perhaps n was negative */
X*** /tmp/tmp.1285	Sat May 28 21:17:48 1994
X--- ./src/makemon.c	Sun May 22 20:04:32 1994
X***************
X*** 13,19 ****
X  
X  #define uncommon(ptr) \
X  	(((ptr)->geno & (G_GENOD | G_EXTINCT | G_NOGEN | G_UNIQ)) || \
X! 	 (!Inhell ? ((ptr)->geno & G_HELL) : ((ptr)->maligntyp > A_NEUTRAL)))
X  
X  #ifdef OVL0
X  static boolean NDECL(cmavail);
X--- 13,20 ----
X  
X  #define uncommon(ptr) \
X  	(((ptr)->geno & (G_GENOD | G_EXTINCT | G_NOGEN | G_UNIQ)) || \
X! 	 (!Inhell ? ((ptr)->geno & G_HELL) : ((ptr)->maligntyp > A_NEUTRAL)) \
X! 	|| Is_rogue_level(&u.uz) ? (!((ptr)->geno & G_ROGUE)) : ((ptr)->geno & G_ROGUE) )
X  
X  #ifdef OVL0
X  static boolean NDECL(cmavail);
X***************
X*** 436,441 ****
X--- 437,450 ----
X  	switch(ptr->mlet) {
X  
X  	    case S_HUMAN:
X+ #ifdef DOUGLAS_ADAMS
X+ 		if (monsndx(ptr) == PM_FORD_PERFECT || monsndx(ptr) == PM_ARTHUR_DENT) {
X+ 			mongets(mtmp,PEANUT_BAG);
X+ 		} 
X+ 		if (monsndx(ptr) == PM_FORD_PERFECT) {
X+ 			mongets(mtmp,TOWEL);
X+ 		}
X+ #endif
X  		if(is_mercenary(ptr)) {
X  		    register int mac;
X  #ifdef MUSE
X***************
X*** 510,521 ****
X--- 519,540 ----
X  				(void) mongets(mtmp, TIN_WHISTLE);
X  		} else if (ptr == &mons[PM_SHOPKEEPER]) {
X  		    (void) mongets(mtmp,SKELETON_KEY);
X+ 		} else if (is_educator(mtmp)) {
X+ 		    if (!rn2(5) || is_principal(mtmp)) {
X+ 			/* They're going to need it :-) */
X+ 			mongets(mtmp,rn2(3) ? RING_MAIL : PLATE_MAIL);
X+ 		    }
X  		}
X  		break;
X  
X  	    case S_NYMPH:
X  		if(!rn2(2)) (void) mongets(mtmp, MIRROR);
X  		if(!rn2(2)) (void) mongets(mtmp, POT_OBJECT_DETECTION);
X+ 		if (ptr == &mons[PM_NYMPH_QUEEN]) {
X+ 			struct obj *otmp = mksobj(SKELETON_KEY,TRUE,FALSE);
X+ 			otmp = oname(otmp,artiname(ART_KEY_OF_ACCESS),0);
X+ 			mpickobj(mtmp,otmp);
X+ 		}
X  		break;
X  
X  	    case S_GIANT:
X***************
X*** 538,562 ****
X  		}
X  		break;
X  	    case S_QUANTMECH:
X! 		if (!rn2(20)) {
X! 			struct obj *cat;
X  
X! 			otmp = mksobj(LARGE_BOX, FALSE, FALSE);
X! 	/* actually, whether this is a corpse or a live cat shouldn't
X! 	   really be decided until the box is opened... */
X! 			cat = mksobj(CORPSE, FALSE, FALSE);
X! 			cat->corpsenm = PM_HOUSECAT;
X! 			cat->owt = weight(cat);
X! 			cat = oname(cat, "Schroedinger's Cat", FALSE);
X! 			cat->nobj = otmp->cobj;
X! 			otmp->cobj = cat;
X  			otmp->owt = weight(otmp);
X! 			mpickobj(mtmp, otmp);
X  		}
X  		break;
X! 	    case S_LEPRECHAUN:
X! 		mtmp->mgold = (long) d(level_difficulty(), 30);
X  		break;
X  	    default:
X  		break;
X  	}
X--- 557,643 ----
X  		}
X  		break;
X  	    case S_QUANTMECH:
X! 		if (ptr == &mons[PM_QUANTUM_MECHANIC] && !rn2(10)) {/* was 20 */
X! /*
X! **			struct obj *cat;
X! **
X! **			otmp = mksobj(LARGE_BOX, FALSE, FALSE);
X! **	   actually, whether this is a corpse or a live cat shouldn't
X! **	   really be decided until the box is opened... 
X! **			cat = mksobj(CORPSE, FALSE, FALSE);
X! **			cat->corpsenm = PM_HOUSECAT;
X! **			cat->owt = weight(cat);
X! **			cat = oname(cat, "Schroedinger's Cat", FALSE);
X! **			cat->nobj = otmp->cobj;
X! **			otmp->cobj = cat;
X! **			otmp->owt = weight(otmp);
X! **			mpickobj(mtmp, otmp);
X! */
X! 
X! 		/* We now do the real thing ... */
X! 			otmp = mksobj(SCHROEDINGER_S_BOX,TRUE,FALSE);
X! 			mpickobj(mtmp,otmp);
X! 		}
X! 		break;
X! 	    case S_LEPRECHAUN: {
X! 		int n;
X! 
X! 		if (ptr == &mons[PM_LEPRECHAUN_KING]) {
X! 			n = 500;
X! 		} else if (ptr == &mons[PM_LEPRECHAUN_ELDER]) {
X! 			n = 50;
X! 		} else {
X! 			n = 30;	/* as it was before ... */
X! 		}
X! 		mtmp->mgold = (long) d(level_difficulty(), n);
X! 		} break;
X! #ifdef DOUGLAS_ADAMS
X! 	    case S_ANGEL:
X! 		if (monsndx(ptr) == PM_DOUGLAS_ADAMS) {
X! 			mongets(mtmp,HITCHHIKER_S_GUIDE_TO_THE_GALA);
X! 		}
X! 		break;
X! 
X! 	    case S_XORN:
X! 		if (monsndx(ptr) == PM_MARVIN) {
X! 			int i;
X! 			int t[3] = {DIODE, TRANSISTOR, IC};
X! 			for (i=0;i<3;i++) {
X! 				otmp = mksobj(t[i],FALSE,FALSE);
X! 				otmp->quan = rn2(7) + 1;
X! 				otmp->owt = weight(otmp);
X! 				mpickobj(mtmp,otmp);
X! 			}
X! 		}
X! 		break;
X  
X! 	    case S_XAN:
X! 		if (monsndx(ptr) == PM_DEEP_THOUGHT) {
X! 			otmp = mksobj(IC,FALSE,FALSE);
X! 			otmp->quan = 42;
X  			otmp->owt = weight(otmp);
X! 			mpickobj(mtmp,otmp);
X  		}
X  		break;
X! 
X! 	    case S_YETI:
X! 		if (monsndx(ptr) == PM_ZAPHOD_BREEBLEBROX) {
X! 			otmp = mksobj(POT_PAN_GALACTIC_GARGLE_BLASTE,FALSE,FALSE);
X! 			otmp->quan = d(2,4);
X! 			otmp->owt = weight(otmp);
X! 			mpickobj(mtmp,otmp);
X! 		}
X  		break;
X+ #endif
X+ 	    case S_DRAGON:
X+ 		if (ptr == &mons[PM_DRAGON_LORD]) {
X+ 			struct obj *otmp;
X+ 			otmp = mksobj(GRAY_DRAGON_SCALE_MAIL,TRUE,FALSE);
X+ 			otmp = oname(otmp,artiname(ART_SCALES_OF_THE_DRAGON_LORD),0);
X+ 			mpickobj(mtmp,otmp);
X+ 		}
X+ 		break;
X+ 
X  	    default:
X  		break;
X  	}
X***************
X*** 679,684 ****
X--- 760,768 ----
X  		case S_MIMIC:
X  			set_mimic_sym(mtmp);
X  			break;
X+ 		case S_XORN:
X+ 			if (mtmp->data == &mons[PM_XEROC]) set_mimic_sym(mtmp);
X+ 			break;
X  		case S_SPIDER:
X  		case S_SNAKE:
X  			if(in_mklev)
X***************
X*** 689,695 ****
X  			break;
X  		case S_STALKER:
X  		case S_EEL:
X! 			mtmp->minvis = TRUE;
X  			break;
X  		case S_LEPRECHAUN:
X  			mtmp->msleep = TRUE;
X--- 773,784 ----
X  			break;
X  		case S_STALKER:
X  		case S_EEL:
X! 			if (ptr != &mons[PM_ICE_MONSTER] &&
X! 			    ptr != &mons[PM_BABELFISH])
X! 				mtmp->minvis = TRUE;
X! 			break;
X! 		case S_PUDDING:
X! 			if (ptr == &mons[PM_PHANTOM]) mtmp->minvis = TRUE;
X  			break;
X  		case S_LEPRECHAUN:
X  			mtmp->msleep = TRUE;
X***************
X*** 719,724 ****
X--- 808,815 ----
X  	} else if (ptr == &mons[PM_WIZARD_OF_YENDOR]) {
X  		mtmp->iswiz = TRUE;
X  		flags.no_of_wizards++;
X+ 	} else if (ptr == &mons[PM_QUANTUM_MECHANIC]) {
X+ 		mtmp = qname(mtmp);		/* see sounds.c */
X  	} else if (ptr == &mons[PM_VLAD_THE_IMPALER])
X  		(void) mongets(mtmp, CANDELABRUM_OF_INVOCATION);
X  #ifdef MULDGN
X*** /tmp/tmp.1285	Sat May 28 21:17:49 1994
X--- ./src/mhitm.c	Sat Mar 26 16:18:26 1994
X***************
X*** 231,236 ****
X--- 231,237 ----
X  	    case AT_TUCH:
X  	    case AT_BUTT:
X  	    case AT_TENT:
X+ 	    case AT_TALK:
X  		dieroll = rnd(20 + i);
X  		strike = (tmp > dieroll);
X  		if (strike)
X***************
X*** 846,851 ****
X--- 847,861 ----
X  	    case AD_STCK:
X  	    case AD_WRAP: /* monsters cannot grab one another, it's too hard */
X  		break;
X+ #ifdef DOUGLAS_ADAMS
X+ 	    case AD_DEPR:
X+ 		pline("%s talks to %s!", Monnam(magr), mon_nam(mdef));
X+ 		if (!rn2(5)) {
X+ 			pline("%s is depressed!",Monnam(mdef));
X+ 			tmp = rn1(10,6);
X+ 		}
X+ 		break;
X+ #endif
X  	    default:	tmp = 0;
X  			break;
X  	}
X*** /tmp/tmp.1285	Sat May 28 21:17:50 1994
X--- ./src/mhitu.c	Sun Apr 10 15:31:25 1994
X***************
X*** 80,85 ****
X--- 80,88 ----
X  		case AT_EXPL:
X  			pline("%s explodes!", Monnam(mtmp));
X  			break;
X+ 		case AT_TALK:
X+ 			pline("%s talks to you!",Monnam(mtmp));
X+ 			break;
X  		default:
X  			pline("%s hits!", Monnam(mtmp));
X  	    }
X***************
X*** 393,399 ****
X  	if(!mtmp->cham && is_demon(mdat) && !range2
X  	   && mtmp->data != &mons[PM_BALROG]
X  	   && mtmp->data != &mons[PM_SUCCUBUS]
X! 	   && mtmp->data != &mons[PM_INCUBUS])
X  	    if(!mtmp->mcan && !rn2(13))	msummon(mdat);
X  
X  /*	Special lycanthrope handling code */
X--- 396,404 ----
X  	if(!mtmp->cham && is_demon(mdat) && !range2
X  	   && mtmp->data != &mons[PM_BALROG]
X  	   && mtmp->data != &mons[PM_SUCCUBUS]
X! 	   && mtmp->data != &mons[PM_INCUBUS]
X! 	   && mtmp->data != &mons[PM_NEWS_DAEMON]
X! 	   && mtmp->data != &mons[PM_PRINTER_DAEMON])
X  	    if(!mtmp->mcan && !rn2(13))	msummon(mdat);
X  
X  /*	Special lycanthrope handling code */
X***************
X*** 548,553 ****
X--- 553,563 ----
X  			if(range2) sum[i] = spitmu(mtmp, mattk);
X  			/* Note: spitmu takes care of displacement */
X  			break;
X+ 		case AT_TALK:
X+ 			if (!ranged) {
X+ 				pline("%s talks to you!",youseeit ? Monnam(mtmp) : "It");
X+ 				sum[i] = hitmu(mtmp,mattk);
X+ 			}
X  		case AT_WEAP:
X  			if(range2) {
X  #ifdef REINCARNATION
X***************
X*** 891,896 ****
X--- 901,907 ----
X  	    case AD_SLEE:
X  		hitmsg(mtmp, mattk);
X  		if(ctmp && multi >= 0 && !rn2(5)) {
X+ 		    if (is_educator(mtmp) && rn2(5)) break;
X  		    if (Sleep_resistance) break;
X  		    nomul(-rnd(10));
X  		    u.usleep = 1;
X***************
X*** 965,970 ****
X--- 976,984 ----
X  		}
X  		break;
X  	    case AD_DRLI:
X+ #ifdef DOUGLAS_ADAMS
X+ 	    drain_life:
X+ #endif
X  		hitmsg(mtmp, mattk);
X  		if (ctmp && !rn2(3)
X  #ifdef POLYSELF
X***************
X*** 1333,1338 ****
X--- 1347,1387 ----
X  		morehungry(rn1(40,40));
X  		/* plus the normal damage */
X  		break;
X+ #ifdef DOUGLAS_ADAMS
X+ 	    case AD_DEPR:
X+ 		You("feel depressed.");
X+ 		switch(rn2(6) + u.uluck) {
X+ 			case 0:
X+ 				goto drain_life;
X+ 				break;
X+ 			case 1:
X+ 				(void) adjattrib(A_CON, -1, FALSE);
X+ 				if (ABASE(A_CON) < ATTRMIN(A_CON)) {
X+ 					killer = "depression";
X+ 					killer_format = KILLED_BY;
X+ 					done(DIED);
X+ 					/* lifesaved */
X+ 					ABASE(A_CON) = ATTRMIN(A_CON);
X+ 				}
X+ 				break;
X+ 			case 2:
X+ 				(void) adjattrib(A_INT, -1, FALSE);
X+ 				if (ABASE(A_INT) < ATTRMIN(A_CON)) {
X+ 					killer = "depression";
X+ 					killer_format = KILLED_BY;
X+ 					done(DIED);
X+ 					/* lifesaved */
X+ 					ABASE(A_INT) = ATTRMIN(A_INT);
X+ 				}
X+ 				break;
X+ 			default:
X+ 				pline("But the feeling subsides.");
X+ 				break;
X+ 		}
X+ 		dmg = 0;
X+ 		break;
X+ #endif
X+ 
X  	    default:	dmg = 0;
X  			break;
X  	}
X***************
X*** 1703,1708 ****
X--- 1752,1758 ----
X  		return;
X  	}
X  #endif
X+ 	u.uhplast = u.uhp;
X  	u.uhp -= n;
X  	flags.botl = 1;
X  	if(u.uhp < 1)
X*** /tmp/tmp.1285	Sat May 28 21:17:52 1994
X--- ./src/mklev.c	Sun Dec 26 16:22:02 1993
X***************
X*** 719,724 ****
X--- 719,727 ----
X  	else if(depth(&u.uz) > 4 && !rn2(6)) mkroom(COURT);
X  	else if(depth(&u.uz) > 6 && !rn2(7)) mkroom(ZOO);
X  	else if(depth(&u.uz) > 8 && !rn2(5)) mkroom(TEMPLE);
X+ #ifdef DOUGLAS_ADAMS
X+ 	else if(depth(&u.uz) > 10 && !rn2(5)) mkroom(DOUGROOM);
X+ #endif
X  	else if(depth(&u.uz) > 9 && !rn2(5) &&
X  	   !(mons[PM_KILLER_BEE].geno & (G_GENOD | G_EXTINCT))) mkroom(BEEHIVE);
X  	else if(depth(&u.uz) > 11 && !rn2(6)) mkroom(MORGUE);
X*** /tmp/tmp.1285	Sat May 28 21:17:55 1994
X--- ./src/mondata.c	Sat Mar 19 15:03:34 1994
X***************
X*** 315,320 ****
X--- 315,321 ----
X  		case 'C': if (flags.female) return &mons[PM_CAVEWOMAN];
X  			else return &mons[PM_CAVEMAN];
X  		case 'E': return &mons[PM_ELF];
X+ 		case 'G': return &mons[PM_GEEK];
X  		case 'H': return &mons[PM_HEALER];
X  		case 'K': return &mons[PM_KNIGHT];
X  		case 'P': if (flags.female) return &mons[PM_PRIESTESS];
X*** /tmp/tmp.1285	Sat May 28 21:17:56 1994
X--- ./src/mkobj.c	Sat Apr 23 14:15:03 1994
X***************
X*** 145,150 ****
X--- 145,151 ----
X  		case SACK:
X  		case OILSKIN_SACK:
X  		case BAG_OF_HOLDING:	n = 1; break;
X+ 		case BAG_OF_DIGESTION:		/* makes sense, doesn't it ? */
X  		default:		n = 0; break;
X  	}
X  
X***************
X*** 237,242 ****
X--- 238,244 ----
X  	otmp->oclass = let;
X  	otmp->otyp = otyp;
X  	otmp->dknown = index(dknowns, let) ? 0 : 1;
X+ 	otmp->selfmade = FALSE;
X  	if (!objects[otmp->otyp].oc_uses_known)
X  		otmp->known = 1;
X  	if (init) switch (let) {
X***************
X*** 337,342 ****
X--- 339,347 ----
X  		case HORN_OF_PLENTY:
X  		case BAG_OF_TRICKS:	otmp->spe = rnd(20);
X  					break;
X+ 		case CHEMISTRY_SET:	otmp->spe = rn1(10,10);
X+ 					blessorcurse(otmp,4);
X+ 					break;
X  		case FIGURINE:	{	int tryct2 = 0;
X  					do
X  					    otmp->corpsenm = rndmonnum();
X***************
X*** 632,637 ****
X--- 637,661 ----
X  	if(otmp)  {
X  		if(ptr)	otmp->corpsenm = monsndx(ptr);
X  		else	otmp->corpsenm = rndmonnum();
X+ 		otmp->owt = weight(otmp);
X+ 	}
X+ 	return(otmp);
X+ }
X+ 
X+ struct obj *
X+ mkcorpstat_(objtype, mnum, init)
X+ int objtype;
X+ int mnum;
X+ boolean init;
X+ {
X+ 	register struct obj *otmp;
X+ 
X+ 	if (objtype != CORPSE && objtype != STATUE) {
X+ 		impossible("making corpstat_ type %d",objtype);
X+ 	}
X+ 	otmp = mksobj(objtype,init,FALSE);
X+ 	if (otmp) {
X+ 		otmp->corpsenm = mnum;
X  		otmp->owt = weight(otmp);
X  	}
X  	return(otmp);
X*** /tmp/tmp.1285	Sat May 28 21:17:58 1994
X--- ./src/mkroom.c	Sun May 22 19:42:39 1994
X***************
X*** 9,14 ****
X--- 9,17 ----
X   *	has_dnstairs() -- return TRUE if given room has a down staircase
X   *	has_upstairs() -- return TRUE if given room has an up staircase
X   *	courtmon() -- generate a court monster
X+ #ifdef DOUGLAS_ADAMS
X+  *	douglas_adams_mon() -- create a Douglas-Adams_Monster
X+ #endif
X   *	save_rooms() -- save rooms into file fd
X   *	rest_rooms() -- restore rooms from file fd
X   */
X***************
X*** 22,27 ****
X--- 25,33 ----
X  static void NDECL(mktemple);
X  static coord * FDECL(shrine_pos, (int));
X  static struct permonst * NDECL(morguemon);
X+ #ifdef DOUGLAS_ADAMS
X+ struct permonst * NDECL(douglas_adams_mon);
X+ #endif
X  #ifdef ARMY
X  static struct permonst * NDECL(squadmon);
X  #endif
X***************
X*** 59,64 ****
X--- 65,73 ----
X  	case BARRACKS:	mkzoo(BARRACKS); break;
X  	case SWAMP:	mkswamp(); break;
X  	case TEMPLE:	mktemple(); break;
X+ #ifdef DOUGLAS_ADAMS
X+ 	case DOUGROOM:	mkzoo(DOUGROOM); break;
X+ #endif
X  	default:	impossible("Tried to make a room of type %d.", roomtype);
X      }
X  }
X***************
X*** 109,114 ****
X--- 118,130 ----
X  				mkswamp();
X  				return;
X  			}
X+ #ifdef DOUGLAS_ADAMS
X+ 			if (*ep == 'd' || *ep == 'D') {
X+ 				mkzoo(DOUGROOM);
X+ 				return;
X+ 			}
X+ #endif
X+ 
X  			for(i=0; shtypes[i].name; i++)
X  				if(*ep == def_oc_syms[(int)shtypes[i].symb])
X  				    goto gottype;
X***************
X*** 284,289 ****
X--- 300,308 ----
X  		    (type == BEEHIVE) ?
X  			(sx == tx && sy == ty ? &mons[PM_QUEEN_BEE] : 
X  			 &mons[PM_KILLER_BEE]) :
X+ #ifdef DOUGLAS_ADAMS
X+ 		    (type == DOUGROOM) ? douglas_adams_mon() : 
X+ #endif
X  		    (struct permonst *) 0,
X  		   sx, sy);
X  		if(mon) {
X***************
X*** 351,356 ****
X--- 370,380 ----
X  	      case BEEHIVE:
X  		  level.flags.has_beehive = 1;
X  		  break;
X+ #ifdef DOUGLAS_ADAMS
X+ 	      case DOUGROOM:
X+ 		  level.flags.has_zoo = 1;
X+ 		  break;
X+ #endif
X  	}
X  }
X  
X***************
X*** 610,615 ****
X--- 634,687 ----
X  	else if (i > 15)	return(mkclass(S_GNOME,0));
X  	else			return(mkclass(S_KOBOLD,0));
X  }
X+ 
X+ #ifdef DOUGLAS_ADAMS
X+ struct permonst *
X+ douglas_adams_mon()
X+ {
X+ /* The uniques are now needed for the Hitchhiker's Level. */
X+ 	struct permonst *monsters[] = {
X+ 		&mons[PM_RAVENOUS_BUGBLATTER_BEAST_OF_TRAAL],
X+ /*		&mons[PM_DOUGLAS_ADAMS], */
X+ /*		&mons[PM_FORD_PERFECT], */
X+ /*		&mons[PM_ARTHUR_DENT], */
X+ 		&mons[PM_CREEPING___],
X+ 		&mons[PM_MICROSCOPIC_SPACE_FLEET],
X+ 		&mons[PM_VOGON],
X+ 		&mons[PM_VOGON_LORD],
X+ /*		&mons[PM_MR__PROSSER], */
X+ /*		&mons[PM_PROSTETNIK_VOGON_JELTZ], */
X+ /*		&mons[PM_ZAPHOD_BREEBLEBROX], */
X+ /*		&mons[PM_DEEP_THOUGHT], */
X+ 		&mons[PM_BABELFISH],
X+ 		&mons[PM_MARVIN],
X+ 		&mons[PM_ALGOLIAN_SUNTIGER],
X+ /*		&mons[PM_EDDIE], */
X+ 	};
X+ 	struct permonst *m;
X+ 	int max = sizeof(monsters) / sizeof(monsters[0]);
X+ 	int cnt;
X+ 
X+ 	cnt = 100;
X+ 	while (cnt--) {
X+ 		m = monsters[rn2(max)];
X+ 		if (
X+ 			((m->geno & G_UNIQ) && rn2(10)) ||
X+ 			(m->geno & G_EXTINCT) ||
X+ 			(m->geno & G_GENOD) ||
X+ 			(m==&mons[PM_VOGON_LORD] && rn2(30)<level_difficulty())
X+ 		) {
X+ 			continue;
X+ 		} else break;
X+ 	}
X+ 	if (cnt > 0) {
X+ 		if (m->geno & G_UNIQ) m->geno |= G_EXTINCT;
X+ 		return(m);
X+ 	} else {
X+ 		return((struct permonst *) NULL);
X+ 	}
X+ }
X+ #endif
X  
X  #ifdef ARMY
X  #define	    NSTYPES	(PM_CAPTAIN-PM_SOLDIER+1)
X*** /tmp/tmp.1285	Sat May 28 21:17:59 1994
X--- ./src/mon.c	Sun May 22 18:43:42 1994
X***************
X*** 69,74 ****
X--- 69,77 ----
X  		}
X  		goto default_1;
X  
X+ 	    case PM_YOUNG_UNICORN:
X+ 		if (rn2(2)) goto default_1;
X+ 		/* fall through */
X  	    case PM_WHITE_UNICORN:
X  	    case PM_GRAY_UNICORN:
X  	    case PM_BLACK_UNICORN:
X***************
X*** 153,158 ****
X--- 156,181 ----
X  			obj = mksobj_at(LEATHER_ARMOR, x, y, TRUE);
X  		mtmp->mnamelth = 0;
X  		break;
X+ 	    case PM_BUG:
X+ 	    case PM_HEISENBUG:
X+ 		if (!rn2((mndx == PM_BUG) ? 6 : 3)) {
X+ 			obj = mksobj_at(PACK_OF_FLOPPIES, x, y, TRUE);
X+ 		}
X+ 		break;
X+ 	    case PM_PDP___:	/* PDP-11 */
X+ 	    case PM_PDP__:	/* PDP-9 */
X+ 	    case PM_VAX:
X+ 	    case PM_CRAY:
X+ 	    	num = rn2(10) + 5;
X+ 		while (num--) {
X+ 			obj = mksobj_at(!rn2(3) ? DIODE : (!rn2(2) ? TRANSISTOR : IC), x, y, TRUE);
X+ 		}
X+ 		break;
X+ 	    case PM_ALGOLIAN_SUNTIGER:
X+ 		if (!rn2(3)) {
X+  			mksobj_at(TOOTH_OF_AN_ALGOLIAN_SUNTIGER,x, y, TRUE);
X+ 		}
X+ 		goto default_1;
X  	    default_1:
X  	    default:
X  		if (mdat->geno & G_NOCORPSE)
X***************
X*** 1539,1545 ****
X  	for (mtmp = fmon; mtmp; mtmp = mtmp->nmon) {
X  		if (mtmp->data == &mons[PM_CHAMELEON])
X  			mtmp->cham = 1;
X! 		if(mtmp->data->mlet == S_MIMIC && mtmp->msleep &&
X  				cansee(mtmp->mx, mtmp->my)) {
X  			set_mimic_sym(mtmp);
X  			newsym(mtmp->mx,mtmp->my);
X--- 1562,1568 ----
X  	for (mtmp = fmon; mtmp; mtmp = mtmp->nmon) {
X  		if (mtmp->data == &mons[PM_CHAMELEON])
X  			mtmp->cham = 1;
X! 		if((mtmp->data->mlet == S_MIMIC || mtmp->data == &mons[PM_XEROC]) && mtmp->msleep &&
X  				cansee(mtmp->mx, mtmp->my)) {
X  			set_mimic_sym(mtmp);
X  			newsym(mtmp->mx,mtmp->my);
X***************
X*** 1556,1562 ****
X  	   cansee(mtmp->mx, mtmp->my) || rn2(3) || (mtmp == u.ustuck))
X  		return(FALSE);
X  
X! 	if(mtmp->data->mlet == S_MIMIC) {
X  		set_mimic_sym(mtmp);
X  		return(TRUE);
X  	} else
X--- 1579,1585 ----
X  	   cansee(mtmp->mx, mtmp->my) || rn2(3) || (mtmp == u.ustuck))
X  		return(FALSE);
X  
X! 	if(mtmp->data->mlet == S_MIMIC || mtmp->data == &mons[PM_XEROC]) {
X  		set_mimic_sym(mtmp);
X  		return(TRUE);
X  	} else
X***************
X*** 1647,1653 ****
X  	if (!mtmp->mhpmax) mtmp->mhpmax = 1;
X  
X  	mtmp->data = mdat;
X! 	mtmp->minvis = !!(mdat->mlet == S_STALKER);
X  	if (!hides_under(mdat) || !OBJ_AT(mtmp->mx, mtmp->my))
X  		mtmp->mundetected = 0;
X  	if (u.ustuck == mtmp) {
X--- 1670,1678 ----
X  	if (!mtmp->mhpmax) mtmp->mhpmax = 1;
X  
X  	mtmp->data = mdat;
X! 	mtmp->minvis = !!(mdat == &mons[PM_STALKER] ||
X! 		 mdat == &mons[PM_PHANTOM]);
X! /*	mtmp->minvis = !!(mdat->mlet == S_STALKER); */
X  	if (!hides_under(mdat) || !OBJ_AT(mtmp->mx, mtmp->my))
X  		mtmp->mundetected = 0;
X  	if (u.ustuck == mtmp) {
X*** /tmp/tmp.1285	Sat May 28 21:18:00 1994
X--- ./src/monst.c	Sun May 22 19:42:08 1994
X***************
X*** 96,101 ****
X--- 96,111 ----
X   * unconsciously. Use your common sense.
X   */
X  
X+ #define ROGUE_MONST_ATTR(name,sym,level,ac,atk1,atk2,atk3,atk4,a1,a2,a3) \
X+ 	{ name, sym, level, 10,(10-ac),0,0,(G_GENO | G_ROGUE | G_NOCORPSE | 2),\
X+ 	  { { atk1, atk2, atk3, atk4 }, NO_ATTK, NO_ATTK, NO_ATTK, \
X+ 	    NO_ATTK, NO_ATTK }, \
X+ 	  0, 0, 0, MS_SILENT, MZ_MEDIUM, 0, 0, \
X+ 	  a1, a2, a3, C(GRAY) }, 
X+ 
X+ #define ROGUE_MONST(name,sym,level,ac,atk1,atk2,atk3,atk4) \
X+    ROGUE_MONST_ATTR(name,sym,level,ac,atk1,atk2,atk3,atk4,M1_ANIMAL,M2_HOSTILE,0)
X+ 
X  #ifndef SPLITMON_2
X  NEARDATA struct permonst mons[] = {
X  /*	ants	*/
X***************
X*** 129,134 ****
X--- 139,151 ----
X  	  10, 10, 0, MS_SILENT, MZ_LARGE, MR_POISON, MR_POISON,
X  	  M1_ANIMAL | M1_NOHANDS | M1_POIS | M1_CARNIVORE,
X  	  M2_HOSTILE, 0, C(BLACK) },
X+ #ifdef DOUGLAS_ADAMS
X+ 	{ "Ravenous Bugblatter Beast Of Traal", S_ANT, 12, 32, -2, 0, 0, (G_GENO | 1),
X+            { { AT_BITE , AD_PHYS, 3, 6 }, NO_ATTK, NO_ATTK,
X+               NO_ATTK, NO_ATTK, NO_ATTK },
X+            100, 100, 0, MS_BURBLE, MZ_GIGANTIC, 0, 0, M1_ANIMAL | M1_CARNIVORE,
X+ 	   M2_NEUTER | M2_HOSTILE,0,C(GREEN) },
X+ #endif
X  	{ "queen bee", S_ANT, 9, 24, -4, 0, 0, (G_GENO | G_NOGEN),
X  	  { { AT_STNG, AD_DRST, 1, 8 }, NO_ATTK, NO_ATTK,
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 267,272 ****
X--- 284,295 ----
X  	  200, 200, 0, MS_MEW, MZ_SMALL, 0, 0,
X  	  M1_ANIMAL | M1_NOHANDS | M1_CARNIVORE,
X  	  M2_DOMESTIC, 0, C(HI_DOMESTIC) },
X+ 	{ "Schroedinger's Cat", S_FELINE, 4, 16, 5, 0, 0, G_NOGEN,
X+ 	  { { AT_BITE, AD_PHYS, 1, 6}, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  200, 200, 0, MS_MEW, MZ_SMALL, 0, 0,
X+ 	  M1_ANIMAL | M1_NOHANDS | M1_CARNIVORE, 
X+ 	  M2_NOPOLY | M2_DOMESTIC | M2_PNAME, 0, C(HI_DOMESTIC) },
X  	{ "jaguar", S_FELINE, 4, 15, 6, 0, 0, (G_GENO | 2),
X  	  { { AT_CLAW, AD_PHYS, 1, 4 }, { AT_CLAW, AD_PHYS, 1, 4 },
X  	    { AT_BITE, AD_PHYS, 1, 8 }, NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 285,290 ****
X--- 308,318 ----
X  	  600, 300, 0, MS_GROWL, MZ_LARGE, 0, 0,
X  	  M1_ANIMAL | M1_NOHANDS | M1_CARNIVORE,
X  	  M2_HOSTILE, 0, C(YELLOW) },
X+ 	{ "algolian suntiger", S_FELINE, 8, 14, 4, 0, 0, (G_GENO | 1),
X+ 	  { { AT_CLAW, AD_PHYS, 2, 4 }, { AT_BITE, AD_PHYS, 6, 6 },
X+ 	    { AT_GAZE, AD_STUN, 1, 1 }, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  800, 800, 0, MS_DOUGLAS_ADAMS, MZ_LARGE, 0, 0, 
X+ 	  M1_ANIMAL | M1_NOHANDS | M1_CARNIVORE, M2_HOSTILE, 0, C(YELLOW) },
X  /*	gremlins	*/
X  	{ "gremlin", S_GREMLIN, 5, 12, 2, 25, -9, (G_GENO | 2),
X  	  { { AT_CLAW, AD_PHYS, 1, 6 }, { AT_CLAW, AD_PHYS, 1, 6 },
X***************
X*** 416,421 ****
X--- 444,459 ----
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X  	  60, 30, 0, MS_LAUGH, MZ_TINY, 0, 0,
X  	  M1_HUMANOID | M1_TPORT, M2_HOSTILE | M2_GREEDY, 0, C(GREEN) },
X+ 	{ "leprechaun elder", S_LEPRECHAUN, 10, 18, 8, 20, 0, (G_GENO | 1),
X+ 	  { { AT_CLAW, AD_SGLD, 2, 4 }, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK },
X+ 	  60, 30, 0, MS_LAUGH, MZ_TINY, 0, 0,
X+ 	  M1_HUMANOID | M1_TPORT, M2_HOSTILE | M2_GREEDY, 0, C(RED) },
X+ 	{ "leprechaun king", S_LEPRECHAUN, 12, 18, 8, 20, 0, (G_NOGEN | G_UNIQ),
X+ 	  { { AT_CLAW, AD_SGLD, 4, 4 }, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK },
X+ 	  60, 30, 0, MS_LAUGH, MZ_SMALL, 0, 0,
X+ 	  M1_HUMANOID | M1_TPORT, M2_HOSTILE | M2_GREEDY, 0, C(HI_LORD) },
X  /*	mimics	*/
X  	{ "small mimic", S_MIMIC, 7, 3, 7, 0, 0, (G_GENO | 2),
X  	  { { AT_CLAW, AD_PHYS, 3, 4 }, NO_ATTK, NO_ATTK,
X***************
X*** 457,462 ****
X--- 495,506 ----
X  	  600, 300, 0, MS_SEDUCE, MZ_HUMAN,
X  	  0, 0, M1_HUMANOID | M1_TPORT, M2_HOSTILE | M2_FEMALE | M2_COLLECT,
X  	  0, C(BROWN) },
X+ 	{ "nymph queen", S_NYMPH, 12, 12, 8, 30, 0, (G_NOGEN | G_UNIQ),
X+ 	  { { AT_CLAW, AD_SITM, 0, 0 }, { AT_CLAW, AD_SEDU, 0, 0 },
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  600, 300, 0, MS_SEDUCE, MZ_HUMAN, 0, 0,
X+ 	  M1_HUMANOID | M1_TPORT, M2_HOSTILE | M2_FEMALE | M2_COLLECT, 0,
X+ 	  C(HI_LORD) },
X  /*	orcs	*/
X  	{ "goblin", S_ORC,  0, 6, MARM(10,6), 0, -3, (G_GENO | 2),
X  	  { { AT_WEAP, AD_PHYS, 1, 4 }, NO_ATTK, NO_ATTK,
X***************
X*** 529,535 ****
X  	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X  	  2500, 500, 0, MS_SILENT, MZ_LARGE, 0, 0,
X  	  M1_ANIMAL | M1_THICK_HIDE | M1_NOHANDS | M1_CARNIVORE,
X! 	  M2_HOSTILE | M2_STRONG, 0, C(GRAY) },
X  	{ "leocrotta", S_QUADRUPED, 6, 18, 4, 10, 0, (G_GENO | 2),
X  	  { { AT_CLAW, AD_PHYS, 2, 6 }, { AT_BITE, AD_PHYS, 2, 6 },
X  	    { AT_CLAW, AD_PHYS, 2, 6 }, NO_ATTK, NO_ATTK, NO_ATTK },
X--- 573,579 ----
X  	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X  	  2500, 500, 0, MS_SILENT, MZ_LARGE, 0, 0,
X  	  M1_ANIMAL | M1_THICK_HIDE | M1_NOHANDS | M1_CARNIVORE,
X! 	  M2_HOSTILE | M2_STRONG, 0, C(BROWN) },
X  	{ "leocrotta", S_QUADRUPED, 6, 18, 4, 10, 0, (G_GENO | 2),
X  	  { { AT_CLAW, AD_PHYS, 2, 6 }, { AT_BITE, AD_PHYS, 2, 6 },
X  	    { AT_CLAW, AD_PHYS, 2, 6 }, NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 554,559 ****
X--- 598,609 ----
X  	  3800, 800, 0, MS_SILENT, MZ_LARGE, 0, 0,
X  	  M1_ANIMAL | M1_THICK_HIDE | M1_NOHANDS | M1_HERBIVORE,
X  	  M2_HOSTILE | M2_STRONG, 0, C(GRAY) },
X+ 	{ "giant mumak", S_QUADRUPED, 10, 9, 0, 0, -4, (G_GENO | 1),
X+ 	  { { AT_BUTT, AD_PHYS, 8, 12 }, { AT_CLAW, AD_PHYS, 12, 12 },
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  4000, 1000, 0, MS_SILENT, MZ_HUGE, 0, 0,
X+ 	  M1_ANIMAL | M1_THICK_HIDE | M1_NOHANDS | M1_CARNIVORE, 
X+ 	  M2_HOSTILE | M2_STRONG, 0, C(BROWN) },
X  /*	rodents 	*/
X  	{ "sewer rat",	S_RODENT, 0, 12, 7, 0, 0, (G_GENO | G_SGROUP | 1),
X  	  { { AT_BITE, AD_PHYS, 1, 3 }, NO_ATTK, NO_ATTK,
X***************
X*** 618,623 ****
X--- 668,679 ----
X  	  M1_HIDE | M1_ANIMAL | M1_NOEYES | M1_NOLIMBS | M1_NOHEAD |
X  	  M1_CARNIVORE, M2_HOSTILE | M2_STALK | M2_STRONG, 0, C(GREEN) },
X  /*	unicorns	*/
X+ 	{ "young unicorn", S_UNICORN, 3, 20, 5, 40, 0, (G_GENO | 1),
X+ 	  { { AT_BUTT, AD_PHYS, 1, 6 }, { AT_KICK, AD_PHYS, 1, 3 },
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  650, 150, 0, MS_NEIGH, MZ_MEDIUM, MR_POISON, MR_POISON,
X+ 	  M1_NOHANDS | M1_HERBIVORE,
X+ 	  M2_WANDER | M2_JEWELS | M2_HOSTILE, 0, C(GRAY) },
X  	{ "white unicorn", S_UNICORN, 4, 24, 2, 70, 7, (G_GENO | 2),
X  	  { { AT_BUTT, AD_PHYS, 1, 12 }, { AT_KICK, AD_PHYS, 1, 6 },
X  	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 728,733 ****
X--- 784,845 ----
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X  	  300, 300, 0, MS_BUZZ, MZ_TINY, MR_POISON, MR_POISON,
X  	  M1_FLY | M1_ANIMAL | M1_NOHANDS | M1_POIS, M2_HOSTILE, 0, C(RED) },
X+ #ifdef DOUGLAS_ADAMS
X+ 	{ "microscopic space fleet", S_XAN, 3, 5, 10, 0, 0,
X+           (G_GENO | G_LGROUP | G_NOCORPSE | 3),
X+ 	  { { AT_TUCH, AD_ELEC, 2, 4 }, NO_ATTK, NO_ATTK,
X+             NO_ATTK, NO_ATTK, NO_ATTK },
X+           0, 0, 0, MS_BUZZ, MZ_TINY, 0, 0,
X+ 	  M1_FLY | M1_BREATHLESS | M1_MINDLESS | M1_METALLIVORE, 
X+ 	  M2_NEUTER | M2_HOSTILE, 0, C(CYAN) },
X+ 	{ "Deep Thought", S_XAN, 8, 0, -2 /* real much metal */, 0, 0,
X+ 	  G_UNIQ | G_NOGEN | G_NOCORPSE, { {AT_NONE, AD_ELEC, 8, 4}, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK},
X+ 	  0, 0, 0,MS_DOUGLAS_ADAMS,MZ_HUGE, 0, 0, M1_NOEYES | M1_NOHANDS |
X+ 	  M1_NOLIMBS | M1_NOHEAD, M2_NEUTER | M2_PNAME, 0, C(HI_DOMESTIC) },
X+ 	{ "Eddie", S_XAN, 8, 0, -2, 0, 0, G_UNIQ | G_NOGEN | G_NOCORPSE,
X+ 	  { { AT_NONE, AD_ELEC, 8, 4}, { AT_NONE, AD_DEPR, 1, 3},
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  0, 0, 0, MS_DOUGLAS_ADAMS,MZ_HUGE, 0, 0, M1_NOEYES | M1_NOHANDS |
X+ 	  M1_NOLIMBS | M1_NOHEAD, M2_NEUTER | M2_PNAME, 0, C(HI_LORD)/*:-)*/ },
X+ #endif
X+ 	{ "bug", S_XAN, 8, 10, 10, 0, 0, (G_NOCORPSE | 1),
X+ 	  { { AT_TUCH, AD_ELEC, 2, 8}, NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK },
X+ 	  0, 0, 0, MS_BUZZ, MZ_SMALL, MR_ELEC, MR_ELEC, 
X+ 	  M1_AMORPHOUS | M1_CONCEAL | M1_NOEYES | M1_NOHANDS | M1_BREATHLESS |
X+ 	  M1_NOLIMBS | M1_THICK_HIDE, M2_NEUTER | M2_HOSTILE, 0, C(BROWN) }, 
X+ 	{ "heisenbug", S_XAN, 10, 35, 10, 0, 0, (G_NOCORPSE | 1),
X+ 	  { { AT_TUCH, AD_ELEC, 4, 8}, NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK },
X+ 	  0, 0, 0, MS_BUZZ, MZ_MEDIUM, MR_ELEC, MR_ELEC,
X+ 	  M1_AMORPHOUS | M1_WALLWALK |M1_BREATHLESS | M1_TPORT | M1_TPORT_CNTRL,
X+ 	  M2_NEUTER | M2_HOSTILE, 0, C(YELLOW) },
X+ 	{ "PDP-11", S_XAN, 8, 1, -2, 0, 0, (G_NOCORPSE | G_NOGEN | G_GENO),
X+ 	  { { AT_TUCH, AD_ELEC, 2, 4}, NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK },
X+ 	  0, 0, 0, MS_BUZZ, MZ_HUGE, 0, 0, M1_NOEYES | M1_NOHANDS | 
X+ 	  M1_NOLIMBS | M1_NOHEAD, M2_NEUTER | M2_HOSTILE, 0, C(WHITE) },
X+ 	{ "PDP-9", S_XAN, 10, 1, -2, 0, 0, (G_NOCORPSE | G_NOGEN | G_GENO),
X+ 	  { { AT_TUCH, AD_ELEC, 4, 4}, NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK },
X+ 	  0, 0, 0, MS_BUZZ, MZ_HUGE, 0, 0, M1_NOEYES | M1_NOHANDS |
X+ 	  M1_NOLIMBS | M1_NOHEAD, M2_NEUTER | M2_HOSTILE, 0, C(WHITE) },
X+ 	{ "VAX", S_XAN, 12, 1, -2, 0, 0, (G_NOCORPSE | G_NOGEN | G_GENO),
X+ 	  { { AT_TUCH, AD_ELEC, 6, 4}, NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK },
X+ 	  0, 0, 0, MS_BUZZ, MZ_HUGE, 0, 0, M1_NOEYES | M1_NOHANDS | 
X+ 	  M1_NOLIMBS | M1_NOHEAD, M2_NEUTER | M2_HOSTILE, 0, C(BRIGHT_GREEN) },
X+ 	{ "walking disk drive", S_XAN, 14, 50, -2, 0, 0, (G_NOCORPSE | G_NOGEN | G_GENO),
X+ 	  { { AT_TUCH, AD_ELEC, 4, 4}, { AT_HUGS, AD_PHYS, 2, 4},
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  0, 0, 0, MS_BUZZ, MZ_HUGE, 0, 0, M1_NOEYES | M1_NOHANDS |
X+ 	  M1_NOLIMBS | M1_NOHEAD, M2_NEUTER | M2_HOSTILE, 0, C(WHITE) },
X+ 	{ "Cray", S_XAN, 15, 1, -2, 0, 0, (G_NOCORPSE | G_NOGEN | G_GENO),
X+ 	  { { AT_TUCH, AD_ELEC, 8, 6}, NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK },
X+ 	  0, 0, 0, MS_BUZZ, MZ_HUGE, 0, 0, M1_NOEYES | M1_NOHANDS |
X+ 	  M1_NOLIMBS | M1_NOHEAD, M2_NEUTER | M2_HOSTILE, 0, C(WHITE) },
X  /*	lights */
X  	{ "yellow light", S_LIGHT, 3, 15, 0, 0, 0, (G_NOCORPSE| G_GENO | 4),
X  	  { { AT_EXPL, AD_BLND, 10, 20 }, NO_ATTK, NO_ATTK,
X***************
X*** 785,790 ****
X--- 897,914 ----
X  	  M2_NOPOLY | M2_MINION | M2_STALK | M2_STRONG | M2_NASTY | M2_LORD |
X  	  M2_COLLECT | M2_MAGIC,
X  	  0, C(HI_LORD) },
X+ #ifdef DOUGLAS_ADAMS
X+ 	{ "Douglas Adams", S_ANGEL, 22, 12, 6, 0, -30, (G_UNIQ | G_NOGEN),
X+ 	  { { AT_CLAW, AD_PHYS, 4, 6}, { AT_BUTT, AD_DRIN, 1, 1 },
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK},
X+ 	WT_HUMAN, 600, 0, MS_DOUGLAS_ADAMS, MZ_HUMAN, MR_ELEC, /* computers :-) */
X+ 	0, M1_FLY /* has missed the floor */ | M1_MINDLESS | M1_HUMANOID,
X+ 	M2_NOPOLY | M2_LORD | M2_MALE | M2_PNAME | M2_COLLECT | M2_HOSTILE,
X+ 	0, C(HI_LORD) },
X+ #endif
X+ 
X+ 	ROGUE_MONST("aquator",S_ANGEL,9,8,AT_TUCH,AD_RUST,0,0)
X+ 
X  /*	Bats	*/
X  	{ "bat", S_BAT, 0, 22, 8, 0, 0, (G_GENO | G_SGROUP | 1),
X  	  { { AT_BITE, AD_PHYS, 1, 4 }, NO_ATTK, NO_ATTK,
X***************
X*** 820,825 ****
X--- 944,951 ----
X  	    { AT_KICK, AD_PHYS, 1, 6 }, NO_ATTK, NO_ATTK, NO_ATTK },
X  	  2550, 500, 0, MS_SILENT, MZ_LARGE, 0, 0,
X  	  M1_HUMANOID, M2_STRONG | M2_GREEDY | M2_COLLECT, 0, C(CYAN) },
X+ 	ROGUE_MONST("centaur",S_CENTAUR,7,5,AT_KICK,AD_PHYS,3,6)
X+ 
X  /*	Dragons.  The order of the dragons is VERY IMPORTANT.  Quite a few
X  	pieces of code depend on gray being first and yellow being last.
X  	The code also depends on the *order* being the same as that for
X***************
X*** 945,950 ****
X--- 1071,1102 ----
X  	  M1_CARNIVORE | M1_ACID,
X  	  M2_HOSTILE | M2_STRONG | M2_NASTY | M2_GREEDY | M2_JEWELS | M2_MAGIC,
X  	  0, C(YELLOW) },
X+ /* There are many similarities between the Chromatic Dragon, the Dragon Lord,
X+ ** and an ancient multi-hued dragon ... */
X+ 	{ "ancient multi-hued dragon", S_DRAGON, 18, 9, -1, 20, 7, (G_GENO | 1),
X+ 	  { { AT_BREA, AD_RBRE, 8, 6 }, { AT_BITE, AD_PHYS, 6, 8 },
X+ 	    { AT_CLAW, AD_PHYS, 2, 4 }, { AT_CLAW, AD_PHYS, 2, 4 },
X+ 	    NO_ATTK, NO_ATTK },
X+ 	  WT_DRAGON, 1500, 0, MS_ROAR, MZ_GIGANTIC,
X+ 	  MR_FIRE | MR_COLD | MR_ELEC | MR_DISINT | MR_POISON | MR_STONE,
X+ 	  MR_FIRE | MR_COLD | MR_ELEC | MR_DISINT | MR_POISON | MR_STONE,
X+ 	  M1_FLY | M1_THICK_HIDE | M1_NOHANDS | M1_SEE_INVIS | M1_OVIPAROUS |
X+ 	  M1_CARNIVORE | M1_ACID | M1_POIS,
X+ 	  M2_HOSTILE | M2_STRONG | M2_NASTY | M2_GREEDY | M2_JEWELS | M2_MAGIC,
X+ 	  0, C(WHITE) /* because white is the combination of all colors ... */},
X+ 	{ "Dragon Lord", S_DRAGON, 25, 12, -3, 50, 7, (G_NOGEN | G_UNIQ),
X+ 	  { { AT_BREA, AD_RBRE, 8, 8 }, { AT_BITE, AD_PHYS, 8, 8 },
X+ 	    { AT_CLAW, AD_PHYS, 2, 6 }, { AT_CLAW, AD_PHYS, 2, 6 },
X+ 	    NO_ATTK, NO_ATTK },
X+ 	  WT_DRAGON, 1500, 0, MS_ROAR, MZ_GIGANTIC,
X+ 	  MR_FIRE | MR_COLD | MR_ELEC | MR_DISINT | MR_POISON | MR_STONE,
X+ 	  MR_FIRE | MR_COLD | MR_ELEC | MR_DISINT | MR_POISON | MR_STONE,
X+ 	  M1_FLY | M1_THICK_HIDE | M1_NOHANDS | M1_SEE_INVIS | M1_OVIPAROUS |
X+ 	  M1_CARNIVORE | M1_ACID | M1_POIS,
X+ 	  M2_HOSTILE | M2_STRONG | M2_NASTY | M2_GREEDY | M2_JEWELS | M2_MAGIC,
X+ 	  0, C(HI_LORD) },
X+ 	ROGUE_MONST("dragon",S_DRAGON,20,9,AT_BREA,AD_FIRE,4,10)
X+ 
X  /*	Elementals	*/
X  	{ "air elemental", S_ELEMENTAL, 8, 36, 2, 30, 0, (G_NOCORPSE | 1),
X  	  { { AT_ENGL, AD_PHYS, 2, 10 }, NO_ATTK, NO_ATTK,
X***************
X*** 974,979 ****
X--- 1126,1132 ----
X  	  M1_NOEYES | M1_NOLIMBS | M1_NOHEAD | M1_MINDLESS | M1_AMPHIBIOUS |
X  	  M1_SWIM,
X  	  M2_STRONG | M2_NEUTER, 0, C(BLUE) },
X+ 	ROGUE_MONST("emu",S_ELEMENTAL,1,4,AT_BITE,AD_PHYS,1,4)
X  /*	Fungi	*/
X  	{ "brown mold", S_FUNGUS, 1, 0, 9, 0, 0, (G_GENO | 1),
X  	  { { AT_NONE, AD_COLD, 0, 6 }, NO_ATTK, NO_ATTK,
X***************
X*** 1017,1022 ****
X--- 1170,1177 ----
X  	  M1_BREATHLESS | M1_NOEYES | M1_NOLIMBS | M1_NOHEAD | M1_MINDLESS |
X  	  M1_OMNIVORE,
X  	  M2_HOSTILE | M2_NEUTER, 0, C(MAGENTA) },
X+ 	ROGUE_MONST("venus flytrap",S_FUNGUS,12,6,AT_TUCH,AD_STCK,1,1)
X+ 
X  /*	Gnomes	*/
X  	{ "gnome", S_GNOME, 1, 6, MARM(10,5), 4, 0, (G_GENO | G_SGROUP | 1),
X  	  { { AT_WEAP, AD_PHYS, 1, 6 }, NO_ATTK, NO_ATTK,
X***************
X*** 1038,1043 ****
X--- 1193,1199 ----
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X  	  750, 150, 0, MS_ORC, MZ_SMALL, 0, 0,
X  	  M1_HUMANOID, M2_PRINCE | M2_MALE | M2_COLLECT, 0, C(HI_LORD) },
X+ 	ROGUE_MONST("griffin",S_GNOME,19,8,AT_BITE,AD_PHYS,6,5)
X  #ifdef SPLITMON_1
X  };
X  #endif
X***************
X*** 1118,1123 ****
X--- 1274,1281 ----
X  	  900, 400, 0, MS_SILENT, MZ_LARGE, 0, 0,
X  	  M1_ANIMAL | M1_FLY | M1_SEE_INVIS,
X  	  M2_WANDER | M2_STALK | M2_HOSTILE | M2_STRONG, 0, C(WHITE) },
X+ 	ROGUE_MONST("ice monster",S_STALKER,2,1,AT_NONE,AD_PLYS,0,20)
X+ 
X  /*	Jabberwock */
X  	{ "jabberwock", S_JABBERWOCK, 15, 12, -2, 50, 0, (G_GENO | 1),
X  	  { { AT_BITE, AD_PHYS, 2, 10 }, { AT_BITE, AD_PHYS, 2, 10 },
X***************
X*** 1156,1163 ****
X--- 1314,1330 ----
X  	  WT_HUMAN, 200, 0, MS_ARREST, MZ_HUMAN, 0, 0, M1_HUMANOID,
X  	  M2_HUMAN | M2_WANDER | M2_HOSTILE | M2_STRONG | M2_MALE | M2_COLLECT,
X  	  0, C(HI_LORD) },
X+ 	ROGUE_MONST("kestrel",S_KOP,1,4,AT_BITE,AD_PHYS,1,4)
X+ 
X  #endif
X  /*	Liches	 */
X+ 	{ "baby lich", S_LICH, 7, 6, 5, 10, -6, (G_GENO | 1),
X+ 	  { { AT_TUCH, AD_COLD, 3, 2 }, NO_ATTK, NO_ATTK, NO_ATTK,
X+  	    NO_ATTK, NO_ATTK },
X+ 	  600, 50, 0, MS_MUMBLE, MZ_HUMAN,
X+ 	  MR_COLD | MR_SLEEP, 0,
X+ 	  M1_BREATHLESS | M1_HUMANOID | M1_POIS, M2_UNDEAD | M2_HOSTILE, 
X+ 	  0, C(YELLOW) },
X  	{ "lich", S_LICH, 11, 6, 0, 30, -9, (G_GENO | 1),
X  	  { { AT_TUCH, AD_COLD, 1, 10 }, { AT_MAGC, AD_SPEL, 0, 0 },
X  	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 1279,1284 ****
X--- 1446,1453 ----
X  	  2600, 400, 0, MS_MUMBLE, MZ_HUGE, MR_POISON, MR_POISON,
X  	  M1_NOLIMBS | M1_SLITHY | M1_THICK_HIDE | M1_OVIPAROUS | M1_POIS,
X  	  M2_STRONG, 0, C(GREEN) },
X+ 	ROGUE_MONST("nymph",S_NAGA,10,1,AT_CLAW,AD_SITM,0,0)
X+ 
X  /*	Ogres	*/
X  	{ "ogre", S_OGRE, 5, 10, 5, 0, -3, (G_SGROUP | G_GENO | 1),
X  	  { { AT_WEAP, AD_PHYS, 2, 5 }, NO_ATTK, NO_ATTK,
X***************
X*** 1326,1337 ****
X--- 1495,1510 ----
X  	  M1_BREATHLESS | M1_AMORPHOUS | M1_NOEYES | M1_NOLIMBS | M1_NOHEAD |
X  	  M1_MINDLESS | M1_OMNIVORE | M1_ACID,
X  	  M2_HOSTILE | M2_NEUTER, 0, C(BLACK) },
X+ 	ROGUE_MONST("phantom",S_PUDDING,15,7,AT_BITE,AD_PHYS,4,5)
X+ 
X  /*	Quantum Mechanics	*/
X  	{ "quantum mechanic", S_QUANTMECH, 7, 12, 3, 10, 0, (G_GENO | 3),
X  	  { { AT_CLAW, AD_TLPT, 1, 4 }, NO_ATTK, NO_ATTK,
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X  	  WT_HUMAN, 20, 0, MS_HUMANOID, MZ_HUMAN, MR_POISON, 0,
X  	  M1_HUMANOID | M1_POIS | M1_TPORT, M2_HOSTILE, 0, C(CYAN) },
X+ 	ROGUE_MONST("quagga",S_QUANTMECH,8,7,AT_BITE,AD_PHYS,6,2)
X+ 
X  /*	Rust Monster	*/
X  	{ "rust monster", S_RUSTMONST, 5, 18, 2, 0, 0, (G_GENO | 2),
X  	  { { AT_TUCH, AD_RUST, 0, 0 }, { AT_TUCH, AD_RUST, 0, 0 },
X***************
X*** 1339,1344 ****
X--- 1512,1519 ----
X  	  1000, 250, 0, MS_SILENT, MZ_MEDIUM, 0, 0,
X  	  M1_SWIM | M1_ANIMAL | M1_NOHANDS | M1_METALLIVORE, M2_HOSTILE,
X  	  0, C(BROWN) },
X+ 	ROGUE_MONST("rattlesnake",S_RUSTMONST,3,7,AT_BITE,AD_DRST,2,4)
X+ 
X  /*	Snakes	*/
X  	{ "garter snake", S_SNAKE, 1, 8, 8, 0, 0, (G_LGROUP | G_GENO | 1),
X  	  { { AT_BITE, AD_PHYS, 1, 2 }, NO_ATTK, NO_ATTK,
X***************
X*** 1424,1429 ****
X--- 1599,1611 ----
X  	  WT_HUMAN, 400, 0, MS_VAMPIRE, MZ_HUMAN, MR_SLEEP | MR_POISON, 0,
X  	  M1_FLY | M1_BREATHLESS | M1_HUMANOID | M1_POIS | M1_REGEN,
X  	  M2_UNDEAD | M2_STALK | M2_HOSTILE | M2_STRONG | M2_NASTY, 0, C(RED) },
X+ #ifdef DOUGLAS_ADAMS
X+ 	{ "vogon", S_VAMPIRE, 8, 10, 10, 0, 0, (G_GENO | 1),
X+ 	  { { AT_CLAW, AD_PHYS, 1, 2}, {AT_TENT, AD_STUN, 0, 0},
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X+           300, 300, 0, MS_BURBLE, MZ_HUMAN, 0, 0,
X+ 	  M1_SWIM | M1_HUMANOID | M1_POIS, M2_HOSTILE, 0, C(GREEN) },
X+ #endif
X  	{ "vampire lord", S_VAMPIRE, 12, 14, 0, 50, -9, (G_GENO | 1),
X  	  { { AT_CLAW, AD_PHYS, 1, 8 }, { AT_BITE, AD_DRLI, 1, 8 },
X  	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 1431,1436 ****
X--- 1613,1630 ----
X  	  M1_FLY | M1_BREATHLESS | M1_HUMANOID | M1_POIS | M1_REGEN,
X  	  M2_UNDEAD | M2_STALK | M2_HOSTILE | M2_STRONG | M2_NASTY |
X  	  M2_LORD | M2_MALE, 0, C(BLUE) },
X+ #ifdef DOUGLAS_ADAMS
X+ 	{ "vogon lord", S_VAMPIRE, 14, 8, 8, 0, 0, (G_GENO | 1),
X+ 	  { { AT_CLAW, AD_PHYS, 2, 4 }, {AT_TENT, AD_DRLI, 1, 4 },
X+             NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  400, 400, 0, MS_BURBLE, MZ_HUMAN, 0, 0,
X+ 	  M1_SWIM | M1_HUMANOID | M1_POIS, M2_HOSTILE, 0, C(BRIGHT_GREEN) },
X+ 	{ "Prostetnik Vogon Jeltz", S_VAMPIRE, 18, 6, 8, 0,0,(G_UNIQ | G_NOGEN),
X+ 	  { { AT_CLAW, AD_PHYS, 4, 4}, {AT_TENT, AD_DRLI, 1, 4 },
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  400, 400, 0, MS_BURBLE, MZ_HUMAN, 0, 0,
X+ 	  M1_SWIM | M1_HUMANOID | M1_POIS, M2_HOSTILE | M2_PNAME, 0,C(HI_LORD)},
X+ #endif
X  	{ "Vlad the Impaler", S_VAMPIRE, 14, 18, -3, 80, -10,
X  	  (G_NOGEN | G_NOCORPSE | G_UNIQ),
X  	  { { AT_WEAP, AD_PHYS, 1, 6 }, { AT_BITE, AD_DRLI, 1, 6 },
X***************
X*** 1469,1474 ****
X--- 1663,1677 ----
X  	  MR_FIRE | MR_COLD | MR_STONE, MR_FIRE | MR_COLD | MR_STONE,
X  	  M1_BREATHLESS | M1_WALLWALK | M1_THICK_HIDE | M1_METALLIVORE,
X  	  M2_HOSTILE | M2_STRONG, 0, C(BROWN) },
X+ #ifdef DOUGLAS_ADAMS
X+ 	{ "Marvin", S_XORN, 10, 10, 0, 0, 0, (G_UNIQ | G_NOGEN | G_NOCORPSE),
X+ 	  { { AT_TALK, AD_DEPR, 1, 3}, {AT_TUCH, AD_ELEC, 1, 1},
X+   	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK},
X+ 	  0, 0, 0, MS_DOUGLAS_ADAMS, MZ_HUMAN, 0, 0, M1_HUMANOID|M1_METALLIVORE,
X+ 	  M2_PNAME | M2_MALE | M2_HOSTILE, 0, C(BRIGHT_CYAN) },
X+ #endif
X+ 	ROGUE_MONST_ATTR("xeroc",S_XORN,16,5,AT_CLAW,AD_PHYS,2,7,M1_ANIMAL|M1_HIDE,M2_HOSTILE,0)
X+ 	
X  /*	Yeti, Apes and other large beasts */
X  	{ "ape", S_YETI, 4, 12, 6, 0, 0, (G_GENO | G_SGROUP | 2),
X  	  { { AT_CLAW, AD_PHYS, 1, 3 }, { AT_CLAW, AD_PHYS, 1, 3 },
X***************
X*** 1500,1505 ****
X--- 1703,1715 ----
X  	  1550, 750, 0, MS_GROWL, MZ_LARGE, 0, 0,
X  	  M1_ANIMAL | M1_HUMANOID | M1_SEE_INVIS | M1_OMNIVORE,
X  	  M2_STRONG, 0, C(GRAY) },
X+ #ifdef DOUGLAS_ADAMS
X+ 	{ "Zaphod Breeblebrox", S_YETI, 8, 10, 10, 0, 0, (G_UNIQ | G_NOGEN),
X+ 	  { { AT_WEAP, AD_PHYS, 1, 6}, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK},
X+ 	  400, 400, 0, MS_DOUGLAS_ADAMS, MZ_HUMAN, 0, 0,
X+ 	  M1_HUMANOID, M2_MALE | M2_PNAME | M2_HOSTILE, 0, C(GREEN) },
X+ #endif 
X  /*	Zombies 	*/
X  	{ "kobold zombie", S_ZOMBIE, 0, 6, 10, 0, -2, (G_GENO | G_NOCORPSE | 1),
X  	  { { AT_CLAW, AD_PHYS, 1, 4 }, NO_ATTK, NO_ATTK,
X***************
X*** 1539,1544 ****
X--- 1749,1766 ----
X  	  MR_COLD | MR_SLEEP | MR_POISON, 0,
X  	  M1_BREATHLESS | M1_MINDLESS | M1_HUMANOID,
X  	  M2_UNDEAD | M2_STALK | M2_HOSTILE, 0, C(HI_DOMESTIC) },
X+ #ifdef DOUGLAS_ADAMS
X+ /* The creeping 42 is occassionally peaceful, to reduce the advantage
X+ ** of killing them for gain levels 
X+ ** it cannot be genocided - not because genociding them would be unbalancing,
X+ ** but because not genociding them (cursed genocide scroll) would be. */
X+ 	{ "creeping 42", S_ZOMBIE, 4, 10, 10, 0, 0, (1), 
X+           { { AT_CLAW, AD_PHYS, 1, 4}, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK },
X+           42, 42, 0, MS_DOUGLAS_ADAMS, MZ_SMALL, 0, 0, 
X+ 	  M1_AMORPHOUS | M1_WALLWALK | M1_HIDE | M1_BREATHLESS,
X+ 	  M2_NEUTER, 0, C(YELLOW) },
X+ #endif
X  	{ "ettin zombie", S_ZOMBIE, 6, 8, 6, 0, -4, (G_GENO | G_NOCORPSE | 1),
X  	  { { AT_CLAW, AD_PHYS, 1, 10 }, { AT_CLAW, AD_PHYS, 1, 10 },
X  	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 1562,1567 ****
X--- 1784,1791 ----
X  	  M1_BREATHLESS | M1_MINDLESS | M1_HUMANOID | M1_THICK_HIDE,
X  	  M2_UNDEAD | M2_WANDER | M2_HOSTILE | M2_STRONG | M2_COLLECT,
X  	  0, C(WHITE) },
X+ 	ROGUE_MONST("zombie",S_ZOMBIE,4,2,AT_CLAW,AD_PHYS,2,4)
X+ 
X  /*	Golems	*/
X  	{ "straw golem", S_GOLEM, 3, 12, 10, 0, 0, (G_GENO | G_NOCORPSE | 1),
X  	  { { AT_CLAW, AD_PHYS, 1, 2 }, { AT_CLAW, AD_PHYS, 1, 2 },
X***************
X*** 1677,1682 ****
X--- 1901,1929 ----
X  	  MR_SLEEP, MR_SLEEP, M1_HUMANOID | M1_OMNIVORE,
X  	  M2_ELF | M2_STRONG | M2_PRINCE | M2_MALE | M2_COLLECT, 0,
X  	  C(HI_LORD) },
X+ /* these are for the special "school" level written by me */
X+ 	{ "pupil", S_HUMAN, 4, 10, 10, 0, 0, G_NOGEN,
X+           { { AT_WEAP, AD_PHYS, 1, 1}, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK },
X+ 	  /* sleep resistance keeps them from sleeping in lessons :-) */
X+ 	  WT_HUMAN, 400, 0, MS_PUPIL, MZ_HUMAN, MR_SLEEP, MR_SLEEP,
X+  	  M1_HUMANOID | M1_OMNIVORE, 
X+ 	  M2_HUMAN | M2_COLLECT | M2_HOSTILE, 0, C(HI_DOMESTIC) },
X+ 	{ "teacher", S_HUMAN, 8, 10, 10, 0, 0, G_NOGEN,
X+ 	  { { AT_WEAP, AD_PHYS, 2, 4 }, { AT_TALK, AD_SLEE, 1, 1 },
X+  	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  WT_HUMAN, 400, 0, MS_TEACHER, MZ_HUMAN, MR_SLEEP | MR_POISON,
X+ 	  /* teachers have to be proof against their own attempts to put */
X+ 	  /* pupils to sleep; they're poisonous as well ... */
X+ 	  MR_SLEEP | MR_POISON, M1_HUMANOID | M1_OMNIVORE,
X+ 	  M2_HUMAN | M2_COLLECT | M2_HOSTILE, 0, C(HI_LORD) },
X+ 	{ "principal", S_HUMAN, 12, 10, 10, 30, 0, (G_NOGEN | G_UNIQ),
X+ 	  { { AT_WEAP, AD_PHYS, 4, 8}, { AT_TALK, AD_DRIN, 2, 2},
X+ 	    { AT_TALK, AD_SLEE, 1, 1},  NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  WT_HUMAN, 400, 0, MS_PRINCIPAL, MZ_HUMAN, MR_SLEEP | MR_POISON,
X+ 	  MR_SLEEP | MR_POISON, M1_HUMANOID | M1_OMNIVORE,
X+ 	  M2_HUMAN | M2_COLLECT | M2_STALK | M2_HOSTILE, 0, C(HI_LORD) },
X+ 
X  	{ "nurse", S_HUMAN, 11, 6, 0, 0, 0, (G_GENO | 3),
X  	  { { AT_CLAW, AD_HEAL, 2, 6 }, NO_ATTK, NO_ATTK,
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 1691,1696 ****
X--- 1938,1949 ----
X  	  M2_NOPOLY | M2_HUMAN | M2_PEACEFUL | M2_STRONG |
X  	  M2_COLLECT | M2_MAGIC,
X  	  0, C(HI_DOMESTIC) },
X+ 	{ "blacksmith", S_HUMAN, 12, 18, 0, 0, 0, G_NOGEN, 
X+ 	  { { AT_WEAP, AD_PHYS, 4, 4 }, { AT_WEAP, AD_PHYS, 4, 4 },
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  WT_HUMAN, 400, 0, MS_SMITH, MZ_HUMAN, 0, 0,
X+ 	  M1_HUMANOID | M1_OMNIVORE, 
X+  	  M2_NOPOLY | M2_HUMAN | M2_PEACEFUL | M2_STRONG, 0, C(HI_DOMESTIC) },
X  	{ "guard", S_HUMAN, 12, 12, MARM(10,-1), 40, 10, G_NOGEN,
X  	  { { AT_WEAP, AD_PHYS, 4, 10 }, NO_ATTK, NO_ATTK,
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 1698,1703 ****
X--- 1951,1980 ----
X  	  0, 0, M1_HUMANOID | M1_OMNIVORE,
X  	  M2_NOPOLY | M2_HUMAN | M2_MERC | M2_PEACEFUL | M2_STRONG | M2_COLLECT,
X  	  0, C(BLUE) },
X+ #ifdef DOUGLAS_ADAMS
X+ 	/* ------||---- --> THIS IS ***NOT*** A TYPO !!!! */
X+ 	{ "Ford Perfect", S_HUMAN, 8, 10, 10, 0, 0, G_UNIQ | G_NOGEN,
X+ 	  { { AT_CLAW, AD_PHYS, 2, 4}, NO_ATTK, NO_ATTK,
X+             NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  WT_HUMAN, 400, 0, MS_DOUGLAS_ADAMS, MZ_HUMAN,
X+ 	  0, 0, M1_HUMANOID | M1_OMNIVORE,
X+ 	  M2_NOPOLY | M2_MALE | M2_PNAME | M2_HUMAN, 0,
X+ 	  C(HI_DOMESTIC) },
X+ 	{ "Arthur Dent", S_HUMAN, 9, 10, 10, 0, 0, G_UNIQ | G_NOGEN,
X+ 	  { { AT_CLAW, AD_PHYS, 2, 4}, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  WT_HUMAN, 400, 0, MS_DOUGLAS_ADAMS, MZ_HUMAN,
X+ 	  0, 0, M1_HUMANOID | M1_OMNIVORE, 
X+ 	  M2_NOPOLY | M2_MALE | M2_PNAME | M2_HUMAN, 0,
X+ 	  C(HI_DOMESTIC) },
X+ 	{ "Mr. Prosser", S_HUMAN, 10, 10, 10, 0, 0, G_UNIQ | G_NOGEN,
X+ 	  { { AT_SPIT, AD_ACID, 2, 4}, {AT_BREA, AD_FIRE, 1, 1},
X+ 	    { AT_CLAW, AD_PHYS, 2, 4}, NO_ATTK, NO_ATTK, NO_ATTK },
X+           WT_HUMAN, 400, 0, MS_WAIL, MZ_HUMAN,
X+ 	  0, 0, M1_HUMANOID | M1_METALLIVORE,
X+ 	  M2_NOPOLY | M2_MALE | M2_PNAME | M2_HUMAN | M2_HOSTILE, 0,
X+ 	  C(HI_DOMESTIC) },
X+ #endif
X  	{ "oracle", S_HUMAN, 12, 0, 0, 50, 0, G_NOGEN | G_UNIQ,
X  	  { { AT_NONE, AD_MAGM, 0, 4 }, NO_ATTK, NO_ATTK,
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 1890,1895 ****
X--- 2167,2182 ----
X  	  MR_FIRE | MR_POISON, 0, M1_HUMANOID | M1_FLY | M1_POIS,
X  	  M2_DEMON | M2_STALK | M2_HOSTILE | M2_NASTY | M2_MALE, 0, C(GRAY) },
X  #endif
X+ 	{ "news daemon", S_DEMON, 6, 12, 0, 0, 0, (G_NOCORPSE | G_NOGEN),
X+ 	  { { AT_BITE, AD_PHYS, 2, 4 }, NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK },
X+ 	  0, 0, 0, MS_BUZZ, MZ_HUMAN, 0, 0, M1_FLY | M1_UNSOLID,
X+ 	  M2_DEMON | M2_NASTY | M2_NEUTER | M2_HOSTILE, 0, C(BRIGHT_BLUE) },
X+ 	{ "printer daemon", S_DEMON, 6, 12, 0, 0, 0, (G_NOCORPSE | G_NOGEN),
X+ 	  { { AT_BITE, AD_PHYS, 2, 6 }, NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK },
X+ 	  0, 0, 0, MS_BUZZ, MZ_HUMAN, 0, 0, M1_FLY | M1_UNSOLID,
X+ 	  M2_DEMON | M2_NASTY | M2_NEUTER | M2_HOSTILE, 0, C(BRIGHT_BLUE) },
X  	{ "erinyes", S_DEMON, 7, 12, 2, 30, 10,
X  	  (G_HELL | G_NOCORPSE | G_SGROUP | 2),
X  	  { { AT_WEAP, AD_DRST, 2, 4 }, NO_ATTK, NO_ATTK,
X***************
X*** 1965,1970 ****
X--- 2252,2263 ----
X  	  M2_DEMON | M2_STALK | M2_HOSTILE | M2_STRONG | M2_NASTY | M2_COLLECT,
X  	  0, C(RED) },
X  	/* Named demon lords & princes plus Arch-Devils */
X+ 	{ "UNIX Kernel", S_DEMON, 28, 10, 0, 20, -3, (G_NOGEN | G_UNIQ | G_NOCORPSE),
X+ 	  { { AT_BITE, AD_PHYS, 4, 8 }, { AT_CLAW, AD_STUN, 2, 2 },
X+ 	    { AT_KICK, AD_DRLI, 3, 3 }, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  WT_HUMAN, 0, 0, MS_BUZZ, MZ_HUMAN, 0, 0, 
X+ 	  M1_UNSOLID | M1_FLY, M2_NOPOLY | M2_DEMON | M2_HOSTILE | M2_LORD 
X+ 	  | M2_NEUTER, 0, C(BRIGHT_BLUE) },
X  	{ "Juiblex", S_DEMON, 50, 3, -7, 65, -15,
X  	  (G_HELL | G_NOCORPSE | G_NOGEN | G_UNIQ),
X  	  { { AT_ENGL, AD_DISE, 4, 10 }, { AT_SPIT, AD_ACID, 3, 6 },
X***************
X*** 2083,2088 ****
X--- 2376,2387 ----
X  	  M1_HUMANOID | M1_FLY | M1_POIS,
X  	  M2_NOPOLY | M2_STALK | M2_COLLECT, 0, C(YELLOW) },
X  /*	sea monsters		*/
X+ #ifdef DOUGLAS_ADAMS
X+ 	{ "babelfish", S_EEL, 4, 8, 10, 0, 0, (G_GENO | 1),
X+ 	  { NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK},
X+ 	  50, 50, 0, MS_SILENT, MZ_TINY, 0, 0, M1_SWIM | M1_ANIMAL |
X+ 	  M1_HERBIVORE, M2_HOSTILE, 0, C(ORANGE_COLORED) },
X+ #endif
X  	{ "giant eel", S_EEL, 5, 9, -1, 0, 0, (G_GENO | G_NOGEN),
X  	  { { AT_BITE, AD_PHYS, 3, 6 }, { AT_TUCH, AD_WRAP, 0, 0 },
X  	    NO_ATTK, NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 2114,2119 ****
X--- 2413,2423 ----
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X  	  10, 20, 0, MS_SQEEK, MZ_TINY, 0, 0,
X  	  M1_ANIMAL | M1_NOHANDS | M1_CARNIVORE, M2_HOSTILE, 0, C(GREEN) },
X+ 	{ "deminewt", S_LIZARD, 2, 6, 7, 0, 0, (G_GENO | 2),
X+ 	  { { AT_BITE, AD_PHYS, 2, 2}, NO_ATTK, NO_ATTK, 
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  10, 20, 0, MS_SQEEK, MZ_TINY, 0, 0,
X+ 	  M1_ANIMAL | M1_NOHANDS | M1_CARNIVORE, M2_HOSTILE, 0, C(RED) },
X  	{ "iguana", S_LIZARD, 2, 6, 7, 0, 0, (G_GENO | 5),
X  	  { { AT_BITE, AD_PHYS, 1, 4 }, NO_ATTK, NO_ATTK,
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 2130,2135 ****
X--- 2434,2444 ----
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X  	  10, 40, 0, MS_SILENT, MZ_TINY, MR_STONE, MR_STONE,
X  	  M1_ANIMAL | M1_NOHANDS | M1_CARNIVORE, M2_HOSTILE, 0, C(GREEN) },
X+ 	{ "master newt", S_LIZARD, 6, 6, 6, 10, 0, (G_GENO | 2),
X+ 	  { { AT_BITE, AD_PHYS, 2, 6}, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  10, 40, 0, MS_SQEEK, MZ_MEDIUM, 0, 0,
X+ 	  M1_ANIMAL | M1_NOHANDS | M1_CARNIVORE, M2_HOSTILE, 0, C(HI_LORD) },
X  	{ "chameleon", S_LIZARD, 6, 5, 6, 10, 0, (G_GENO | 2),
X  	  { { AT_BITE, AD_PHYS, 4, 2 }, NO_ATTK, NO_ATTK,
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 2179,2184 ****
X--- 2488,2499 ----
X  	  WT_ELF, 350, 0, MS_HUMANOID, MZ_HUMAN, MR_SLEEP, MR_SLEEP,
X  	  M1_HUMANOID | M1_OMNIVORE | M1_SEE_INVIS,
X  	  M2_NOPOLY | M2_ELF | M2_STRONG | M2_COLLECT, 0, C(HI_DOMESTIC) },
X+ 	{ "geek", S_HUMAN, 1, 10, 10, 2, 2, G_NOGEN,
X+ 	  { { AT_WEAP, AD_PHYS, 1, 8 }, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  WT_HUMAN, 400, 0, MS_HUMANOID, MZ_HUMAN, MR_POISON | MR_ELEC,
X+           MR_POISON | MR_ELEC, M1_HUMANOID | M1_OMNIVORE,
X+ 	  M2_NOPOLY | M2_HUMAN | M2_STRONG | M2_COLLECT, 0, C(HI_DOMESTIC) },
X  	{ "healer", S_HUMAN, 1, 10, 10, 1, 0, G_NOGEN,
X  	  { { AT_WEAP, AD_PHYS, 1, 6 }, NO_ATTK, NO_ATTK,
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 2280,2285 ****
X--- 2595,2607 ----
X  	  M1_HUMANOID | M1_SEE_INVIS | M1_OMNIVORE,
X  	  M2_NOPOLY | M2_ELF | M2_HUMAN | M2_PNAME | M2_PEACEFUL | M2_STRONG |
X  	  M2_FEMALE | M2_COLLECT | M2_MAGIC, M3_CLOSE, C(HI_LORD) },
X+ 	{ "The Dev Team", S_HUMAN, 20, 12, 0, 80, 0, (G_NOGEN | G_UNIQ),
X+ 	  { { AT_WEAP, AD_PHYS, 1, 8 }, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK },
X+ 	  WT_HUMAN, 400, 0, MS_LEADER, MZ_HUMAN, MR_POISON | MR_ELEC,
X+ 	  MR_POISON | MR_ELEC, M1_HUMANOID | M1_OMNIVORE,
X+ 	  M2_NOPOLY | M2_HUMAN | M2_PNAME | M2_PEACEFUL | M2_STRONG |
X+ 	  M2_NEUTER | M2_COLLECT | M2_MAGIC, M3_CLOSE, C(HI_LORD) },
X  	{ "Hippocrates", S_HUMAN, 20, 12, 0, 40, 0, (G_NOGEN | G_UNIQ),
X  	  { { AT_WEAP, AD_PHYS, 1, 6 }, NO_ATTK, NO_ATTK,
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 2381,2386 ****
X--- 2703,2716 ----
X  	  M2_NOPOLY | M2_ORC | M2_HOSTILE | M2_STRONG | M2_STALK | M2_NASTY |
X  	  M2_MALE | M2_GREEDY | M2_JEWELS | M2_COLLECT | M2_MAGIC,
X  	  M3_WANTSARTI | M3_WAITFORU, C(HI_LORD) },
X+ 	{ "Bill Gates", S_HUMAN, 20, 10, 10, 0, -15, (G_NOGEN | G_UNIQ),
X+ 	  { { AT_WEAP, AD_PHYS, 4, 8 }, { AT_BITE, AD_PHYS, 6, 8 },
X+ 	    { AT_TENT, AD_DRIN, 2, 1 }, NO_ATTK, NO_ATTK, NO_ATTK },
X+ 	  WT_HUMAN, 400, 0, MS_NEMESIS, MZ_HUMAN, 0, 0, 
X+ 	  M1_HUMANOID | M1_OMNIVORE,
X+ 	  M2_NOPOLY | M2_HUMAN | M2_STRONG | M2_STALK | M2_PNAME | 
X+ 	  M2_HOSTILE | M2_NASTY | M2_MALE, M3_WANTSARTI | M3_WAITFORU,
X+ 	  C(HI_LORD) },
X  	{ "Cyclops", S_GIANT, 18, 10, 0, 0, -15, (G_NOGEN | G_UNIQ),
X  	  { { AT_WEAP, AD_PHYS, 4, 8 }, { AT_WEAP, AD_PHYS, 4, 8 },
X  	    { AT_CLAW, AD_SAMU, 2, 6 }, NO_ATTK, NO_ATTK, NO_ATTK },
X***************
X*** 2474,2479 ****
X--- 2804,2815 ----
X  	  WT_ELF, 350, 0, MS_GUARDIAN, MZ_HUMAN, MR_SLEEP, MR_SLEEP,
X  	  M1_HUMANOID | M1_OMNIVORE,
X  	  M2_NOPOLY | M2_ELF | M2_PEACEFUL | M2_COLLECT, 0, C(HI_DOMESTIC) },
X+ 	{ "hacker", S_HUMAN, 5, 12, 10, 10, 1, G_NOGEN,
X+ 	  { { AT_WEAP, AD_PHYS, 2, 4 }, NO_ATTK, NO_ATTK, NO_ATTK,
X+ 	    NO_ATTK, NO_ATTK },
X+ 	  WT_HUMAN, 400, 0, MS_GUARDIAN, MZ_HUMAN, 0, 0,
X+ 	  M1_HUMANOID | M1_OMNIVORE,
X+ 	  M2_NOPOLY | M2_HUMAN | M2_PEACEFUL, 0, C(HI_DOMESTIC) },
X  	{ "attendant", S_HUMAN, 5, 10, 10, 10, 3, G_NOGEN,
X  	  { { AT_WEAP, AD_PHYS, 1, 6 }, NO_ATTK, NO_ATTK,
X  	    NO_ATTK, NO_ATTK, NO_ATTK },
X*** /tmp/tmp.1285	Sat May 28 21:18:03 1994
X--- ./src/monmove.c	Sun Apr 17 13:13:18 1994
X***************
X*** 923,929 ****
X  	    /* Place a segment at the old position. */
X  	    if (mtmp->wormno) worm_move(mtmp);
X  	} else {
X! 	    if(ptr->mlet == S_UNICORN && rn2(2)) {
X  		rloc(mtmp);
X  		return(1);
X  	    }
X--- 923,929 ----
X  	    /* Place a segment at the old position. */
X  	    if (mtmp->wormno) worm_move(mtmp);
X  	} else {
X! 	    if(ptr->mlet == S_UNICORN && ptr != &mons[PM_YOUNG_UNICORN] && rn2(2)) {
X  		rloc(mtmp);
X  		return(1);
X  	    }
X*** /tmp/tmp.1285	Sat May 28 21:18:07 1994
X--- ./src/objects.c	Sun May 22 19:53:26 1994
X***************
X*** 89,102 ****
X  WEAPON("spear",         NULL,           1, 1, 0, 50, 30,  3, 6, 8, 0, IRON, HI_METAL),
X  WEAPON("elven spear",   "runed spear",  0, 1, 0, 10, 30,  3, 7, 8, 0, IRON, HI_METAL),
X  WEAPON("orcish spear",  "crude spear",  0, 1, 0, 13, 30,  3, 5, 8, 0, IRON, BLACK),
X! WEAPON("dwarvish spear", "stout spear", 0, 1, 0, 12, 35,  3, 8, 8, 0, IRON, HI_METAL),
X  WEAPON("javelin",       "throwing spear",0,1, 0, 10, 20,  3, 6, 6, 0, IRON, HI_METAL),
X  WEAPON("trident",       NULL,           1, 0, 0,  8, 25,  5, 6, 4, 0, IRON, HI_METAL),
X  						/* +1 small, +2d4 large */
X  WEAPON("lance",         NULL,           1, 0, 0,  8,180, 10, 6, 8, 0, IRON, HI_METAL),
X  
X  /* blades */
X! WEAPON("dagger",        NULL,           1, 1, 0, 25, 10,  4,  4,  3, 2, IRON, HI_METAL),
X  WEAPON("elven dagger",  "runed dagger", 0, 1, 0,  8, 10,  4,  5,  3, 2, IRON, HI_METAL),
X  WEAPON("orcish dagger", "crude dagger", 0, 1, 0, 10, 10,  4,  3,  3, 2, IRON, BLACK),
X  WEAPON("athame",        NULL,           1, 1, 0,  0, 10,  4,  4,  3, 2, IRON, HI_METAL),
X--- 89,102 ----
X  WEAPON("spear",         NULL,           1, 1, 0, 50, 30,  3, 6, 8, 0, IRON, HI_METAL),
X  WEAPON("elven spear",   "runed spear",  0, 1, 0, 10, 30,  3, 7, 8, 0, IRON, HI_METAL),
X  WEAPON("orcish spear",  "crude spear",  0, 1, 0, 13, 30,  3, 5, 8, 0, IRON, BLACK),
X! WEAPON("dwarvish spear", "stout spear", 0, 1, 0, 12, 30,  3, 8, 8, 0, IRON, HI_METAL),
X  WEAPON("javelin",       "throwing spear",0,1, 0, 10, 20,  3, 6, 6, 0, IRON, HI_METAL),
X  WEAPON("trident",       NULL,           1, 0, 0,  8, 25,  5, 6, 4, 0, IRON, HI_METAL),
X  						/* +1 small, +2d4 large */
X  WEAPON("lance",         NULL,           1, 0, 0,  8,180, 10, 6, 8, 0, IRON, HI_METAL),
X  
X  /* blades */
X! WEAPON("dagger",        NULL,           1, 1, 0, 20, 10,  4,  4,  3, 2, IRON, HI_METAL),
X  WEAPON("elven dagger",  "runed dagger", 0, 1, 0,  8, 10,  4,  5,  3, 2, IRON, HI_METAL),
X  WEAPON("orcish dagger", "crude dagger", 0, 1, 0, 10, 10,  4,  3,  3, 2, IRON, BLACK),
X  WEAPON("athame",        NULL,           1, 1, 0,  0, 10,  4,  4,  3, 2, IRON, HI_METAL),
X***************
X*** 105,113 ****
X  WEAPON("stiletto",      NULL,           1, 1, 0,  5,  5,  4,  3,  2, 0, IRON, HI_METAL),
X  WEAPON("worm tooth",    NULL,           1, 0, 0,  0, 20,  2,  2,  2, 0, 0, WHITE),
X  WEAPON("crysknife",     NULL,           1, 0, 0,  0, 20,100, 10, 10, 3, MINERAL, WHITE),
X  WEAPON("dwarvish mattock",      "heavy pick",
X  					0, 0, 1, 13,120, 50,12, 8,-1, IRON, HI_METAL),
X! WEAPON("axe",           NULL,           1, 0, 0, 40, 60,  8,  6,  4, 0, IRON, HI_METAL),
X  WEAPON("battle-axe","double-headed axe",0, 0, 1, 10,120, 40,  8,  6, 0, IRON, HI_METAL),
X  						/* "double-bitted" ? */
X  
X--- 105,115 ----
X  WEAPON("stiletto",      NULL,           1, 1, 0,  5,  5,  4,  3,  2, 0, IRON, HI_METAL),
X  WEAPON("worm tooth",    NULL,           1, 0, 0,  0, 20,  2,  2,  2, 0, 0, WHITE),
X  WEAPON("crysknife",     NULL,           1, 0, 0,  0, 20,100, 10, 10, 3, MINERAL, WHITE),
X+ WEAPON("tooth of an algolian suntiger",	"very sharp tooth",
X+ 					0, 0, 0,  5, 10,500, 20, 20, 5, 0, WHITE),
X  WEAPON("dwarvish mattock",      "heavy pick",
X  					0, 0, 1, 13,120, 50,12, 8,-1, IRON, HI_METAL),
X! WEAPON("axe",           NULL,           1, 0, 0, 35, 60,  8,  6,  4, 0, IRON, HI_METAL),
X  WEAPON("battle-axe","double-headed axe",0, 0, 1, 10,120, 40,  8,  6, 0, IRON, HI_METAL),
X  						/* "double-bitted" ? */
X  
X***************
X*** 126,135 ****
X  WEAPON("elven broadsword", "runed broadsword",
X  					0, 0, 0,  4, 70, 10,  6,  6, 0, IRON, HI_METAL),
X  						/* +d4 small, +1 large */
X! WEAPON("long sword", NULL,		1, 0, 0, 50, 40, 15,  8, 12, 0, IRON, HI_METAL),
X! WEAPON("two-handed sword", NULL,	1, 0, 1, 22,150, 50, 12,  6, 0, IRON, HI_METAL),
X  						/* +2d6 large */
X  WEAPON("katana", "samurai sword",	0, 0, 0,  4, 40, 80, 10, 12, 1, IRON, HI_METAL),
X  /* two set-up-for-artifacts swords */
X  						/* +2d6 large */
X  WEAPON("tsurugi", "long samurai sword", 0, 0, 1,  0, 60,500, 16,  8, 2, METAL, HI_METAL),
X--- 128,138 ----
X  WEAPON("elven broadsword", "runed broadsword",
X  					0, 0, 0,  4, 70, 10,  6,  6, 0, IRON, HI_METAL),
X  						/* +d4 small, +1 large */
X! WEAPON("long sword", NULL,		1, 0, 0, 45, 40, 15,  8, 12, 0, IRON, HI_METAL),
X! WEAPON("two-handed sword", NULL,	1, 0, 1, 27,150, 50, 12,  6, 0, IRON, HI_METAL),
X  						/* +2d6 large */
X  WEAPON("katana", "samurai sword",	0, 0, 0,  4, 40, 80, 10, 12, 1, IRON, HI_METAL),
X+ WEAPON("electric sword", NULL,		1, 0, 0,  5, 60,200, 12, 16, 2, IRON, HI_METAL),
X  /* two set-up-for-artifacts swords */
X  						/* +2d6 large */
X  WEAPON("tsurugi", "long samurai sword", 0, 0, 1,  0, 60,500, 16,  8, 2, METAL, HI_METAL),
X***************
X*** 341,353 ****
X  
X  /* gloves */
X  ARMOR("leather gloves", "old gloves",
X! 	0, 0, 0, 0,	       16, 1, 10,   8,	9, 0, LEATHER, HI_LEATHER),
X  ARMOR("gauntlets of fumbling", "padded gloves",
X! 	0, 1, 0, FUMBLING,	8, 1, 10,  50,	9, 0, LEATHER, HI_LEATHER),
X  ARMOR("gauntlets of power", "riding gloves",
X! 	0, 1, 0, 0,		8, 1, 30,  50,	9, 0, IRON,    BROWN),
X  ARMOR("gauntlets of dexterity", "fencing gloves",
X! 	0, 1, 0, 0,		8, 1, 10,  50,	9, 0, LEATHER, HI_LEATHER),
X  
X  /* boots */
X  ARMOR("low boots", "walking shoes",
X--- 344,358 ----
X  
X  /* gloves */
X  ARMOR("leather gloves", "old gloves",
X! 	0, 0, 0, 0,	       15, 1, 10,   8,	9, 0, LEATHER, HI_LEATHER),
X  ARMOR("gauntlets of fumbling", "padded gloves",
X! 	0, 1, 0, FUMBLING,	7, 1, 10,  50,	9, 0, LEATHER, HI_LEATHER),
X  ARMOR("gauntlets of power", "riding gloves",
X! 	0, 1, 0, 0,		7, 1, 30,  50,	9, 0, IRON,    BROWN),
X! ARMOR("gauntlets of typing", "brand-new gloves",
X! 	0, 1, 0, 0,		4, 1, 10,  50,  8, 0, LEATHER, HI_LEATHER),
X  ARMOR("gauntlets of dexterity", "fencing gloves",
X! 	0, 1, 0, 0,		7, 1, 10,  50,	9, 0, LEATHER, HI_LEATHER),
X  
X  /* boots */
X  ARMOR("low boots", "walking shoes",
X***************
X*** 403,408 ****
X--- 408,415 ----
X  RING("see invisible",     "engagement", SEE_INVIS,      150, 1, 0, IRON,     HI_METAL),
X  RING("protection from shape changers", "shiny", PROT_FROM_SHAPE_CHANGERS,
X  							100, 1, 0, IRON,     BRIGHT_CYAN),
X+ RING("health",		  "glass",	0,		150, 1, 1, GLASS,	HI_GLASS),
X+ RING("timely backup",	  "rusty",	0,		150, 1, 0, IRON,     BROWN),
X  #undef RING
X  
X  /* amulets ... - THE Amulet comes last because it is special */
X***************
X*** 410,423 ****
X  		OBJ(name,desc), BITS(0,0,0,0,1,0,0,0,0,0,IRON), power, \
X  		AMULET_CLASS, prob, 0, 20, 150, 0, 0, 0, 0, 20, HI_METAL )
X  
X! AMULET("amulet of ESP",           "circular",   TELEPAT,    180),
X! AMULET("amulet of life saving",   "spherical",  LIFESAVED,   80),
X! AMULET("amulet of strangulation", "oval",       STRANGLED,  140),
X! AMULET("amulet of restful sleep", "triangular", SLEEPING,   140),
X  AMULET("amulet versus poison",    "pyramidal",  POISON_RES, 170),
X! AMULET("amulet of change",        "square",     0,          140),
X  						/* POLYMORPH */
X  AMULET("amulet of reflection",    "hexagonal",  REFLECTING,  80),
X  AMULET("amulet of magical breathing", "octagonal",	MAGICAL_BREATHING, 70),
X  OBJECT(OBJ("cheap plastic imitation of the Amulet of Yendor",
X  	"Amulet of Yendor"), BITS(0,0,1,0,0,0,0,0,0,0,PLASTIC), 0,
X--- 417,432 ----
X  		OBJ(name,desc), BITS(0,0,0,0,1,0,0,0,0,0,IRON), power, \
X  		AMULET_CLASS, prob, 0, 20, 150, 0, 0, 0, 0, 20, HI_METAL )
X  
X! AMULET("amulet of ESP",           "circular",   TELEPAT,    140),
X! AMULET("amulet of life saving",   "spherical",  LIFESAVED,   70),
X! AMULET("amulet of strangulation", "oval",       STRANGLED,  100),
X! AMULET("amulet of restful sleep", "triangular", SLEEPING,   120),
X  AMULET("amulet versus poison",    "pyramidal",  POISON_RES, 170),
X! AMULET("amulet of change",        "square",     0,          100),
X  						/* POLYMORPH */
X  AMULET("amulet of reflection",    "hexagonal",  REFLECTING,  80),
X+ AMULET("amulet of second chance", "tetraedical",SECOND_CHANCE, 150),
X+ AMULET("amulet of data storage",  "icosaedrical", 0,		0),
X  AMULET("amulet of magical breathing", "octagonal",	MAGICAL_BREATHING, 70),
X  OBJECT(OBJ("cheap plastic imitation of the Amulet of Yendor",
X  	"Amulet of Yendor"), BITS(0,0,1,0,0,0,0,0,0,0,PLASTIC), 0,
X***************
X*** 441,477 ****
X  		TOOL_CLASS, prob, 0, \
X  		wt, cost, sdam, ldam, hitbon, 0, wt, color )
X  /* containers */
X! CONTAINER("large box",	    NULL,   1, 0, 0,  40,350,   8, WOOD, HI_WOOD),
X! CONTAINER("chest",	    NULL,   1, 0, 0,  35,600,  16, WOOD, HI_WOOD),
X  CONTAINER("ice box",	    NULL,   1, 0, 0,   5,900,  42, PLASTIC, WHITE),
X! CONTAINER("sack",	    "bag",  0, 0, 0,  35, 15,   2, CLOTH, HI_CLOTH),
X  CONTAINER("oilskin sack",   "bag",  0, 0, 0,   5, 15, 100, CLOTH, HI_CLOTH),
X  CONTAINER("bag of holding", "bag",  0, 1, 0,  20, 15, 100, CLOTH, HI_CLOTH),
X  CONTAINER("bag of tricks",  "bag",  0, 1, 1,  20, 15, 100, CLOTH, HI_CLOTH),
X  #undef CONTAINER
X  /* lock opening tools */
X  TOOL("skeleton key",    "key",  0, 0, 0, 0,  80,  3,    10, IRON, HI_METAL),
X  #ifdef TOURIST
X! TOOL("lock pick",       NULL,   1, 0, 0, 0,  60,  4,    20, IRON, HI_METAL),
X  TOOL("credit card",     NULL,   1, 0, 0, 0,  15,  1,    10, PLASTIC, WHITE),
X  #else
X! TOOL("lock pick",       NULL,   1, 0, 0, 0,  75,  4,    20, IRON, HI_METAL),
X  #endif
X  /* light sources */
X  TOOL("tallow candle", "candle", 0, 1, 0, 0,  20,  2,    10, WAX, WHITE),
X  TOOL("wax candle",    "candle", 0, 1, 0, 0,   5,  2,    20, WAX, WHITE),
X  #ifdef WALKIES
X  TOOL("brass lantern",   NULL,   1, 0, 0, 0,  30,100,    10, COPPER, YELLOW),
X! TOOL("oil lamp",        "lamp", 0, 0, 0, 0,  45, 80,    10, COPPER, YELLOW),
X  #else
X  TOOL("brass lantern",   NULL,   1, 0, 0, 0,  45,100,    10, COPPER, YELLOW),
X! TOOL("oil lamp",        "lamp", 0, 0, 0, 0,  75, 80,    10, COPPER, YELLOW),
X  #endif
X! TOOL("magic lamp",      "lamp", 0, 0, 1, 0,  15, 80,    50, COPPER, YELLOW),
X  /* other tools */
X  #ifdef TOURIST
X  TOOL("expensive camera", NULL,  1, 0, 0, 0,  15, 30,   200, PLASTIC, BLACK),
X! TOOL("mirror", "looking glass", 0, 0, 0, 0,  45, 13,    10, GLASS, SILVER),
X  #else
X  TOOL("mirror", "looking glass", 0, 0, 0, 0,  60, 13,    10, GLASS, SILVER),
X  #endif
X--- 450,490 ----
X  		TOOL_CLASS, prob, 0, \
X  		wt, cost, sdam, ldam, hitbon, 0, wt, color )
X  /* containers */
X! CONTAINER("large box",	    NULL,   1, 0, 0,  25,350,   8, WOOD, HI_WOOD),
X! CONTAINER("chest",	    NULL,   1, 0, 0,  25,600,  16, WOOD, HI_WOOD),
X  CONTAINER("ice box",	    NULL,   1, 0, 0,   5,900,  42, PLASTIC, WHITE),
X! CONTAINER("Schroedinger's Box","large box",
X! 				    0, 0, 0,   0,350, 100, WOOD, HI_WOOD),
X! CONTAINER("sack",	    "bag",  0, 0, 0,  25, 15,   2, CLOTH, HI_CLOTH),
X  CONTAINER("oilskin sack",   "bag",  0, 0, 0,   5, 15, 100, CLOTH, HI_CLOTH),
X  CONTAINER("bag of holding", "bag",  0, 1, 0,  20, 15, 100, CLOTH, HI_CLOTH),
X+ CONTAINER("bag of digestion","bag", 0, 1, 0,  10, 15, 100, CLOTH, HI_CLOTH),
X  CONTAINER("bag of tricks",  "bag",  0, 1, 1,  20, 15, 100, CLOTH, HI_CLOTH),
X+ 
X  #undef CONTAINER
X  /* lock opening tools */
X  TOOL("skeleton key",    "key",  0, 0, 0, 0,  80,  3,    10, IRON, HI_METAL),
X  #ifdef TOURIST
X! TOOL("lock pick",       NULL,   1, 0, 0, 0,  40,  4,    20, IRON, HI_METAL),
X  TOOL("credit card",     NULL,   1, 0, 0, 0,  15,  1,    10, PLASTIC, WHITE),
X  #else
X! TOOL("lock pick",       NULL,   1, 0, 0, 0,  55,  4,    20, IRON, HI_METAL),
X  #endif
X  /* light sources */
X  TOOL("tallow candle", "candle", 0, 1, 0, 0,  20,  2,    10, WAX, WHITE),
X  TOOL("wax candle",    "candle", 0, 1, 0, 0,   5,  2,    20, WAX, WHITE),
X  #ifdef WALKIES
X  TOOL("brass lantern",   NULL,   1, 0, 0, 0,  30,100,    10, COPPER, YELLOW),
X! TOOL("oil lamp",        "lamp", 0, 0, 0, 0,  20, 80,    10, COPPER, YELLOW),
X  #else
X  TOOL("brass lantern",   NULL,   1, 0, 0, 0,  45,100,    10, COPPER, YELLOW),
X! TOOL("oil lamp",        "lamp", 0, 0, 0, 0,  20, 80,    10, COPPER, YELLOW),
X  #endif
X! TOOL("magic lamp",      "lamp", 0, 0, 1, 0,  80, 80,    50, COPPER, YELLOW),
X  /* other tools */
X  #ifdef TOURIST
X  TOOL("expensive camera", NULL,  1, 0, 0, 0,  15, 30,   200, PLASTIC, BLACK),
X! TOOL("mirror", "looking glass", 0, 0, 0, 0,  40, 13,    10, GLASS, SILVER),
X  #else
X  TOOL("mirror", "looking glass", 0, 0, 0, 0,  60, 13,    10, GLASS, SILVER),
X  #endif
X***************
X*** 479,498 ****
X  				0, 0, 1, 1,  15,150,	60, GLASS, HI_GLASS),
X  TOOL("blindfold",       NULL,   1, 0, 0, 0,  55,  2,    20, CLOTH, BLACK),
X  #ifdef WALKIES
X! TOOL("towel",           NULL,   1, 0, 0, 0,  50,  2,    50, CLOTH, MAGENTA),
X! TOOL("leash",           NULL,   1, 0, 0, 0,  70, 12,    20, LEATHER, HI_LEATHER),
X  #else
X! TOOL("towel",           NULL,   1, 0, 0, 0,  75,  3,    50, CLOTH, MAGENTA),
X  #endif
X  TOOL("stethoscope",     NULL,   1, 0, 0, 0,  25,  4,    75, IRON, HI_METAL),
X  TOOL("tinning kit",     NULL,   1, 0, 0, 0,  15,100,    30, IRON, HI_METAL),
X  TOOL("tin opener",      NULL,   1, 0, 0, 0,  35,  4,    30, IRON, HI_METAL),
X  TOOL("can of grease",   NULL,   1, 0, 0, 1,  15, 15,    20, IRON, HI_METAL),
X! TOOL("figurine",        NULL,   1, 0, 1, 0,  25, 50,    80, MINERAL, HI_MINERAL),
X  TOOL("magic marker",    NULL,   1, 0, 1, 1,  15,  2,    50, PLASTIC, RED),
X  /* instruments */
X  TOOL("tin whistle",   "whistle",
X! 				0, 0, 0, 0, 105,  3,	10, METAL, HI_METAL),
X  TOOL("magic whistle", "whistle",
X  				0, 0, 1, 0,  30,  3,	10, METAL, HI_METAL),
X  /* "If tin whistles are made out of tin, what do they make foghorns out of?" */
X--- 492,529 ----
X  				0, 0, 1, 1,  15,150,	60, GLASS, HI_GLASS),
X  TOOL("blindfold",       NULL,   1, 0, 0, 0,  55,  2,    20, CLOTH, BLACK),
X  #ifdef WALKIES
X! TOOL("towel",           NULL,   1, 0, 0, 0,  40,  2,    50, CLOTH, MAGENTA),
X! TOOL("leash",           NULL,   1, 0, 0, 0,  40, 12,    20, LEATHER, HI_LEATHER),
X  #else
X! TOOL("towel",           NULL,   1, 0, 0, 0,  55,  3,    50, CLOTH, MAGENTA),
X  #endif
X  TOOL("stethoscope",     NULL,   1, 0, 0, 0,  25,  4,    75, IRON, HI_METAL),
X  TOOL("tinning kit",     NULL,   1, 0, 0, 0,  15,100,    30, IRON, HI_METAL),
X  TOOL("tin opener",      NULL,   1, 0, 0, 0,  35,  4,    30, IRON, HI_METAL),
X  TOOL("can of grease",   NULL,   1, 0, 0, 1,  15, 15,    20, IRON, HI_METAL),
X! TOOL("figurine",        NULL,   1, 0, 1, 0,  15, 50,    80, MINERAL, HI_MINERAL),
X  TOOL("magic marker",    NULL,   1, 0, 1, 1,  15,  2,    50, PLASTIC, RED),
X+ TOOL("Hitchhiker's Guide To The Galaxy", "highly-complicated electronic device",
X+ 				0, 0, 0, 0,   0, 42,  1000, IRON, HI_METAL),
X+ TOOL("diode",		"two-wired thing",
X+ 				0, 1, 0, 0,   0,  5,    50, IRON, WHITE),
X+ TOOL("transistor",	"three-wired thing",
X+ 				0, 1, 0, 0,   0,  5,   100, IRON, WHITE),
X+ TOOL("IC",              "many-wired thing",
X+ 				0, 1, 0, 0,   0,  5,  5000, IRON, WHITE),
X+ TOOL("pack of floppies",	"box containing little plastic cards",
X+ 				0, 1, 0, 0,   2, 30,   300,PLASTIC, RED),
X+ TOOL("god-o-meter",	"highly-complicated electronic device",
X+ 				0, 0, 0, 0,  18, 50,   500, IRON, HI_METAL),
X+ TOOL("relay",		"four-wired thing",	
X+ 				0, 1, 0, 0,   2,  8,   100, IRON, WHITE),
X+ TOOL("bottle",		NULL,
X+ 				1, 1, 0, 0,  20, 20,     5, GLASS, HI_METAL),
X+ TOOL("chemistry set",	"box of obscure-looking glass devices",
X+ 				0, 0, 0, 1,  50,200,   500, GLASS, ORANGE_COLORED),
X  /* instruments */
X  TOOL("tin whistle",   "whistle",
X! 				0, 0, 0, 0, 73,  3,	10, METAL, HI_METAL),
X  TOOL("magic whistle", "whistle",
X  				0, 0, 1, 0,  30,  3,	10, METAL, HI_METAL),
X  /* "If tin whistles are made out of tin, what do they make foghorns out of?" */
X***************
X*** 556,561 ****
X--- 587,595 ----
X  #else
X  	FOOD("slice of pizza",      75, 1,  3, 0, VEGGY, 250, RED),
X  #endif
X+ #ifdef DOUGLAS_ADAMS
X+ 	FOOD("peanut bag",	     0, 3, 10, 0, VEGGY, 800, HI_ORGANIC),
X+ #endif
X  	/* human food */
X  	FOOD("lump of royal jelly",  0, 1,  2, 0, VEGGY, 200, YELLOW),
X  	FOOD("cream pie",           25, 1, 10, 0, VEGGY, 100, WHITE),
X***************
X*** 564,570 ****
X  	FOOD("pancake",             25, 2,  2, 0, VEGGY, 200, YELLOW),
X  	FOOD("lembas wafer",        20, 2,  5, 0, VEGGY, 800, WHITE),
X  	FOOD("cram ration",         20, 3, 15, 0, VEGGY, 600, HI_ORGANIC),
X! 	FOOD("food ration",        381, 5, 20, 0, VEGGY, 800, HI_ORGANIC),
X  #ifdef ARMY
X  	FOOD("K-ration",             0, 1, 10, 0, VEGGY, 400, HI_ORGANIC),
X  	FOOD("C-ration",             0, 1, 10, 0, VEGGY, 300, HI_ORGANIC),
X--- 598,605 ----
X  	FOOD("pancake",             25, 2,  2, 0, VEGGY, 200, YELLOW),
X  	FOOD("lembas wafer",        20, 2,  5, 0, VEGGY, 800, WHITE),
X  	FOOD("cram ration",         20, 3, 15, 0, VEGGY, 600, HI_ORGANIC),
X! 	FOOD("food ration",        331, 5, 20, 0, VEGGY, 800, HI_ORGANIC),
X! 	FOOD("Hacker's Food",	    50, 1, 20, 0, VEGGY, 800, HI_METAL),
X  #ifdef ARMY
X  	FOOD("K-ration",             0, 1, 10, 0, VEGGY, 400, HI_ORGANIC),
X  	FOOD("C-ration",             0, 1, 10, 0, VEGGY, 300, HI_ORGANIC),
X***************
X*** 578,600 ****
X  		POTION_CLASS, prob, 0, 20, cost, 0, 0, 0, 0, 10, color )
X  POTION("gain ability",      "ruby",           1, 0,          45, 300, RED),
X  POTION("restore ability",   "pink",           1, 0,          45, 100, BRIGHT_MAGENTA),
X! POTION("confusion",         "orange",         1, CONFUSION,  45, 100, ORANGE_COLORED),
X! POTION("blindness",         "yellow",         1, BLINDED,    45, 150, YELLOW),
X  POTION("paralysis",         "emerald",        1, 0,          45, 300, BRIGHT_GREEN),
X  POTION("speed",             "dark green",     1, FAST,       45, 200, GREEN),
X  POTION("levitation",        "cyan",           1, LEVITATION, 45, 200, CYAN),
X! POTION("hallucination",     "sky blue",       1, HALLUC,     45, 100, CYAN),
X! POTION("invisibility",      "brilliant blue", 1, INVIS,      45, 150, BRIGHT_BLUE),
X  POTION("see invisible",     "magenta",        1, SEE_INVIS,  45,  50, MAGENTA),
X! POTION("healing",           "purple-red",     1, 0,          65, 100, MAGENTA),
X  POTION("extra healing",     "puce",           1, 0,          50, 100, RED),
X  POTION("gain level",        "milky",          1, 0,          20, 300, WHITE),
X  POTION("enlightenment",     "swirly",         1, 0,          20, 200, BROWN),
X! POTION("monster detection", "bubbly",         1, 0,          45, 150, WHITE),
X! POTION("object detection",  "smoky",          1, 0,          45, 150, GRAY),
X! POTION("gain energy",       "cloudy",         1, 0,          45, 150, WHITE),
X! POTION("booze",             "brown",          0, 0,          45,  50, BROWN),
X! POTION("sickness",          "fizzy",          0, 0,          45,  50, CYAN),
X  POTION("fruit juice",       "dark",           0, 0,          45,  50, BLACK),
X  POTION("water",             "clear",          0, 0,         125, 100, CYAN),
X  #undef POTION
X--- 613,644 ----
X  		POTION_CLASS, prob, 0, 20, cost, 0, 0, 0, 0, 10, color )
X  POTION("gain ability",      "ruby",           1, 0,          45, 300, RED),
X  POTION("restore ability",   "pink",           1, 0,          45, 100, BRIGHT_MAGENTA),
X! POTION("confusion",         "orange",         1, CONFUSION,  35, 100, ORANGE_COLORED),
X! POTION("blindness",         "yellow",         1, BLINDED,    40, 150, YELLOW),
X  POTION("paralysis",         "emerald",        1, 0,          45, 300, BRIGHT_GREEN),
X  POTION("speed",             "dark green",     1, FAST,       45, 200, GREEN),
X  POTION("levitation",        "cyan",           1, LEVITATION, 45, 200, CYAN),
X! POTION("hallucination",     "sky blue",       1, HALLUC,     35, 100, CYAN),
X! POTION("invisibility",      "brilliant blue", 1, INVIS,      40, 150, BRIGHT_BLUE),
X  POTION("see invisible",     "magenta",        1, SEE_INVIS,  45,  50, MAGENTA),
X! POTION("healing",           "purple-red",     1, 0,          50, 100, MAGENTA),
X  POTION("extra healing",     "puce",           1, 0,          50, 100, RED),
X  POTION("gain level",        "milky",          1, 0,          20, 300, WHITE),
X  POTION("enlightenment",     "swirly",         1, 0,          20, 200, BROWN),
X! POTION("monster detection", "bubbly",         1, 0,          35, 150, WHITE),
X! POTION("object detection",  "smoky",          1, 0,          35, 150, GRAY),
X! POTION("gain energy",       "cloudy",         1, 0,          40, 150, WHITE),
X! POTION("extreme power",	    "turquoise",      1, 0, 	     20, 300, CYAN),
X! POTION("recovery",	    "blood-red",      1, 0,          20, 300, RED),
X! POTION("invulnerability",   "blood-green",    1, 0, 	     10, 500, GREEN),
X! POTION("heroism",	    "tan",	      1, 0,           5, 700, BROWN),
X! POTION("booze",             "brown",          0, 0,          30,  50, BROWN),
X! POTION("sickness",          "fizzy",          0, 0,          35,  50, CYAN),
X! POTION("cyanide",	    "vermillion",     0, 0,           0,  50, RED),
X! POTION("radium",	    "crimson",        0, 0,           0,  50, RED),
X! POTION("Jolt Cola",	    "illegal",	      0, 0,          30,  50, BROWN),
X! POTION("Pan Galactic Gargle Blaster",
X! 			    "shining",	      0, 0,          10, 100, WHITE),
X  POTION("fruit juice",       "dark",           0, 0,          45,  50, BLACK),
X  POTION("water",             "clear",          0, 0,         125, 100, CYAN),
X  #undef POTION
X***************
X*** 603,627 ****
X  #define SCROLL(name,text,mgc,prob,cost) OBJECT( \
X  		OBJ(name,text), BITS(0,1,0,0,mgc,0,0,0,0,0,PAPER), 0, \
X  		SCROLL_CLASS, prob, 0, 5, cost, 0, 0, 0, 0, 6, HI_PAPER )
X! 	SCROLL("enchant armor",         "ZELGO MER",            1,  63,  80),
X! 	SCROLL("destroy armor",         "JUYED AWK YACC",       1,  45, 100),
X  	SCROLL("confuse monster",       "NR 9",                 1,  53, 100),
X  	SCROLL("scare monster",         "XIXAXA XOXAXA XUXAXA", 1,  35, 100),
X  	SCROLL("remove curse",          "PRATYAVAYAH",          1,  65,  80),
X! 	SCROLL("enchant weapon",        "DAIYEN FOOELS",        1,  85,  60),
X  	SCROLL("create monster",        "LEP GEX VEN ZEA",      1,  45, 200),
X  	SCROLL("taming",                "PRIRUTSENIE",          1,  15, 200),
X  	SCROLL("genocide",              "ELBIB YLOH",           1,  15, 300),
X! 	SCROLL("light",                 "VERR YED HORRE",       1,  95,  50),
X  	SCROLL("teleportation",         "VENZAR BORGAVVE",      1,  55, 100),
X  	SCROLL("gold detection",        "THARR",                1,  33, 100),
X  	SCROLL("food detection",        "YUM YUM",              1,  25, 100),
X! 	SCROLL("identify",              "KERNOD WEL",           1, 185,  20),
X  	SCROLL("magic mapping",         "ELAM EBOW",            1,  45, 100),
X! 	SCROLL("amnesia",               "DUAM XNAHT",           1,  35, 200),
X! 	SCROLL("fire",                  "ANDOVA BEGARIN",       1,  48, 100),
X! 	SCROLL("punishment",            "VE FORBRYDERNE",       1,  15, 300),
X  	SCROLL("charging",              "HACKEM MUCHE",         1,  15, 300),
X  	SCROLL(NULL,			"VELOX NEB",            1,   0, 100),
X  	SCROLL(NULL,			"FOOBIE BLETCH",        1,   0, 100),
X  	SCROLL(NULL,			"TEMOV",                1,   0, 100),
X--- 647,678 ----
X  #define SCROLL(name,text,mgc,prob,cost) OBJECT( \
X  		OBJ(name,text), BITS(0,1,0,0,mgc,0,0,0,0,0,PAPER), 0, \
X  		SCROLL_CLASS, prob, 0, 5, cost, 0, 0, 0, 0, 6, HI_PAPER )
X! 	SCROLL("enchant armor",         "ZELGO MER",            1,  53,  80),
X! 	SCROLL("destroy armor",         "JUYED AWK YACC",       1,  20, 100),
X  	SCROLL("confuse monster",       "NR 9",                 1,  53, 100),
X  	SCROLL("scare monster",         "XIXAXA XOXAXA XUXAXA", 1,  35, 100),
X  	SCROLL("remove curse",          "PRATYAVAYAH",          1,  65,  80),
X! 	SCROLL("enchant weapon",        "DAIYEN FOOELS",        1,  80,  60),
X  	SCROLL("create monster",        "LEP GEX VEN ZEA",      1,  45, 200),
X  	SCROLL("taming",                "PRIRUTSENIE",          1,  15, 200),
X  	SCROLL("genocide",              "ELBIB YLOH",           1,  15, 300),
X! 	SCROLL("light",                 "VERR YED HORRE",       1,  65,  50),
X  	SCROLL("teleportation",         "VENZAR BORGAVVE",      1,  55, 100),
X  	SCROLL("gold detection",        "THARR",                1,  33, 100),
X  	SCROLL("food detection",        "YUM YUM",              1,  25, 100),
X! 	SCROLL("identify",              "KERNOD WEL",           1, 180,  20),
X  	SCROLL("magic mapping",         "ELAM EBOW",            1,  45, 100),
X! 	SCROLL("amnesia",               "DUAM XNAHT",           1,  20, 200),
X! 	SCROLL("fire",                  "ANDOVA BEGARIN",       1,  28, 100),
X! 	SCROLL("punishment",            "VE FORBRYDERNE",       1,  10, 300),
X  	SCROLL("charging",              "HACKEM MUCHE",         1,  15, 300),
X+ 	SCROLL("mass murder",		"ENEMATZU MEMALEZU",	1,  20, 200),
X+ 	SCROLL("undo genocide",		"42",			1,   5, 500),
X+ 	SCROLL("reverse identify",	"OH CAPTAIN MY CAPTAIN",1,  40,  30),
X+ /*	SCROLL("wishing",		"TRICK 13",		1,   0, 400), */
X+ 	SCROLL("consecration",		"MAY THE FORCE BE WITH YOU",
X+ 								1,  50, 300),
X+ 	SCROLL("root password detection","XYZZY",		1,   0,1000),
X  	SCROLL(NULL,			"VELOX NEB",            1,   0, 100),
X  	SCROLL(NULL,			"FOOBIE BLETCH",        1,   0, 100),
X  	SCROLL(NULL,			"TEMOV",                1,   0, 100),
X***************
X*** 646,672 ****
X  SPELL("cone of cold",    "dog eared",   10,  8, 5, 1, RAY,       HI_PAPER),
X  SPELL("sleep",           "mottled",     50,  1, 1, 1, RAY,       HI_PAPER),
X  SPELL("finger of death", "stained",      5, 10, 7, 1, RAY,       HI_PAPER),
X! SPELL("light",           "cloth",       45,  1, 1, 1, NODIR,     HI_CLOTH),
X! SPELL("detect monsters", "leather",     45,  1, 1, 1, NODIR,     HI_LEATHER),
X  SPELL("healing",         "white",       40,  2, 1, 1, IMMEDIATE, WHITE),
X  SPELL("knock",           "pink",        36,  1, 1, 1, IMMEDIATE, BRIGHT_MAGENTA),
X! SPELL("force bolt",      "red",         35,  2, 1, 1, IMMEDIATE, RED),
X! SPELL("confuse monster", "orange",      37,  2, 2, 1, IMMEDIATE, ORANGE_COLORED),
X! SPELL("cure blindness",  "yellow",      27,  2, 2, 1, IMMEDIATE, YELLOW),
X  SPELL("slow monster",    "light green", 37,  2, 2, 1, IMMEDIATE, BRIGHT_GREEN),
X! SPELL("wizard lock",     "dark green",  35,  3, 2, 1, IMMEDIATE, GREEN),
X! SPELL("create monster",  "turquoise",   37,  3, 2, 1, NODIR,     BRIGHT_CYAN),
X! SPELL("detect food",     "cyan",        37,  3, 2, 1, NODIR,     CYAN),
X  SPELL("cause fear",      "light blue",  25,  3, 3, 1, NODIR,     BRIGHT_BLUE),
X  SPELL("clairvoyance",    "dark blue",   15,  3, 3, 1, NODIR,     BLUE),
X  SPELL("cure sickness",   "indigo",      32,  3, 3, 1, NODIR,     BLUE),
X  SPELL("charm monster",   "magenta",     20,  3, 3, 1, IMMEDIATE, MAGENTA),
X! SPELL("haste self",      "purple",      33,  4, 3, 1, NODIR,     MAGENTA),
X! SPELL("detect unseen",   "violet",      20,  4, 3, 1, NODIR,     MAGENTA),
X! SPELL("levitation",      "tan",         20,  4, 4, 1, NODIR,     BROWN),
X  SPELL("extra healing",   "plaid",       35,  5, 3, 1, IMMEDIATE, GREEN),
X  SPELL("restore ability", "light brown", 25,  5, 4, 1, NODIR,     BROWN),
X! SPELL("invisibility",    "dark brown",  32,  5, 4, 1, NODIR,     BROWN),
X  SPELL("detect treasure", "gray",        25,  5, 4, 1, NODIR,     GRAY),
X  SPELL("remove curse",    "white",       25,  5, 5, 1, NODIR,     WHITE),
X  SPELL("magic mapping",   "dusty",       18,  7, 5, 1, NODIR,     HI_PAPER),
X--- 697,723 ----
X  SPELL("cone of cold",    "dog eared",   10,  8, 5, 1, RAY,       HI_PAPER),
X  SPELL("sleep",           "mottled",     50,  1, 1, 1, RAY,       HI_PAPER),
X  SPELL("finger of death", "stained",      5, 10, 7, 1, RAY,       HI_PAPER),
X! SPELL("light",           "cloth",       35,  1, 1, 1, NODIR,     HI_CLOTH),
X! SPELL("detect monsters", "leather",     35,  1, 1, 1, NODIR,     HI_LEATHER),
X  SPELL("healing",         "white",       40,  2, 1, 1, IMMEDIATE, WHITE),
X  SPELL("knock",           "pink",        36,  1, 1, 1, IMMEDIATE, BRIGHT_MAGENTA),
X! SPELL("force bolt",      "red",         30,  2, 1, 1, IMMEDIATE, RED),
X! SPELL("confuse monster", "orange",      30,  2, 2, 1, IMMEDIATE, ORANGE_COLORED),
X! SPELL("cure blindness",  "yellow",      24,  2, 2, 1, IMMEDIATE, YELLOW),
X  SPELL("slow monster",    "light green", 37,  2, 2, 1, IMMEDIATE, BRIGHT_GREEN),
X! SPELL("wizard lock",     "dark green",  25,  3, 2, 1, IMMEDIATE, GREEN),
X! SPELL("create monster",  "turquoise",   27,  3, 2, 1, NODIR,     BRIGHT_CYAN),
X! SPELL("detect food",     "cyan",        27,  3, 2, 1, NODIR,     CYAN),
X  SPELL("cause fear",      "light blue",  25,  3, 3, 1, NODIR,     BRIGHT_BLUE),
X  SPELL("clairvoyance",    "dark blue",   15,  3, 3, 1, NODIR,     BLUE),
X  SPELL("cure sickness",   "indigo",      32,  3, 3, 1, NODIR,     BLUE),
X  SPELL("charm monster",   "magenta",     20,  3, 3, 1, IMMEDIATE, MAGENTA),
X! SPELL("haste self",      "purple",      20,  4, 3, 1, NODIR,     MAGENTA),
X! SPELL("detect unseen",   "violet",      15,  4, 3, 1, NODIR,     MAGENTA),
X! SPELL("levitation",      "tan",         18,  4, 4, 1, NODIR,     BROWN),
X  SPELL("extra healing",   "plaid",       35,  5, 3, 1, IMMEDIATE, GREEN),
X  SPELL("restore ability", "light brown", 25,  5, 4, 1, NODIR,     BROWN),
X! SPELL("invisibility",    "dark brown",  27,  5, 4, 1, NODIR,     BROWN),
X  SPELL("detect treasure", "gray",        25,  5, 4, 1, NODIR,     GRAY),
X  SPELL("remove curse",    "white",       25,  5, 5, 1, NODIR,     WHITE),
X  SPELL("magic mapping",   "dusty",       18,  7, 5, 1, NODIR,     HI_PAPER),
X***************
X*** 676,681 ****
X--- 727,734 ----
X  SPELL("teleport away",   "gold",        15,  6, 6, 1, IMMEDIATE, HI_GOLD),
X  SPELL("create familiar", "glittering",  10,  7, 6, 1, NODIR,     WHITE),
X  SPELL("cancellation",    "shining",     15,  8, 7, 1, IMMEDIATE, WHITE),
X+ SPELL("finger",		 "old",		40,  3, 2, 1, IMMEDIATE, HI_PAPER),
X+ SPELL("chemistry",	 "brand-new",	50, 10, 1, 1, NODIR,     HI_PAPER),
X  SPELL(NULL,		 "dull",         0,  0, 0, 1, 0,         HI_PAPER),
X  SPELL(NULL,		 "thin",         0,  0, 0, 1, 0,         HI_PAPER),
X  SPELL(NULL,		 "thick",        0,  0, 0, 1, 0,         HI_PAPER),
X***************
X*** 690,718 ****
X  #define WAND(name,typ,prob,cost,mgc,dir,metal,color) OBJECT( \
X  		OBJ(name,typ), BITS(0,0,1,0,mgc,1,0,0,0,dir,metal), 0, WAND_CLASS, \
X  		prob, 0, 7, cost, 0, 0, 0, 0, 30, color )
X! WAND("light",           "glass",        95, 100, 1, NODIR,     GLASS,    HI_GLASS),
X! WAND("secret door detection", "balsa",  50, 150, 1, NODIR,     WOOD,     HI_WOOD),
X  WAND("create monster",  "maple",        45, 200, 1, NODIR,     WOOD,     HI_WOOD),
X  WAND("wishing",         "pine",          5, 500, 1, NODIR,     WOOD,     HI_WOOD),
X  WAND("nothing",         "oak",          25, 100, 0, IMMEDIATE, WOOD,     HI_WOOD),
X! WAND("striking",        "ebony",        75, 150, 1, IMMEDIATE, WOOD,     HI_WOOD),
X  WAND("make invisible",  "marble",       45, 150, 1, IMMEDIATE, MINERAL,  HI_MINERAL),
X  WAND("slow monster",    "tin",          55, 150, 1, IMMEDIATE, METAL,    HI_METAL),
X! WAND("speed monster",   "brass",        55, 150, 1, IMMEDIATE, COPPER,   HI_COPPER),
X! WAND("undead turning",  "copper",       55, 150, 1, IMMEDIATE, COPPER,   HI_COPPER),
X  WAND("polymorph",       "silver",       45, 200, 1, IMMEDIATE, SILVER,   HI_SILVER),
X  WAND("cancellation",    "platinum",     45, 200, 1, IMMEDIATE, PLATINUM, WHITE),
X  WAND("teleportation",   "iridium",      45, 200, 1, IMMEDIATE, METAL,    BRIGHT_CYAN),
X  WAND("opening",         "zinc",         25, 150, 1, IMMEDIATE, METAL,    HI_METAL),
X  WAND("locking",         "aluminum",     25, 150, 1, IMMEDIATE, METAL,    HI_METAL),
X! WAND("probing",         "uranium",      30, 150, 1, IMMEDIATE, METAL,    HI_METAL),
X  WAND("digging",         "iron",         55, 150, 1, RAY,       IRON,     HI_METAL),
X  WAND("magic missile",   "steel",        50, 150, 1, RAY,       IRON,     HI_METAL),
X  WAND("fire",            "hexagonal",    40, 175, 1, RAY,       IRON,     HI_METAL),
X  WAND("cold",            "short",        40, 175, 1, RAY,       IRON,     HI_METAL),
X! WAND("sleep",           "runed",        50, 175, 1, RAY,       IRON,     HI_METAL),
X  WAND("death",           "long",          5, 500, 1, RAY,       IRON,     HI_METAL),
X  WAND("lightning",       "curved",       40, 175, 1, RAY,       IRON,     HI_METAL),
X  WAND(NULL,		"forked",        0, 150, 1, 0,         WOOD,     HI_WOOD),
X  WAND(NULL,		"spiked",        0, 150, 1, 0,         IRON,     HI_METAL),
X  WAND(NULL,		"jeweled",       0, 150, 1, 0,         IRON,     HI_MINERAL),
X--- 743,777 ----
X  #define WAND(name,typ,prob,cost,mgc,dir,metal,color) OBJECT( \
X  		OBJ(name,typ), BITS(0,0,1,0,mgc,1,0,0,0,dir,metal), 0, WAND_CLASS, \
X  		prob, 0, 7, cost, 0, 0, 0, 0, 30, color )
X! WAND("light",           "glass",        75, 100, 1, NODIR,     GLASS,    HI_GLASS),
X! WAND("secret door detection", "balsa",  30, 150, 1, NODIR,     WOOD,     HI_WOOD),
X  WAND("create monster",  "maple",        45, 200, 1, NODIR,     WOOD,     HI_WOOD),
X  WAND("wishing",         "pine",          5, 500, 1, NODIR,     WOOD,     HI_WOOD),
X  WAND("nothing",         "oak",          25, 100, 0, IMMEDIATE, WOOD,     HI_WOOD),
X! WAND("striking",        "ebony",        25, 150, 1, IMMEDIATE, WOOD,     HI_WOOD),
X  WAND("make invisible",  "marble",       45, 150, 1, IMMEDIATE, MINERAL,  HI_MINERAL),
X  WAND("slow monster",    "tin",          55, 150, 1, IMMEDIATE, METAL,    HI_METAL),
X! WAND("speed monster",   "brass",        45, 150, 1, IMMEDIATE, COPPER,   HI_COPPER),
X! WAND("undead turning",  "copper",       45, 150, 1, IMMEDIATE, COPPER,   HI_COPPER),
X  WAND("polymorph",       "silver",       45, 200, 1, IMMEDIATE, SILVER,   HI_SILVER),
X  WAND("cancellation",    "platinum",     45, 200, 1, IMMEDIATE, PLATINUM, WHITE),
X  WAND("teleportation",   "iridium",      45, 200, 1, IMMEDIATE, METAL,    BRIGHT_CYAN),
X  WAND("opening",         "zinc",         25, 150, 1, IMMEDIATE, METAL,    HI_METAL),
X  WAND("locking",         "aluminum",     25, 150, 1, IMMEDIATE, METAL,    HI_METAL),
X! WAND("probing",         "uranium",      15, 150, 1, IMMEDIATE, METAL,    HI_METAL),
X  WAND("digging",         "iron",         55, 150, 1, RAY,       IRON,     HI_METAL),
X  WAND("magic missile",   "steel",        50, 150, 1, RAY,       IRON,     HI_METAL),
X  WAND("fire",            "hexagonal",    40, 175, 1, RAY,       IRON,     HI_METAL),
X  WAND("cold",            "short",        40, 175, 1, RAY,       IRON,     HI_METAL),
X! WAND("sleep",           "runed",        45, 175, 1, RAY,       IRON,     HI_METAL),
X  WAND("death",           "long",          5, 500, 1, RAY,       IRON,     HI_METAL),
X  WAND("lightning",       "curved",       40, 175, 1, RAY,       IRON,     HI_METAL),
X+ WAND("acid",		"bent",		40, 200, 1, RAY,       METAL,	 HI_METAL),
X+ WAND("draining",	"octogonal",	40, 250, 1, IMMEDIATE, IRON,	 HI_METAL),
X+ WAND("wonder",		"elven-lettered",
X+ 					50, 150, 1, NODIR,     IRON,	 HI_METAL),
X+ WAND("bugging",		"wooden",
X+ 					 0, 200, 1, NODIR,     WOOD,	 HI_METAL),
X  WAND(NULL,		"forked",        0, 150, 1, 0,         WOOD,     HI_WOOD),
X  WAND(NULL,		"spiked",        0, 150, 1, 0,         IRON,     HI_METAL),
X  WAND(NULL,		"jeweled",       0, 150, 1, 0,         IRON,     HI_MINERAL),
X*** /tmp/tmp.1285	Sat May 28 21:18:08 1994
X--- ./src/options.c	Wed Mar 30 16:52:09 1994
X***************
X*** 288,295 ****
X  	obj_descr[SLIME_MOLD].oc_name = "fruit";
X  #endif
X  	if (flags.female)  {	/* should have been set in NETHACKOPTIONS */
X  		roles[2] = "Cavewoman";
X! 		roles[6] = "Priestess";
X  	}
X  }
X  
X--- 288,297 ----
X  	obj_descr[SLIME_MOLD].oc_name = "fruit";
X  #endif
X  	if (flags.female)  {	/* should have been set in NETHACKOPTIONS */
X+ #ifndef SCO_CC
X  		roles[2] = "Cavewoman";
X! 		roles[7] = "Priestess";
X! #endif
X  	}
X  }
X  
X***************
X*** 1141,1147 ****
X  }
X  
X  /* data for option_help() */
X! static const char *opt_intro[] = {
X  	"",
X  	"                 NetHack Options Help:",
X  	"",
X--- 1143,1149 ----
X  }
X  
X  /* data for option_help() */
X! static /* const */ char *opt_intro[] = {
X  	"",
X  	"                 NetHack Options Help:",
X  	"",
X***************
X*** 1181,1187 ****
X--- 1183,1193 ----
X      } else
X  #endif
X  	Sprintf(buf, "Set options as OPTIONS=<options> in %s;", configfile);
X+ #ifdef SCO_CC
X+     opt_intro[CONFIG_SLOT][0] = 0;
X+ #else
X      opt_intro[CONFIG_SLOT] = (const char *) buf;
X+ #endif
X      for (i = 0; opt_intro[i]; i++)
X  	putstr(datawin, 0, opt_intro[i]);
X  
X*** /tmp/tmp.1285	Sat May 28 21:18:09 1994
X--- ./src/mplayer.c	Sat Mar 19 15:14:07 1994
X***************
X*** 154,159 ****
X--- 154,162 ----
X  		case PM_ELF:
X  		    weapon = ELVEN_SHORT_SWORD;
X  		    break;
X+ 		case PM_GEEK:
X+ 		    weapon = ELECTRIC_SWORD;
X+ 		    break;
X  		case PM_HEALER:
X  		    weapon = SCALPEL;
X  		    break;
X*** /tmp/tmp.1285	Sat May 28 21:18:11 1994
X--- ./src/objnam.c	Sun May 22 15:09:54 1994
X***************
X*** 5,11 ****
X  #include "hack.h"
X  
X  /* "an uncursed partly eaten guardian naga hatchling corpse" */
X! #define	PREFIX	50
X  #define SCHAR_LIM 127
X  
X  STATIC_DCL char *FDECL(strprepend,(char *,const char *));
X--- 5,13 ----
X  #include "hack.h"
X  
X  /* "an uncursed partly eaten guardian naga hatchling corpse" */
X! /* "an uncursed 100% eaten ravenous bugblatter beast of traal corpse" */
X! /* #define	PREFIX	50 */
X! #define	PREFIX	120		/* just to be sure */
X  #define SCHAR_LIM 127
X  
X  STATIC_DCL char *FDECL(strprepend,(char *,const char *));
X***************
X*** 415,421 ****
X  {
X  	boolean ispoisoned = FALSE;
X  	char prefix[PREFIX];
X! 	char tmpbuf[PREFIX+1];
X  	/* when we have to add something at the start of prefix instead of the
X  	 * end (Strcat is used on the end)
X  	 */
X--- 417,423 ----
X  {
X  	boolean ispoisoned = FALSE;
X  	char prefix[PREFIX];
X! 	char tmpbuf[PREFIX+1],tmpbuf2[PREFIX+1];
X  	/* when we have to add something at the start of prefix instead of the
X  	 * end (Strcat is used on the end)
X  	 */
X***************
X*** 440,445 ****
X--- 442,451 ----
X  	} else
X  		Strcpy(prefix, "a ");
X  
X+ 	if (obj->selfmade) {
X+ 		Strcat(prefix,"selfmade ");
X+ 	}
X+ 
X  	if (obj->bknown && 
X  	    obj->oclass != GOLD_CLASS &&
X  	    (obj->otyp != POT_WATER || !objects[POT_WATER].oc_name_known
X***************
X*** 561,568 ****
X  		}
X  		break;
X  	case FOOD_CLASS:
X! 		if (obj->oeaten)
X! 		    Strcat(prefix, "partly eaten ");
X  		if (obj->otyp == CORPSE) {
X  		    if (type_is_pname(&mons[obj->corpsenm])) {
X  			Sprintf(prefix, "%s ",
X--- 567,582 ----
X  		}
X  		break;
X  	case FOOD_CLASS:
X! 		if (obj->oeaten) {
X! /*		    Strcat(prefix, "partly eaten "); */
X! 		    float total;
X! 		    total = (float) (obj->otyp == CORPSE) ? 
X! 			mons[obj->corpsenm].cnutrit :
X! 			objects[obj->otyp].oc_nutrition ;
X! 		    sprintf(tmpbuf2,"%2.0f%% eaten ",
X! 			100.0 - (100.0 * ((float) obj->oeaten) / total));
X! 		    Strcat(prefix, tmpbuf2);
X! 		}
X  		if (obj->otyp == CORPSE) {
X  		    if (type_is_pname(&mons[obj->corpsenm])) {
X  			Sprintf(prefix, "%s ",
X***************
X*** 1075,1081 ****
X  	/* find "cloves of garlic", "worthless pieces of blue glass" */
X  	if ((p = strstri(bp, "s of ")) != 0) {
X  	    /* but don't singularize "gauntlets" */
X! 	    if (BSTRNCMP(bp, p-8, "gauntlet", 8))
X  		while ((*p = *(p+1)) != 0) p++;
X  	    return bp;
X  	}
X--- 1089,1099 ----
X  	/* find "cloves of garlic", "worthless pieces of blue glass" */
X  	if ((p = strstri(bp, "s of ")) != 0) {
X  	    /* but don't singularize "gauntlets" */
X! 	    if (BSTRNCMP(bp, p-8, "gauntlet", 8)
X! #ifdef DOUGLAS_ADAMS
X! 		&& BSTRNCMP(bp, p-7, "peanuts", 7)
X! #endif
X! 	    )
X  		while ((*p = *(p+1)) != 0) p++;
X  	    return bp;
X  	}
X*** /tmp/tmp.1285	Sat May 28 21:18:12 1994
X--- ./src/pickup.c	Sat Apr 23 14:36:14 1994
X***************
X*** 15,20 ****
X--- 15,22 ----
X  static void FDECL(check_here, (BOOLEAN_P));
X  static int FDECL(pickup_object, (struct obj *,struct obj *));
X  static boolean FDECL(mbag_explodes, (struct obj *,int));
X+ STATIC_PTR void FDECL(collapse_box_waveform, (struct obj *));
X+ STATIC_PTR int FDECL(in_container_,(struct obj *,BOOLEAN_P));
X  STATIC_PTR int FDECL(in_container,(struct obj *));
X  STATIC_PTR int FDECL(ck_bag,(struct obj *));
X  STATIC_PTR int FDECL(out_container,(struct obj *));
X***************
X*** 652,660 ****
X  static NEARDATA struct obj *current_container;
X  #define Icebox (current_container->otyp == ICE_BOX)
X  
X  STATIC_PTR int
X! in_container(obj)
X  register struct obj *obj;
X  {
X  	register struct obj *gold;
X  	boolean is_gold = (obj->otyp == GOLD_PIECE);
X--- 654,673 ----
X  static NEARDATA struct obj *current_container;
X  #define Icebox (current_container->otyp == ICE_BOX)
X  
X+ int put_into_container(struct obj *container, struct obj *obj)
X+ {
X+ 	struct obj *t;
X+ 
X+ 	t = current_container;
X+ 	current_container = container;
X+ 	in_container_(obj,FALSE);
X+ 	current_container = t;
X+ }
X+ 
X  STATIC_PTR int
X! in_container_(obj,invobj)
X  register struct obj *obj;
X+ boolean invobj;
X  {
X  	register struct obj *gold;
X  	boolean is_gold = (obj->otyp == GOLD_PIECE);
X***************
X*** 718,724 ****
X  		return 0;
X  	}
X  
X! 	freeinv(obj);
X  
X  	if (is_gold) {	/* look for other gold within the container */
X  		for (gold = current_container->cobj; gold; gold = gold->nobj)
X--- 731,737 ----
X  		return 0;
X  	}
X  
X! 	if (invobj) freeinv(obj);
X  
X  	if (is_gold) {	/* look for other gold within the container */
X  		for (gold = current_container->cobj; gold; gold = gold->nobj)
X***************
X*** 736,742 ****
X  	current_container->owt = weight(current_container);
X  
X  	Strcpy(buf, the(xname(current_container)));
X! 	You("put %s into %s.", doname(obj), buf);
X  
X  	if (floor_container && costly_spot(u.ux, u.uy)) {
X  		sellobj_state(TRUE);
X--- 749,755 ----
X  	current_container->owt = weight(current_container);
X  
X  	Strcpy(buf, the(xname(current_container)));
X! 	if (invobj) You("put %s into %s.", doname(obj), buf);
X  
X  	if (floor_container && costly_spot(u.ux, u.uy)) {
X  		sellobj_state(TRUE);
X***************
X*** 780,785 ****
X--- 793,805 ----
X  }
X  
X  STATIC_PTR int
X+ in_container(obj)
X+ register struct obj *obj;
X+ {
X+ 	in_container_(obj,TRUE);
X+ }
X+ 
X+ STATIC_PTR int
X  ck_bag(obj)
X  struct obj *obj;
X  {
X***************
X*** 864,869 ****
X--- 884,911 ----
X  	return 1;
X  }
X  
X+ STATIC_PTR void
X+ collapse_box_waveform(obj)
X+ register struct obj *obj;
X+ {
X+ 	struct obj *otmp;
X+ 
X+ 	pline("The waveform of the box collapses. ");
X+ 	obj->otyp = LARGE_BOX;
X+ 	
X+ 	otmp = mksobj(POT_RADIUM,TRUE,FALSE);
X+ 	put_into_container(obj,otmp);
X+ 
X+ 	if (rn2(100) > 50) {
X+ 		otmp = mkcorpstat_(CORPSE,PM_SCHROEDINGER_S_CAT,TRUE);
X+ 		put_into_container(obj,otmp);
X+ 	} else {
X+ 		otmp = mksobj(POT_CYANIDE,TRUE,FALSE);
X+ 		put_into_container(obj,otmp);
X+ 		makemon(&mons[PM_SCHROEDINGER_S_CAT],u.ux,u.uy);
X+ 	}
X+ }
X+ 
X  /* for getobj: allow counts, allow all types, expect food */
X  static NEARDATA const char frozen_food[] =
X  	{ ALLOW_COUNT, ALL_CLASSES, FOOD_CLASS, 0 };
X***************
X*** 882,887 ****
X--- 924,931 ----
X  	long loss = 0L;
X  	register struct monst *shkp;
X  
X+ 	if (obj->otyp == SCHROEDINGER_S_BOX) collapse_box_waveform(obj);
X+ 
X  	current_container = obj;	/* for use by in/out_container */
X  	if (current_container->olocked) {
X  		pline("%s seems to be locked.", The(xname(current_container)));
X***************
X*** 889,899 ****
X  		return 0;
X  	}
X  	/* Count the number of contained objects. Sometimes toss objects if */
X! 	/* a cursed magic bag.						    */
X  	prev = (struct obj *) 0;
X  	for (curr = obj->cobj; curr; curr = otmp) {
X  	    otmp = curr->nobj;
X! 	    if (Is_mbag(obj) && obj->cursed && !rn2(13)) {
X  		if (curr->known)
X  		    pline("%s to have vanished!", The(aobjnam(curr,"seem")));
X  		else
X--- 933,944 ----
X  		return 0;
X  	}
X  	/* Count the number of contained objects. Sometimes toss objects if */
X! 	/* a cursed magic bag or a bag of digestion			    */
X  	prev = (struct obj *) 0;
X  	for (curr = obj->cobj; curr; curr = otmp) {
X  	    otmp = curr->nobj;
X! 	    if ((Is_mbag(obj) && obj->cursed && !rn2(13)) || 
X! 		 (obj->otyp == BAG_OF_DIGESTION && !rn2(obj->blessed ? 20 : (obj->cursed ? 2 : 10)))) {
X  		if (curr->known)
X  		    pline("%s to have vanished!", The(aobjnam(curr,"seem")));
X  		else
X*** /tmp/tmp.1285	Sat May 28 21:18:13 1994
X--- ./src/pager.c	Wed Mar 30 16:54:06 1994
X***************
X*** 570,576 ****
X  }
X  
X  /* data for help_menu() */
X! static const char *help_menu_items[] = {
X  	"Information available:",
X  	"",
X  	"a.  Long description of the game and commands.",
X--- 570,576 ----
X  }
X  
X  /* data for help_menu() */
X! static /* const */ char *help_menu_items[] = {
X  	"Information available:",
X  	"",
X  	"a.  Long description of the game and commands.",
X*** /tmp/tmp.1285	Sat May 28 21:18:16 1994
X--- ./src/pray.c	Wed Apr 13 19:22:55 1994
X***************
X*** 38,43 ****
X--- 38,44 ----
X  {'C', /* Babylonian */		"Anu", "Ishtar", "Anshar"},
X  {'E', /* Elven */		"Solonor Thelandira",
X  					"Aerdrie Faenya", "Erevan Ilesere"},
X+ {'G', /* Computerian */		"UNIX", "the PDP-7", "VMS"},
X  {'H', /* Greek */		"Athena", "Hermes", "Poseidon"},
X  {'K', /* Celtic */		"Lugh", "Brigit", "Macannan Mac Lir"},
X  {'P', /* Chinese */		"Shan Lai Ching", "Chih Sung-tzu", "Huan Ti"},
X***************
X*** 660,666 ****
X  		    verbalize("Thou shalt be my Envoy of Balance!");
X  		    if (uwep && uwep->oartifact == ART_VORPAL_BLADE) {
X  			obj = uwep;	/* to be blessed and rustproofed */
X! 			Your("%s goes snicker-snack!", xname(obj));
X  			obj->dknown = TRUE;
X  		    } else if (!exist_artifact(LONG_SWORD,
X  						artiname(ART_VORPAL_BLADE))) {
X--- 661,669 ----
X  		    verbalize("Thou shalt be my Envoy of Balance!");
X  		    if (uwep && uwep->oartifact == ART_VORPAL_BLADE) {
X  			obj = uwep;	/* to be blessed and rustproofed */
X! 			/* Your("%s goes snicker-snack!", xname(obj)); */
X! 			/* snicker-snack is now for Jabberwock decapitation. */
X! 			You("take your vorpal sword in hand.");
X  			obj->dknown = TRUE;
X  		    } else if (!exist_artifact(LONG_SWORD,
X  						artiname(ART_VORPAL_BLADE))) {
X*** /tmp/tmp.1285	Sat May 28 21:18:18 1994
X--- ./src/potion.c	Sun May 22 20:05:04 1994
X***************
X*** 182,187 ****
X--- 182,202 ----
X  	}
X  }
X  
X+ /* For game balance we don't always want a bottle made. */
X+ static void make_bottle(boolean certain)
X+ {
X+ 	struct obj *otmp;
X+ 
X+ 	if (certain || !rn2(8)) {
X+ 		otmp = mksobj(BOTTLE,TRUE,TRUE);
X+ /* We do not transfer curses/blessings, assuming that these a property
X+ ** of the actual potion, not the bottle. */
X+ 		otmp->cursed = otmp->blessed = FALSE;
X+ 		You("are left with the empty bottle.");
X+ 		hold_another_object(otmp,"Oops! It drops to the floor!",(const char *) 0, (const char *) 0);
X+ 	}
X+ }
X+ 
X  static void
X  ghost_from_bottle()
X  {
X***************
X*** 189,194 ****
X--- 204,210 ----
X  
X  	if (!mtmp) {
X  		pline("This bottle turns out to be empty.");
X+ 		make_bottle(TRUE);
X  		return;
X  	}
X  	if (Blind) {
X***************
X*** 201,206 ****
X--- 217,223 ----
X  	    You("are frightened to death, and unable to move.");
X  	nomul(-3);
X  	nomovemsg = "You regain your composure.";
X+ 	make_bottle(FALSE);
X  }
X  
X  int
X***************
X*** 269,274 ****
X--- 286,292 ----
X  			docall(otmp);
X  	}
X  	useup(otmp);
X+ 	make_bottle(FALSE);
X  	return(1);
X  }
X  
X***************
X*** 278,283 ****
X--- 296,323 ----
X  {
X  	register int i, ii, isdone;
X  
X+ 	if (otmp->selfmade && !(5-rnl(6))) {
X+ 		pline("That potion was bad!");
X+ 		switch(rnl(5)) {
X+ 			case 0:
X+ 			case 1:
X+ 			case 2:
X+ 				break;
X+ 
X+ 			case 3:
X+ 				if (Poison_resistance) break;
X+ 				You("feel sick.");
X+ 				losehp(rnd(20),"bad chemical knowledge",KILLED_BY);
X+ 				break;
X+ 
X+ 			case 4:
X+ 				make_sick((long)(10+rn2(10)),FALSE);
X+ 				u.usick_cause = "a bad potion";
X+ 				break;
X+ 		}
X+ 		return(-1);
X+ 	}
X+ 
X  	switch(otmp->otyp){
X  	case POT_RESTORE_ABILITY:
X  	case SPE_RESTORE_ABILITY:
X***************
X*** 382,389 ****
X  		break;
X  	case POT_ENLIGHTENMENT:
X  		if(otmp->cursed) {
X  			unkn++;
X! 			You("have an uneasy feeling...");
X  		} else {
X  			if (otmp->blessed) {
X  				(void) adjattrib(A_INT, 1, FALSE);
X--- 422,438 ----
X  		break;
X  	case POT_ENLIGHTENMENT:
X  		if(otmp->cursed) {
X+ 			int x,y;
X+ 
X  			unkn++;
X! /* I've got a better idea :-) */
X! /*			You("have an uneasy feeling..."); */
X! 			You("feel enlightened.");
X! 			for (x=1;x<COLNO;x++) {
X! 				for (y=0;y<ROWNO;y++) {
X! 					levl[x][y].lit = TRUE;
X! 				}
X! 			}			
X  		} else {
X  			if (otmp->blessed) {
X  				(void) adjattrib(A_INT, 1, FALSE);
X***************
X*** 659,664 ****
X--- 708,826 ----
X  			exercise(A_WIS, TRUE);
X  		}
X  		break;
X+ 	case POT_CYANIDE:
X+ 		pline("CN(-) + HCl <==> HCN + Cl(-) ");
X+ 		killer_format = KILLED_BY;
X+ 		killer = "drinking cyanide";
X+ 		done(DIED);
X+ 		break;
X+ 	case POT_RADIUM:
X+ 		pline("This was radioactive radium!");
X+ 		make_sick(10,TRUE);
X+ 		break;
X+ 	case POT_JOLT_COLA:
X+ 		You("are jolted back to your senses.");
X+ 		if (otmp->cursed) {
X+ 			You("feel bad.");
X+ 			u.uhp -= rn2(10);
X+ 			if (u.uhp < 1) u.uhp = 1;	/* can't kill you */
X+ 		} else {
X+ 			if (Hallucination) make_hallucinated(0L,FALSE,0L);
X+ 			if (otmp->blessed && !rn2(10)) {
X+ 				pluslvl();
X+ 			} else {
X+ 				u.uhp += 5;
X+ 				if (u.uhp > u.uhpmax) {
X+ 					if (otmp->blessed) u.uhpmax++;
X+ 					u.uhp = u.uhpmax;
X+ 				}
X+ 			}
X+ 		}
X+ 		break;
X+ 
X+ 	case POT_EXTREME_POWER:
X+ 	{
X+ 		int x;
X+ 
X+ 		x = rn2(otmp->blessed ? 20 : 10) + 1;
X+ 		if (otmp->cursed) {
X+ 			unkn++;
X+ 			You("have a bad taste in your mouth.");
X+ 			if (x >= u.uhp) x = u.uhp-1;
X+ 			losehp(x,"",0);		/* can't kill you */
X+ 			u.uhpmax -= x;
X+ 			break;
X+ 		}
X+ 		You("feel %spowerful!",otmp->blessed ? "very " : "");
X+ 		u.uhp += x;
X+ 		u.uhpmax += x;
X+ 	} break;
X+ 
X+ 	case POT_RECOVERY: 
X+ 		if (otmp->cursed) {
X+ 			unkn++;
X+ 			You("decide to recover yourself.");
X+ 			pline("Nothing happens, however.");
X+ 			break;
X+ 		}	
X+ 		if (otmp->blessed) u.uhpmax += rn2(5);
X+ 		u.uhp = u.uhpmax;
X+ 		You("feel much, much better.");
X+ 		break;
X+ 
X+ 	case POT_INVULNERABILITY:
X+ 		if (otmp->cursed) {
X+ 			You("feel invulnerable for a moment.");
X+ 			break;
X+ 		}	
X+ 		You("are surrounded by a shimmering light.");
X+ 		u.uinvul_time = 5 + rn2(otmp->blessed ? 20 : 10);
X+ 		u.uinvulnerable = TRUE;
X+ 		break;
X+ 
X+ 	case POT_HEROISM: {
X+ 		/* a total overhaul ... */
X+ 		int time;
X+ 
X+ 		if (otmp->cursed) {
X+ 			You("feel cowardly.");
X+ 			if (u.uinvul_time > 1) u.uinvul_time = 1;
X+ 			break;
X+ 		}
X+ 		You("are surrounded by a strong shimmering aura.");
X+ 		time = 10 + rn2(otmp->blessed ? 20 : 10);
X+ 		u.uinvul_time += time;
X+ 		u.uinvulnerable = TRUE;
X+ 		Fast += time;
X+ 		HSee_invisible += time;
X+ 		if (!rnl(3)) make_blinded(Blinded+time,TRUE);	
X+ 		u.uhpmax += rn2(5);
X+ 		u.uhp = u.uhpmax;
X+ 		} break;
X+ 
X+ 	case POT_PAN_GALACTIC_GARGLE_BLASTE:
X+ 		You("feel like having your brain smashed out by a slice of lemon wrapped");
X+ 		pline("around a large gold brick.");
X+ 		if (otmp->cursed || !rn2(4)) {
X+ 			adjattrib(A_INT,-1,-1);
X+ 		}
X+ 		make_confused(HConfusion + d(6,7));	/* 6d7 is max. 42 */
X+ 		if (otmp->blessed || !rn2(4) || u.ulycn != -1) {
X+ 			if (u.ulycn != -1) {
X+ 				You("feel purified.");
X+ 				if (uasmon == &mons[u.ulycn]) {
X+ 					rehumanize();
X+ 				}
X+ 				u.ulycn = -1;
X+ 			}
X+ 			You("feel remembered of %s.",
X+ 			Hallucination ? "Zaphod Breeblebrox"
X+ 				      : "very, very strong liquor.");
X+ 			if (u.uhp < u.uhpmax) u.uhp++;
X+ 			pline("Strangely, you feel better that before.");
X+ 		}
X+ 		break;	
X+ 				
X  	default:
X  		impossible("What a funny potion! (%u)", otmp->otyp);
X  		return(0);
X***************
X*** 769,774 ****
X--- 931,955 ----
X  		if (canseemon(mon))
X  		    pline("%s looks rather ill.", Monnam(mon));
X  		break;
X+ 	case POT_CYANIDE:
X+ 		if (!resist(mon,POTION_CLASS,0,NOTELL)) {
X+ 			if (mon->mhp < 10) {
X+ 				killed(mon);
X+ 			} else {
X+ 				mon->mhp = 1;
X+ 			}
X+ 		}
X+ 		if (canseemon(mon)) {
X+ 			pline("%s looks very, very sick.", Monnam(mon));
X+ 		}
X+ 		break;
X+ 	case POT_RADIUM:
X+ 		if (!resist(mon,POTION_CLASS,0,NOTELL)) {
X+ 			mon->mhp /= 4;
X+ 			if (mon->mhp < 1) killed(mon);
X+ 		}
X+ 		if (canseemon(mon)) pline("%s looks very sick.",Monnam(mon));
X+ 		break;
X  	case POT_CONFUSION:
X  	case POT_BOOZE:
X  		if(!resist(mon, POTION_CLASS, 0, NOTELL))  mon->mconf = TRUE;
X***************
X*** 888,893 ****
X--- 1069,1088 ----
X  			exercise(A_CON, FALSE);
X  		}
X  		break;
X+ 	case POT_CYANIDE:
X+ 		if (u.uhp < 10) {
X+ 			/* DEATH */
X+ 			losehp(10,"a potion of cyanide",KILLED_BY);
X+ 		} else {
X+ 			u.uhp = 1;
X+ 		}
X+ 		You("feel very, very sick!");
X+ 		break;
X+ 	case POT_RADIUM:
X+ 		u.uhp /= 4;
X+ 		if (u.uhp < 1) u.uhp = 1;		/* be generous */
X+ 		You("feel very sick!");
X+ 		break;
X  	case POT_HALLUCINATION:
X  		You("have a momentary vision.");
X  		break;
X***************
X*** 956,961 ****
X--- 1151,1157 ----
X  		case POT_HALLUCINATION:
X  		case POT_BLINDNESS:
X  		case POT_CONFUSION:
X+ 		case POT_CYANIDE:
X  			if (o2->otyp == POT_HEALING ||
X  			    o2->otyp == POT_EXTRA_HEALING)
X  				return TRUE;
X***************
X*** 965,971 ****
X  			if (o2->otyp == POT_SICKNESS ||
X  			    o2->otyp == POT_HALLUCINATION ||
X  			    o2->otyp == POT_BLINDNESS ||
X! 			    o2->otyp == POT_CONFUSION)
X  				return TRUE;
X  	}
X  
X--- 1161,1168 ----
X  			if (o2->otyp == POT_SICKNESS ||
X  			    o2->otyp == POT_HALLUCINATION ||
X  			    o2->otyp == POT_BLINDNESS ||
X! 			    o2->otyp == POT_CONFUSION ||
X! 			    o2->otyp == POT_CYANIDE)
X  				return TRUE;
X  	}
X  
X***************
X*** 1021,1026 ****
X--- 1218,1231 ----
X  			obj->otyp = SCR_BLANK_PAPER;
X  			return TRUE;
X  		} else break;
X+ 	    case TOOL_CLASS:
X+ 		if (obj->otyp == BOTTLE) {
X+ 			pline("The bottle%s filled with water.",obj->quan > 1 ? "s are" : " is");
X+ 			obj->oclass = POTION_CLASS;
X+ 			obj->otyp = POT_WATER;
X+ 			/* retain curses/blessings etc. */
X+ 			return(TRUE);
X+ 		} else break;
X  	    case SPBOOK_CLASS:
X  		if (obj->otyp != SPE_BLANK_PAPER) {
X  
X***************
X*** 1235,1240 ****
X--- 1440,1446 ----
X  
X  	if(!(mtmp = makemon(&mons[PM_DJINNI], u.ux, u.uy))){
X  		pline("It turns out to be empty.");
X+ 		make_bottle(TRUE);
X  		return;
X  	}
X  
X***************
X*** 1265,1270 ****
X--- 1471,1477 ----
X  	default: verbalize("You disturbed me, fool!");
X  		break;
X  	}
X+ 	make_bottle(FALSE);
X  }
X  
X  #endif /* OVLB */
X*** /tmp/tmp.1285	Sat May 28 21:18:21 1994
X--- ./src/questpgr.c	Thu Mar 24 12:58:50 1994
X***************
X*** 182,187 ****
X--- 182,193 ----
X  	  PM_URUK_HAI, PM_OGRE, S_ORC, S_OGRE,
X  	  ART_PALANTIR_OF_WESTERNESSE },
X  
X+ /* G */ { "the Microsoft headquarter",
X+ 	  "the Development Team's location",
X+ 	  PM_THE_DEV_TEAM, PM_BILL_GATES, PM_HACKER,
X+ 	  PM_BUG, PM_GRID_BUG,S_XAN,S_EYE,
X+ 	  ART_NETHACK_SOURCES },
X+ 	
X  /* H */ { "the Temple of Coeus",
X  	  "the Temple of Epidaurus",
X  	  PM_HIPPOCRATES, PM_CYCLOPS, PM_ATTENDANT,
X***************
X*** 244,263 ****
X  	    case 'B':	return(1);
X  	    case 'C':	return(2);
X  	    case 'E':	return((unsigned)(3+flags.female));
X! 	    case 'H':	return(5);
X! 	    case 'K':	return(6);
X! 	    case 'P':	return(7);
X! 	    case 'R':	return(8);
X! 	    case 'S':	return(9);
X  #ifdef TOURIST
X! 	    case 'T':	return(10);
X  	    case 'V':	return(11);
X  	    case 'W':	return(12);
X  	    default:	return(13);
X- #else
X- 	    case 'V':	return(10);
X- 	    case 'W':	return(11);
X- 	    default:	return(12);
X  #endif
X  	}
X  }
X--- 250,270 ----
X  	    case 'B':	return(1);
X  	    case 'C':	return(2);
X  	    case 'E':	return((unsigned)(3+flags.female));
X! 	    case 'G':	return(5);
X! 	    case 'H':	return(6);
X! 	    case 'K':	return(7);
X! 	    case 'P':	return(8);
X! 	    case 'R':	return(9);
X! 	    case 'S':	return(10);
X  #ifdef TOURIST
X! 	    case 'T':	return(11);
X! 	    case 'V':	return(12);
X! 	    case 'W':	return(13);
X! 	    default:	return(14);
X! #else
X  	    case 'V':	return(11);
X  	    case 'W':	return(12);
X  	    default:	return(13);
X  #endif
X  	}
X  }
X***************
X*** 369,374 ****
X--- 376,387 ----
X  	    case 'L':	str = "lawful";
X  			break;
X  	    case 'x':	str = Blind ? "sense" : "see";
X+ 			break;
X+ 	    case 'm':	str = (pl_character[0] == 'E') ? "Eru Iluvatar" : 
X+ 		((pl_character[0] == 'G') ? "team of Babbage, Zuse and Turing": 
X+ 		"Marduk" );
X+ 			break;
X+ 	    case 'M':	str = (pl_character[0] == 'G') ? "Them" : "Him";
X  			break;
X  	    case '%':	str = "%";
X  			break;
X*** /tmp/tmp.1285	Sat May 28 21:18:23 1994
X--- ./src/rumors.c	Sun Dec 26 22:07:05 1993
X***************
X*** 131,149 ****
X  outrumor(truth, cookie)
X  int truth; /* 1=true, -1=false, 0=either */
X  boolean cookie;
X  {
X  	static const char fortune_msg[] =
X  		"This cookie has a scrap of paper inside.";
X  	const char *line;
X  
X  	if (cookie && Blind) {
X! 		pline(fortune_msg);
X  		pline("What a pity that you cannot read it!");
X  		return;
X  	}
X  	line = getrumor(truth);
X  	if (!*line)
X  		line = "NetHack rumors file closed for renovation.";
X  	if (cookie) {
X  		pline(fortune_msg);
X  		pline("It reads:");
X--- 131,175 ----
X  outrumor(truth, cookie)
X  int truth; /* 1=true, -1=false, 0=either */
X  boolean cookie;
X+ #ifdef DOUGLAS_ADAMS
X+ /* or magic cookie (no pun intended) 42 for HHGTTG */
X+ #endif
X  {
X  	static const char fortune_msg[] =
X  		"This cookie has a scrap of paper inside.";
X  	const char *line;
X  
X  	if (cookie && Blind) {
X! #ifdef DOUGLAS_ADAMS
X! 		if (cookie != 42)
X! #endif
X! 			pline(fortune_msg);
X  		pline("What a pity that you cannot read it!");
X  		return;
X  	}
X  	line = getrumor(truth);
X  	if (!*line)
X  		line = "NetHack rumors file closed for renovation.";
X+ 
X+ #ifdef DOUGLAS_ADAMS
X+ 	switch(cookie) {
X+ 		case 42:		/* HHGttG */
X+ 			pline(line);
X+ 			break;
X+ 
X+ 		case 0:			/* Oracle */
X+ 			pline("True to her word, the Oracle casually says: ");
X+ 			verbalize("%s",line);
X+ 			exercise(A_WIS, TRUE);
X+ 			break;
X+ 
X+ 		default:		/* cookie */
X+ 			pline(fortune_msg);
X+ 			pline("It reads:");
X+ 			pline("%s", line);
X+ 			break;
X+ 	}
X+ #else
X  	if (cookie) {
X  		pline(fortune_msg);
X  		pline("It reads:");
X***************
X*** 155,160 ****
X--- 181,187 ----
X  		verbalize("%s", line);
X  		exercise(A_WIS, TRUE);
X  	}
X+ #endif
X  }
X  
X  static void
X*** /tmp/tmp.1285	Sat May 28 21:18:24 1994
X--- ./src/read.c	Thu Apr 21 17:30:00 1994
X***************
X*** 25,30 ****
X--- 25,31 ----
X  static void FDECL(p_glow1,(struct obj *));
X  static void FDECL(p_glow2,(struct obj *,const char *));
X  static void FDECL(forget,(BOOLEAN_P));
X+ static void FDECL(undo_genocide,(void));
X  
X  #endif /* OVLB */
X  
X***************
X*** 52,57 ****
X--- 53,60 ----
X  	    outrumor(bcsign(scroll), TRUE);
X  	    useup(scroll);
X  	    return(1);
X+ 	} else if (scroll->otyp == PACK_OF_FLOPPIES) {
X+ 		use_floppies(scroll);
X  	} else if (scroll->oclass != SCROLL_CLASS
X  		&& scroll->oclass != SPBOOK_CLASS) {
X  	    pline(silly_thing_to, "read");
X***************
X*** 282,287 ****
X--- 285,291 ----
X  	    case HORN_OF_PLENTY:
X  	    case BAG_OF_TRICKS:
X  	    case CAN_OF_GREASE:
X+ 	    case CHEMISTRY_SET:
X  		if (is_cursed) stripspe(obj);
X  		else if (is_blessed) {
X  		    if (obj->spe <= 10)
X***************
X*** 823,828 ****
X--- 827,951 ----
X  		}
X  		punish(sobj);
X  		break;
X+ 	case SCR_MASS_MURDER:
X+ 		known = TRUE;
X+ 		You("have found a scroll of mass murder.");
X+ 		do_genocide(sobj->cursed ? 4 : 5);
X+ 		break;
X+ 	case SCR_UNDO_GENOCIDE:
X+ 		known = TRUE;
X+ 		You("have found a scroll of undo genocide.");
X+ 		undo_genocide();
X+ 		break;
X+ 	case SCR_REVERSE_IDENTIFY:
X+ 		known = TRUE;
X+ 		You("have found a scroll of reverse identify.");
X+ 		{
X+ 			int i,j,n;
X+ 			long oldgold;
X+ 			char buf[BUFSZ];
X+ 
X+ 			n = (sobj->blessed) ? rn2(5)+1 : 1;
X+ 			for (i=0;i<n;i++) {
X+ 				for (j=0;j<=5;j++) {
X+ 					if (j >= 5) {
X+ 						pline(thats_enough_tries);
X+ 						goto revid_end;
X+ 					}
X+ 					getlin("What do you want to identify?",buf);
X+ 					if (buf[0] == 0) continue;
X+ 					oldgold = u.ugold;
X+ 					otmp = readobjnam(buf);
X+ 					if (u.ugold != oldgold) {
X+ pline("Don't you date cheat me again! -- Your fault!");
X+ 						/* Make them pay */
X+ 						u.ugold = oldgold / 2;
X+ 						continue;
X+ 					}
X+ 					if (otmp == &zeroobj || otmp == (struct obj *) 0) {
X+ 						pline("That doesn't exist.");
X+ 						continue;
X+ 					}
X+ 					break;
X+ 				}
X+ 				strcpy(buf,xname(otmp));
X+ 				makeknown(otmp->otyp);
X+ 				pline("The %s is a %s.",buf,xname(otmp));
X+ 				if (otmp->oartifact) artifact_unexist(otmp);
X+ 			}
X+ 		}
X+ revid_end:
X+ 		break;
X+ 
X+ /*
X+ 	case SCR_WISHING: 
X+ 		known = TRUE;
X+ 		pline("You have found a scroll of wishing!");
X+ 		if (sobj->cursed || (!sobj->blessed && Luck+rn2(5) < 0)) {
X+ 			pline("Unfortuantely, nothing happens.");
X+ 			break;
X+ 		}
X+ 		makewish();
X+ 		break;
X+ */
X+ 
X+ 	case SCR_CONSECRATION:
X+ 	{
X+ 		aligntyp al,ual;
X+ 		char c;
X+ 		char a;
X+ 		int x,y;
X+ 
X+ 		if (Is_astralevel(&u.uz)) {
X+ 			You("sense the wrath of the gods.");
X+ 			u.ualign.record--;
X+ 			break;
X+ 		}
X+ 		if (levl[u.ux][u.uy].typ != ROOM) {
X+ 			pline("You feel claustrophobic!");
X+ 			break;
X+ 		}
X+ 		known = TRUE;
X+ 		pline("You build an altar.");
X+ 		if (is_demon(uasmon)) {
X+ 			al = A_CHAOTIC;
X+ 		} else if (sobj->cursed) {
X+ 			al = A_NONE;
X+ 		} else if (sobj->blessed) {
X+ 			ual = u.ualign.type;
X+ 			a = (ual==A_LAWFUL) ? 'l' : ((ual==A_NEUTRAL) ? 'n' : 'c');
X+ 			c = yn_function("Which alignment do you want to consectrate the altar to?","lncm",a);
X+ 			al = A_NONE;
X+ 			switch (c) {
X+ 				case 'l':
X+ 					al = A_LAWFUL;		break;
X+ 				case 'n':
X+ 					al = A_NEUTRAL;		break;
X+ 				case 'c':
X+ 					al = A_CHAOTIC;		break;
X+ 				case 'm':
X+ 					al = A_NONE;		break;
X+ 			}
X+ 		} else {
X+ 			al = u.ualign.type;
X+ 		}
X+ 		pline("Pronouncing arcane formulas, you consecrate the altar to %s.",(al == A_NONE) ? "Moloch" : align_gname(al));
X+ 		levl[u.ux][u.uy].typ = ALTAR;
X+ 		levl[u.ux][u.uy].altarmask = Align2amask(al);
X+ 		x = (al == ual) ? 1 : ((al == A_NONE) ? -3 : -1);
X+ 		y = -rn2(x * 100);
X+ 		u.ualign.record += x;
X+ 		u.ublesscnt += y;
X+ 		if (u.ublesscnt < 0) u.ublesscnt = 0;
X+ 		pline("You feel %s%scomfortable.",(abs(x)>1) ? "very " : "", (x<0) ? "un" : "");
X+ 	} break;
X+ 
X+ 	case SCR_ROOT_PASSWORD_DETECTION:
X+ 		You("sense the computer's root password.");
X+ 		pline("It is: %s.", sobj->cursed ? "jsdfljfdsh" : (sobj->blessed ? "memalezu" : "xyzzy"));
X+ 		pline("(No warranty implied.)");
X+ 		break;
X+ 
X  	default:
X  		impossible("What weird effect is this? (%u)", sobj->otyp);
X  	}
X***************
X*** 1019,1032 ****
X  
X  #define REALLY 1
X  #define PLAYER 2
X  void
X  do_genocide(how)
X  int how;
X  /* 0 = no genocide; create monsters (cursed scroll) */
X  /* 1 = normal genocide */
X  /* 3 = forced genocide of player */
X  {
X! 	char buf[BUFSZ];
X  	register int	i, j, killplayer = 0;
X  	register struct permonst *ptr;
X  	register struct monst *mtmp, *mtmp2;
X--- 1142,1157 ----
X  
X  #define REALLY 1
X  #define PLAYER 2
X+ #define MASS_MURDER 4
X  void
X  do_genocide(how)
X  int how;
X  /* 0 = no genocide; create monsters (cursed scroll) */
X  /* 1 = normal genocide */
X  /* 3 = forced genocide of player */
X+ /* x|4 = mass murder; no genocide */
X  {
X! 	char buf[BUFSZ],bx[BUFSZ];
X  	register int	i, j, killplayer = 0;
X  	register struct permonst *ptr;
X  	register struct monst *mtmp, *mtmp2;
X***************
X*** 1041,1048 ****
X  		    pline(thats_enough_tries);
X  		    return;
X  		}
X! 		getlin("What monster do you want to genocide? [type the name]",
X! 			buf);
X  
X  		i = name_to_mon(buf);
X  		if(i == -1 || (mons[i].geno & G_GENOD)) {
X--- 1166,1173 ----
X  		    pline(thats_enough_tries);
X  		    return;
X  		}
X! 		sprintf(bx,"What monster do you want to %s? [type the name]",(how & MASS_MURDER) ? "mass murder" : "genocide");
X! 		getlin(bx,buf);
X  
X  		i = name_to_mon(buf);
X  		if(i == -1 || (mons[i].geno & G_GENOD)) {
X***************
X*** 1081,1091 ****
X  	    }
X  	} else Strcpy(buf,ptr->mname); /* make sure we have standard singular */
X  	if (how & REALLY) {
X! 	    pline("Wiped out all %s.", makeplural(buf));
X  	    if(killplayer) {
X  		u.uhp = -1;
X  		killer_format = KILLED_BY_AN;
X! 		killer = "genocide spell";
X  #ifdef POLYSELF
X  	/* Polymorphed characters will die as soon as they're rehumanized. */
X  		if(u.umonnum >= 0)	You("feel dead inside.");
X--- 1206,1216 ----
X  	    }
X  	} else Strcpy(buf,ptr->mname); /* make sure we have standard singular */
X  	if (how & REALLY) {
X! 	    pline("%s all %s.",(how & MASS_MURDER) ? "Killed" : "Wiped out", makeplural(buf));
X  	    if(killplayer) {
X  		u.uhp = -1;
X  		killer_format = KILLED_BY_AN;
X! 		killer = (how & MASS_MURDER) ? "mass murder spell " : "genocide spell";
X  #ifdef POLYSELF
X  	/* Polymorphed characters will die as soon as they're rehumanized. */
X  		if(u.umonnum >= 0)	You("feel dead inside.");
X***************
X*** 1097,1103 ****
X  #ifdef POLYSELF
X  	    else if (ptr == uasmon) rehumanize();
X  #endif
X! 	    ptr->geno |= G_GENOD;
X  	    for(mtmp = fmon; mtmp; mtmp = mtmp2) {
X  		mtmp2 = mtmp->nmon;
X  		if(mtmp->data == ptr)
X--- 1222,1228 ----
X  #ifdef POLYSELF
X  	    else if (ptr == uasmon) rehumanize();
X  #endif
X! 	    if (!(how & MASS_MURDER)) ptr->geno |= G_GENOD;
X  	    for(mtmp = fmon; mtmp; mtmp = mtmp2) {
X  		mtmp2 = mtmp->nmon;
X  		if(mtmp->data == ptr)
X***************
X*** 1115,1120 ****
X--- 1240,1272 ----
X  			dealloc_obj(otmp);
X  		}
X  	    }
X+ 	}
X+ }
X+ 
X+ void undo_genocide(void)
X+ {
X+ 	int i;
X+ 	char buf[BUFSZ];
X+ 	int mn;
X+ 
X+ 	for (i=0;i<5;i++) {
X+ 		if (i >= 5) {
X+ 			pline(thats_enough_tries);
X+ 			return;
X+ 		}
X+ 		getlin("Which monster do you want to ungenocide [type the name]",buf);
X+ 		mn = name_to_mon(buf);
X+ 		if (mn == -1) {
X+ 			pline("Such creatures do not exist in this world.");
X+ 			continue;
X+ 		}
X+ 		if (!(mons[mn].geno & G_GENOD)) {
X+ 			pline("This creature has not been genocided.");
X+ 			continue;
X+ 		}
X+ 		mons[mn].geno &= ~G_GENOD;
X+ 		pline("The race of %s now exist again.",makeplural(buf));
X+ 		break;
X  	}
X  }
X  
X*** /tmp/tmp.1285	Sat May 28 21:18:29 1994
X--- ./src/shk.c	Sun May 22 19:33:48 1994
X***************
X*** 2287,2292 ****
X--- 2287,2293 ----
X  		break;
X  	}
X  	if (obj->oartifact) tmp *= 25L;
X+ 	if (obj->otyp == IC && obj->cursed) tmp /= 20L;	
X  	return tmp;
X  }
X  
X*** /tmp/tmp.1285	Sat May 28 21:18:32 1994
X--- ./src/sp_lev.c	Wed Mar 30 22:14:05 1994
X***************
X*** 10,16 ****
X   */
X  
X  #include "hack.h"
X! /*#define DEBUG 	/* uncomment to enable code debugging */
X  
X  #ifdef DEBUG
X  # ifdef WIZARD
X--- 10,16 ----
X   */
X  
X  #include "hack.h"
X! /* #define DEBUG 	/* uncomment to enable code debugging */
X  
X  #ifdef DEBUG
X  # ifdef WIZARD
X***************
X*** 714,719 ****
X--- 714,732 ----
X  	mktrap(t->type, 1, (struct mkroom*) 0, &tm);
X  }
X  
X+ #ifdef DEBUG
X+ static void
X+ dump_monster(monster *m)
X+ {
X+ 	if (!m) {
X+ 		debugpline("MONSTER: (null)");
X+ 		return;
X+ 	}
X+ 
X+ 	debugpline("MONSTER %lx:'%c',\"%s\",(%i,%i),\"%s\"",m,m->class,mons[m->id].mname,m->x,m->y,m->name ? m->name : "");
X+ }
X+ #endif
X+ 
X  /* 
X   * Create a monster in a room.
X   */
X***************
X*** 729,734 ****
X--- 742,751 ----
X  	aligntyp	amask;
X  	struct permonst *pm;
X  
X+ #ifdef DEBUG
X+ 	dump_monster(m);
X+ #endif
X+ 
X  	if (m->class >= 0) {
X  	    class = (char) def_char_to_monclass((char)m->class);
X  	    if (class == MAXMCLASSES) goto bad_class;
X***************
X*** 736,742 ****
X  	    class = (char) def_char_to_monclass(rmonst[- m->class - 1]);
X  	    if (class == MAXMCLASSES) {
X  bad_class:
X! 		panic("create_monster: unknown monster class '%c'", m->class);
X  	    }
X  	} else
X  	    class = 0;
X--- 753,765 ----
X  	    class = (char) def_char_to_monclass(rmonst[- m->class - 1]);
X  	    if (class == MAXMCLASSES) {
X  bad_class:
X! #ifdef DEBUG
X! 		impossible
X! #else
X! 		panic
X! #endif
X! 			("create_monster (%i,%i) : unknown monster class '%c'",m->x,m->y,m->class);
X! 		return;
X  	    }
X  	} else
X  	    class = 0;
X***************
X*** 858,863 ****
X--- 881,899 ----
X  	}
X  }
X  
X+ #ifdef DEBUG
X+ static void
X+ dump_object(o)
X+ object *o;
X+ {
X+ 	if (!o) {
X+ 		debugpline("OBJECT: (null)");
X+ 		return;
X+ 	}
X+ 	debugpline("OBJECT %lx: '%c',\"%s\",(%i,%i)",o,o->class,OBJ_NAME(objects[o->id]),o->x,o->y);
X+ }
X+ #endif
X+ 
X  /* 
X   * Create an object in a room.
X   */
X***************
X*** 871,876 ****
X--- 907,916 ----
X  	schar	x,y;
X  	char	c;
X  
X+ #ifdef DEBUG
X+ 	dump_object(o);
X+ #endif
X+ 
X  	x = o->x; y = o->y;
X  	if (croom)
X  	    get_room_loc(&x, &y, croom);
X***************
X*** 895,902 ****
X  	     */
X  	    char oclass = (char) def_char_to_objclass(c);
X  
X! 	    if (oclass == MAXOCLASSES)
X! 		panic("create_object:  unexpected object class '%c'",c);
X  	    otmp = mkobj_at(oclass, x, y, TRUE);
X  	}
X  
X--- 935,949 ----
X  	     */
X  	    char oclass = (char) def_char_to_objclass(c);
X  
X! 	    if (oclass == MAXOCLASSES) {
X! #ifdef DEBUG
X! 		impossible
X! #else
X! 		panic
X! #endif
X! 			("create_object:  unexpected object class '%c'",c);
X! 		return;
X! 	    }
X  	    otmp = mkobj_at(oclass, x, y, TRUE);
X  	}
X  
X***************
X*** 1330,1335 ****
X--- 1377,1385 ----
X  		case BEEHIVE:
X  		case MORGUE:
X  		case BARRACKS:
X+ #ifdef DOUGLAS_ADAMS
X+ 		case DOUGROOM:
X+ #endif
X  		    fill_zoo(croom);
X  		    break;
X  	    }
X***************
X*** 1339,1344 ****
X--- 1389,1397 ----
X  		level.flags.has_vault = TRUE;
X  		break;
X  	    case ZOO:
X+ #ifdef DOUGLAS_ADAMS
X+ 	    case DOUGROOM:
X+ #endif
X  		level.flags.has_zoo = TRUE;
X  		break;
X  	    case COURT:
X***************
X*** 1489,1494 ****
X--- 1542,1552 ----
X  		/* The traps */
X  		for(i = 0; i<r->ntrap; i++)
X  		    create_trap(r->traps[i], aroom);
X+ 
X+ #ifdef DEBUG
X+ 		debugpline("%i monsters, %i objects",r->nmonster,r->nobject);
X+ 		more();
X+ #endif
X  
X  		/* The monsters */
X  		for(i = 0; i<r->nmonster; i++)
X*** /tmp/tmp.1285	Sat May 28 21:18:35 1994
X--- ./src/sounds.c	Sun May 22 19:48:28 1994
X***************
X*** 317,322 ****
X--- 317,351 ----
X  
X  #ifdef OVLB
X  
X+ /* The Quantum Mechanic names were removed from 3.1 -- this is copied from
X+ ** 3.0. I honestly do not know why the DevTeam (tm) did that.
X+ **
X+ ** Whoever takes this out again shall be dodged by a UNIX demon until
X+ ** time_t's warp-around.
X+ */
X+ 
X+ /* for the connoisseurs ... */
X+ static const char *Qmen[] = {
X+ 	"Max",      /* Born */
X+ 	"Wolfgang", /* Pauli */
X+ 	"Louis",    /* de Broglie */
X+ 	"Erwin",    /* Schroedinger */
X+ 	"Werner",   /* Heisenberg */
X+ 	"Niels",    /* Bohr */
X+ 	"Paul",     /* Dirac */
X+ 	"Pascual",  /* Jordan */
X+ 	"Dick",     /* Feynman */
X+ 	"Sam" }; /* Beckett ("Oh, boy." :-) */
X+ 
X+ struct monst *
X+ qname(mtmp)
X+ struct monst *mtmp;
X+ {
X+ 	return(christen_monst(mtmp, Qmen[rn2(SIZE(Qmen))]));
X+ }
X+ 
X+ /* end of copy from 3.0 */
X+ 
X  static int
X  domonnoise(mtmp)
X  register struct monst *mtmp;
X***************
X*** 581,586 ****
X--- 610,653 ----
X  		pline_msg = "is busy reading a copy of Sandman #9.";
X  	    else verbalize("Who do you think you are, War?");
X  	    break;
X+ #ifdef DOUGLAS_ADAMS
X+ 	case MS_DOUGLAS_ADAMS:
X+             {
X+ 	   	 static const char *da_msgs[] = {
X+ 			"42",
X+ 			"It's a nice day today!",
X+ 			"Have a Pan Galactic Gargle Blaster?",
X+ 			"Time is relative. Lunchtime doubly so.",
X+ 			"This is some strange usage of the word 'safe' that I wasn't aware of.",
X+ 		};
X+ 		if (mtmp->data == &mons[PM_MARVIN]) {
X+ 			verbalize("Life, loathe it or ignore it, you cannot like it.");
X+ 		} else if (mtmp->data == &mons[PM_DEEP_THOUGHT]) {
X+ 			verbalize("6*9 = 42");
X+ 		} else if (mtmp->data == &mons[PM_EDDIE]) {
X+ 			verbalize("I'm feeling just great, guys!");
X+ 		} else {
X+ 			verbalize(da_msgs[rn2(SIZE(da_msgs))]);
X+ 		}
X+ 	    }
X+ 	    break;
X+ #endif
X+ 	case MS_PUPIL:
X+ 		pupil_sound(mtmp);
X+ 		break;
X+ 
X+ 	case MS_TEACHER:
X+ 		teacher_sound(mtmp);
X+ 		break;
X+ 
X+ 	case MS_PRINCIPAL:
X+ 		principal_sound(mtmp);
X+ 		break;
X+ 
X+ 	case MS_SMITH:
X+ 		smith_selling(mtmp);
X+ 		break;
X+ 
X  #endif /* SOUNDS */
X      }
X  
X*** /tmp/tmp.1285	Sat May 28 21:18:36 1994
X--- ./src/spell.c	Thu May 12 13:31:24 1994
X***************
X*** 20,25 ****
X--- 20,38 ----
X  static char FDECL(spellet, (int));
X  static char NDECL(dospellmenu);
X  
X+ boolean
X+ spell_known(int sbook_id)
X+ {
X+ 	int i;
X+ 
X+ 	i = 0;
X+ 	while (spl_book[i].sp_id != NO_SPELL && i < MAXSPELL) {
X+ 		if (spl_book[i].sp_id == sbook_id) return(TRUE);
X+ 		i++;
X+ 	}
X+ 	return(FALSE);
X+ }
X+ 
X  static void
X  cursed_book(lev)
X  	register int	lev;
X***************
X*** 224,230 ****
X  			/* ie 1 or 2 uses w/ most potent */
X  			spl_book[i].sp_uses = rn1(1,9-spl_book[i].sp_lev);
X  			book->spestudied++;
X! 			You("add the spell to your repertoire.");
X  			makeknown((int)booktype);
X  			break;
X  		}
X--- 237,243 ----
X  			/* ie 1 or 2 uses w/ most potent */
X  			spl_book[i].sp_uses = rn1(1,9-spl_book[i].sp_lev);
X  			book->spestudied++;
X! 			You("add the %s to your repertoire.",booktype == SPE_CHEMISTRY ? "knowledge" : "spell");
X  			makeknown((int)booktype);
X  			break;
X  		}
X***************
X*** 281,286 ****
X--- 294,300 ----
X  	case SPE_EXTRA_HEALING:
X  	case SPE_CHARM_MONSTER:
X  	case SPE_CLAIRVOYANCE:
X+ 	case SPE_FINGER:
X  /* level 4 spells */
X  	case SPE_LEVITATION:
X  	case SPE_RESTORE_ABILITY:
X***************
X*** 306,311 ****
X--- 320,326 ----
X  	case SPE_CANCELLATION:
X  	case SPE_FINGER_OF_DEATH:
X  	case SPE_BOOK_OF_THE_DEAD:
X+ 	case SPE_CHEMISTRY:
X  		delay = -8 * objects[booktype].oc_delay;
X  		break;
X  /* impossible */
X***************
X*** 417,422 ****
X--- 432,442 ----
X  	boolean confused = (Confusion != 0);
X  	struct obj *pseudo;
X  
X+ 	if (spellid(spell) == SPE_CHEMISTRY) {
X+ 		You("call upon your chemical knowledge. Nothing happens.");
X+ 		return(1);
X+ 	}
X+ 
X  	/* note that trying to cast it decrements the # of uses,    */
X  	/* even if the mage does not have enough food/energy to use */
X  	/* the spell */
X***************
X*** 496,501 ****
X--- 516,522 ----
X  	case SPE_DETECT_UNSEEN:
X  	case SPE_HEALING:
X  	case SPE_EXTRA_HEALING:
X+ 	case SPE_FINGER:
X  		if (!(objects[pseudo->otyp].oc_dir == NODIR)) {
X  			if (atme) u.dx = u.dy = u.dz = 0;
X  			else (void) getdir(NULL);
X***************
X*** 607,613 ****
X  	add_menu(tmpwin, 0, 0, "");
X  
X  	for(i = 1; i <= maxs; i++) {
X! 		Sprintf(buf, "%c %c %s (%d)",
X  			spellet(i), (spelluses(i)) ? '-' : '*',
X  			spellname(i), spellev(i));
X  		add_menu(tmpwin, spellet(i), 0, buf);
X--- 628,635 ----
X  	add_menu(tmpwin, 0, 0, "");
X  
X  	for(i = 1; i <= maxs; i++) {
X! 		Sprintf(buf, spellid(i) == SPE_CHEMISTRY ? "%c %c %s" 
X!                                                          : "%c %c %s (%d)",
X  			spellet(i), (spelluses(i)) ? '-' : '*',
X  			spellname(i), spellev(i));
X  		add_menu(tmpwin, spellet(i), 0, buf);
X*** /tmp/tmp.1285	Sat May 28 21:18:37 1994
X--- ./src/timeout.c	Sun Apr 10 16:00:04 1994
X***************
X*** 112,117 ****
X--- 112,124 ----
X  	    else if(u.uluck < baseluck && (nostone || time_luck > 0))
X  		u.uluck++;
X  	}
X+ 	if (u.uinvul_time) {
X+ 		u.uinvul_time--;
X+ 		if (u.uinvul_time <= 0) {
X+ 			u.uinvulnerable = FALSE;	
X+ 			You("feel fragile!");
X+ 		}
X+ 	}
X  	if(u.uinvulnerable) return; /* things past this point could kill you */
X  	if(Stoned) stoned_dialogue();
X  	if(Vomiting) vomiting_dialogue();
X*** /tmp/tmp.1285	Sat May 28 21:18:38 1994
X--- ./src/topten.c	Sat Mar 19 15:14:20 1994
X***************
X*** 32,40 ****
X  #define dealloc_ttentry(ttent) free((genericptr_t) (ttent))
X  #define	NAMSZ	10
X  #define	DTHSZ	60
X! #define	PERSMAX	 3		/* entries per name/uid per char. allowed */
X! #define	POINTSMIN	1	/* must be > 0 */
X! #define	ENTRYMAX	100	/* must be >= 10 */
X  
X  #if !defined(MICRO) && !defined(MAC)
X  #define	PERS_IS_UID		/* delete for PERSMAX per name; now per uid */
X--- 32,40 ----
X  #define dealloc_ttentry(ttent) free((genericptr_t) (ttent))
X  #define	NAMSZ	10
X  #define	DTHSZ	60
X! #define	PERSMAX	 10		/* entries per name/uid per char. allowed */
X! #define	POINTSMIN	314	/* must be > 0 */
X! #define	ENTRYMAX	420	/* must be >= 10 */
X  
X  #if !defined(MICRO) && !defined(MAC)
X  #define	PERS_IS_UID		/* delete for PERSMAX per name; now per uid */
X***************
X*** 682,687 ****
X--- 682,688 ----
X  		case 'B': return PM_BARBARIAN;
X  		case 'C': return (fem ? PM_CAVEWOMAN : PM_CAVEMAN);
X  		case 'E': return PM_ELF;
X+ 		case 'G': return PM_GEEK;
X  		case 'H': return PM_HEALER;
X  		case 'F':	/* accept old Fighter class */
X  		case 'K': return PM_KNIGHT;
X*** /tmp/tmp.1285	Sat May 28 21:18:40 1994
X--- ./src/trap.c	Fri Mar 18 22:27:14 1994
X***************
X*** 2608,2614 ****
X  		    else if(obj == uright) Ring_gone(obj);
X  		    else if(obj == ublindf) Blindf_off(obj);
X  		    else if(obj == uwep) uwepgone();
X! 		    if(Lifesaved
X  #ifdef WIZARD
X  		       || wizard
X  #endif
X--- 2608,2614 ----
X  		    else if(obj == uright) Ring_gone(obj);
X  		    else if(obj == ublindf) Blindf_off(obj);
X  		    else if(obj == uwep) uwepgone();
X! 		    if(Lifesaved || Second_chance
X  #ifdef WIZARD
X  		       || wizard
X  #endif
X*** /tmp/tmp.1285	Sat May 28 21:18:41 1994
X--- ./src/u_init.c	Fri Apr 15 20:46:20 1994
X***************
X*** 29,35 ****
X  			/* roles[2] and [6] are changed for females */
X  			/* in all cases, the corresponding male and female */
X  			/* roles must start with the same letter */
X! 	"Archeologist", "Barbarian", "Caveman", "Elf", "Healer", "Knight",
X  	"Priest", "Rogue", "Samurai",
X  #ifdef TOURIST
X  	"Tourist",
X--- 29,35 ----
X  			/* roles[2] and [6] are changed for females */
X  			/* in all cases, the corresponding male and female */
X  			/* roles must start with the same letter */
X! 	"Archeologist", "Barbarian", "Caveman", "Elf", "Geek", "Healer", "Knight",
X  	"Priest", "Rogue", "Samurai",
X  #ifdef TOURIST
X  	"Tourist",
X***************
X*** 85,90 ****
X--- 85,101 ----
X  	{ 0, 0, 0, 0, 0, 0 }
X  };
X  
X+ static struct trobj Geek[] = {
X+ 	{ ELECTRIC_SWORD, 1, WEAPON_CLASS, 1, 1, 1 },
X+ #define G_IC 1
X+ 	{ IC, 0, TOOL_CLASS, 7, 1, UNDEF_BLESS },	/* quan is var. */
X+ 	{ GAUNTLETS_OF_TYPING, 1, ARMOR_CLASS, 1, 1, UNDEF_BLESS },
X+ 	{ POT_JOLT_COLA, 0, POTION_CLASS, 4, 1, UNDEF_BLESS },
X+ 	{ HACKER_S_FOOD, 0, FOOD_CLASS, 2, 1, UNDEF_BLESS },
X+ 	{ PACK_OF_FLOPPIES, 0, TOOL_CLASS, 1, 1, UNDEF_BLESS },
X+ 	{ 0, 0, 0, 0, 0, 0 }
X+ };
X+ 
X  static struct trobj Healer[] = {
X  	{ SCALPEL, 0, WEAPON_CLASS, 1, 1, UNDEF_BLESS },
X  	{ LEATHER_GLOVES, 1, ARMOR_CLASS, 1, 1, UNDEF_BLESS },
X***************
X*** 308,314 ****
X  	u.ugrave_arise = -1;
X  
X  	u.ulevel = 0;	/* set up some of the initial attributes */
X! 	u.uhp = u.uhpmax = newhp();
X  	adjabil(0,1);
X  	u.ulevel = 1;
X  
X--- 319,325 ----
X  	u.ugrave_arise = -1;
X  
X  	u.ulevel = 0;	/* set up some of the initial attributes */
X! 	u.uhp = u.uhpmax = u.uhplast = newhp();
X  	adjabil(0,1);
X  	u.ulevel = 1;
X  
X***************
X*** 403,408 ****
X--- 414,431 ----
X  		knows_object(ELVEN_SHIELD);
X  		knows_object(ELVEN_BOOTS);
X  		knows_object(ELVEN_CLOAK);
X+ 		break;
X+ 	case 'G':
X+ 		u.umonster = PM_GEEK;
X+ 		Geek[G_IC].trquan = rn2(7) + 1;
X+ 		ini_inv(Geek);
X+ 		knows_class(WEAPON_CLASS);
X+ 		knows_class(ARMOR_CLASS);
X+ 		knows_object(PACK_OF_FLOPPIES);
X+ 		knows_object(POT_JOLT_COLA);
X+ 		knows_object(DIODE);
X+ 		knows_object(TRANSISTOR);
X+ 		knows_object(IC);
X  		break;
X  	case 'H':
X  		u.umonster = PM_HEALER;
X*** /tmp/tmp.1285	Sat May 28 21:18:42 1994
X--- ./src/wield.c	Fri Apr 15 22:48:07 1994
X***************
X*** 178,184 ****
X  	}
X  
X  	if(uwep->otyp == CRYSKNIFE && amount < 0) {
X! 		uwep->otyp = WORM_TOOTH;
X  		Your("weapon seems duller now.");
X  		return(1);
X  	}
X--- 178,184 ----
X  	}
X  
X  	if(uwep->otyp == CRYSKNIFE && amount < 0) {
X! 		if (!uwep->oartifact) uwep->otyp = WORM_TOOTH;
X  		Your("weapon seems duller now.");
X  		return(1);
X  	}
X*** /tmp/tmp.1285	Sat May 28 21:18:43 1994
X--- ./src/uhitm.c	Thu Apr 14 17:25:37 1994
X***************
X*** 185,190 ****
X--- 185,202 ----
X  	return tmp;
X  }
X  
X+ /* Attack made with Stormbringer */
X+ static void attract_vortices(void)
X+ {
X+ 	int n;
X+ 
X+ 	if (rn2(100)) return;
X+ 	n = rn2(7) - Luck;
X+ 	while (n-- > 0) {
X+ 		makemon(mkclass(S_VORTEX,0),u.ux,u.uy);
X+ 	}
X+ }
X+ 
X  /* try to attack; return FALSE if monster evaded */
X  /* u.dx and u.dy must be set */
X  boolean
X***************
X*** 234,239 ****
X--- 246,255 ----
X  		} else return(FALSE);
X  	}
X  
X+ 	if (uwep && uwep->oartifact == ART_STORMBRINGER) {
X+ 		attract_vortices();
X+ 	}
X+ 
X  	/* moved code to a separate function to share with dokick */
X  	if(special_case(mtmp)) return(TRUE);
X  
X***************
X*** 759,765 ****
X  
X  	if (is_demon(uasmon) && !rn2(13) && !uwep
X  		&& u.umonnum != PM_SUCCUBUS && u.umonnum != PM_INCUBUS
X! 		&& u.umonnum != PM_BALROG) {
X  	    struct monst *dtmp;
X  	    pline("Some hell-p has arrived!");
X  	    if((dtmp = makemon(!rn2(6) ? &mons[ndemon(u.ualign.type)] :
X--- 775,782 ----
X  
X  	if (is_demon(uasmon) && !rn2(13) && !uwep
X  		&& u.umonnum != PM_SUCCUBUS && u.umonnum != PM_INCUBUS
X! 		&& u.umonnum != PM_BALROG && u.umonnum != PM_NEWS_DAEMON
X! 		&& u.umonnum != PM_PRINTER_DAEMON) {
X  	    struct monst *dtmp;
X  	    pline("Some hell-p has arrived!");
X  	    if((dtmp = makemon(!rn2(6) ? &mons[ndemon(u.ualign.type)] :
X***************
X*** 1057,1062 ****
X--- 1074,1085 ----
X  		    mdef->mfrozen = rnd(10);
X  		}
X  		break;
X+ #ifdef DOUGLAS_ADAMS
X+ 	    case AD_DEPR:
X+ 		pline("%s seems vaguely bored.",Monnam(mdef));
X+ 		break;
X+ #endif
X+ 
X  	    default:	tmp = 0;
X  			break;
X  	}
X***************
X*** 1394,1399 ****
X--- 1417,1426 ----
X  				|| u.usym==S_ORC
X  				|| u.usym==S_GNOME
X  				)) goto use_weapon;
X+ 
X+ 		case AT_TALK:
X+ 			You("talk to %s. But you don't seem to be too convincing.",mon_nam(mon));
X+ 			break;
X  
X  		case AT_NONE:
X  			continue;
X*** /tmp/tmp.1285	Sat May 28 21:18:46 1994
X--- ./src/weapon.c	Sat Mar 19 20:39:58 1994
X***************
X*** 279,285 ****
X  #endif
X  	  {TSURUGI,1}, {RUNESWORD,0},
X  	  {DWARVISH_MATTOCK,1}, {TWO_HANDED_SWORD,1}, {BATTLE_AXE,1},
X! 	  {KATANA,0}, {UNICORN_HORN,1}, {CRYSKNIFE,0},
X  	  {TRIDENT,0}, {LONG_SWORD,0}, {ELVEN_BROADSWORD,0}, {BROADSWORD,0},
X  	  {LUCERN_HAMMER,1}, {SCIMITAR,1}, {SILVER_SABER,0}, {HALBERD,1},
X  	  {PARTISAN,1}, {LANCE,1}, {FAUCHARD,1}, {BILL_GUISARME,1},
X--- 279,285 ----
X  #endif
X  	  {TSURUGI,1}, {RUNESWORD,0},
X  	  {DWARVISH_MATTOCK,1}, {TWO_HANDED_SWORD,1}, {BATTLE_AXE,1},
X! 	  {KATANA,0}, {UNICORN_HORN,1}, {CRYSKNIFE,0}, {ELECTRIC_SWORD,0},
X  	  {TRIDENT,0}, {LONG_SWORD,0}, {ELVEN_BROADSWORD,0}, {BROADSWORD,0},
X  	  {LUCERN_HAMMER,1}, {SCIMITAR,1}, {SILVER_SABER,0}, {HALBERD,1},
X  	  {PARTISAN,1}, {LANCE,1}, {FAUCHARD,1}, {BILL_GUISARME,1},
X***************
X*** 293,299 ****
X  	  {RUBBER_HOSE,0},
X  #endif /* KOPS */
X  	  {WAR_HAMMER,0}, {ELVEN_DAGGER,0}, {DAGGER,0}, {ORCISH_DAGGER,0},
X! 	  {ATHAME,0}, {SCALPEL,0}, {KNIFE,0}, {WORM_TOOTH,0}, {BULLWHIP,0}
X  	};
X  
X  struct obj *
X--- 293,299 ----
X  	  {RUBBER_HOSE,0},
X  #endif /* KOPS */
X  	  {WAR_HAMMER,0}, {ELVEN_DAGGER,0}, {DAGGER,0}, {ORCISH_DAGGER,0},
X! 	  {ATHAME,0}, {SCALPEL,0}, {KNIFE,0}, {WORM_TOOTH,0}, {BULLWHIP,0},
X  	};
X  
X  struct obj *
X*** /tmp/tmp.1285	Sat May 28 21:18:53 1994
X--- ./src/write.c	Thu Apr 21 18:10:45 1994
X***************
X*** 39,44 ****
X--- 39,45 ----
X  		return(12);
X  /*		break; */
X  	case SCR_IDENTIFY:
X+ 	case SCR_REVERSE_IDENTIFY:
X  		return(14);
X  /*		break; */
X  	case SCR_ENCHANT_ARMOR:
X***************
X*** 50,61 ****
X--- 51,68 ----
X  	case SCR_SCARE_MONSTER:
X  	case SCR_TAMING:
X  	case SCR_TELEPORTATION:
X+ 	case SCR_MASS_MURDER:
X+ 	case SCR_CONSECRATION:
X  		return(20);
X  /*		break; */
X  	case SCR_GENOCIDE:
X  		return(30);
X  /*		break; */
X+ 	case SCR_UNDO_GENOCIDE:
X+ 		return(50);
X+ /*		break; */
X  	case SCR_BLANK_PAPER:
X+ 	case SCR_ROOT_PASSWORD_DETECTION:
X  	default:
X  		impossible("You can't write such a weird scroll!");
X  	}
X***************
X*** 186,191 ****
X--- 193,199 ----
X  	/* success */
X  	new_obj->blessed = (curseval > 0);
X  	new_obj->cursed = (curseval < 0);
X+ 	new_obj->selfmade = TRUE;
X  #ifdef MAIL
X  	if (new_obj->otyp == SCR_MAIL) new_obj->spe = 1;
X  #endif
X*** /tmp/tmp.1285	Sat May 28 21:18:54 1994
X--- ./src/zap.c	Fri May 13 13:04:17 1994
X***************
X*** 13,18 ****
X--- 13,19 ----
X  
X  static NEARDATA boolean obj_zapped;
X  static NEARDATA int poly_zapped;
X+ static NEARDATA boolean wan_wonder;
X  
X  #ifdef MUSE
X  /* kludge to use mondied instead of killed */
X***************
X*** 56,62 ****
X  	"death ray",
X  	"bolt of lightning",
X  	"",
X! 	"",
X  	"",
X  	"",
X  
X--- 57,63 ----
X  	"death ray",
X  	"bolt of lightning",
X  	"",
X! 	"blow of acid",
X  	"",
X  	"",
X  
X***************
X*** 188,193 ****
X--- 189,195 ----
X  		break;
X  	case WAN_PROBING:
X  		makeknown(otyp);
X+ 	case SPE_FINGER:
X  		mstatusline(mtmp);
X  		break;
X  	case WAN_OPENING:
X***************
X*** 212,217 ****
X--- 214,225 ----
X  			     sgn(u.ualign.type));
X  		}
X   		break;
X+ 	case WAN_DRAINING: 
X+ 		dmg = mtmp->mhpmax / 2;
X+ 		hit("wand",mtmp,exclam(dmg));
X+ 		resist(mtmp,otmp->oclass,dmg,TELL);
X+ 		losehp(dmg,"excessive draining",KILLED_BY);
X+ 		break;
X  	case WAN_LOCKING:
X  	case SPE_KNOCK:
X  	case SPE_WIZARD_LOCK:
X***************
X*** 331,336 ****
X--- 339,350 ----
X  				flags.botl = 1;
X  			}
X  			break;
X+ 		case RIN_HEALTH:
X+ 			if ((obj->owornmask & W_RING) && u_ring) {
X+ 				ABON(A_STR) -= obj->spe;
X+ 				flags.botl = 1;
X+ 			}
X+ 			break;
X  		case RIN_INCREASE_DAMAGE:
X  			if ((obj->owornmask & W_RING) && u_ring)
X  				u.udaminc -= obj->spe;
X***************
X*** 769,774 ****
X--- 783,790 ----
X  	case WAN_SPEED_MONSTER:
X  	case WAN_NOTHING:
X  	case WAN_PROBING:
X+ 	case WAN_DRAINING:
X+ 	case SPE_FINGER:
X  	case SPE_HEALING:
X  	case SPE_EXTRA_HEALING:
X  		res = 0;
X***************
X*** 861,866 ****
X--- 877,901 ----
X  			}
X  			makewish();
X  			break;
X+ 		case WAN_WONDER:
X+ 			getdir(NULL);
X+ 			do {
X+ 				obj->otyp = WAN_LIGHT + rn2(WAN_WONDER - WAN_LIGHT);
X+ 			} while (obj->otyp == WAN_WONDER || 
X+ 				(obj->otyp == WAN_WISHING && rnl(10)));
X+ 			wan_wonder = TRUE;
X+ 			weffects(obj);
X+ 			wan_wonder = FALSE;
X+ 			obj->otyp = WAN_WONDER;
X+ 			break;
X+ 		case WAN_BUGGING: {
X+ 			int i;
X+ 
X+ 			i = rn2(6) + 1;
X+ 			while (i--) {
X+ 				(void) makemon(&mons[rn2(3) ? PM_BUG : PM_HEISENBUG], u.ux,u.uy);
X+ 			}
X+ 		} break;
X  	}
X  	if (!objects[obj->otyp].oc_name_known &&
X  	    (!Blind || obj->otyp == WAN_WISHING)) {
X***************
X*** 936,941 ****
X--- 971,993 ----
X  		    }
X  		    makeknown(obj->otyp);
X  		    break;
X+ 		case WAN_DRAINING:
X+ 		    /* theoretically we would have to take away half of */
X+ 		    /* u.uhpmax _twice_, but I don't want to be unfair ... */
X+ 		    makeknown(WAN_DRAINING);
X+ 		    damage = u.uhpmax / 2;
X+ 		    if (damage < 1) damage = 1;
X+ 		    break;
X+ 		case WAN_ACID:
X+ 		    makeknown(WAN_ACID);
X+ 		    if (Antimagic) {
X+ 			shieldeff(u.ux,u.uy);
X+ 			pline("Ugh!");
X+ 		    } else {
X+ 			pline("The acid burns!");
X+ 			damage = d(8,6);
X+ 		   }
X+ 		   break;
X  		case WAN_LIGHTNING:
X  		    makeknown(WAN_LIGHTNING);
X  		    if (!Shock_resistance) {
X***************
X*** 1114,1119 ****
X--- 1166,1172 ----
X  		    break;
X  		case WAN_PROBING:
X  		    makeknown(WAN_PROBING);
X+ 		case SPE_FINGER:
X  		    ustatusline();
X  		    break;
X  		default: impossible("object %d used?",obj->otyp);
X***************
X*** 1347,1357 ****
X  			    buzz((int) obj->otyp - WAN_MAGIC_MISSILE,
X  				(obj->otyp == WAN_MAGIC_MISSILE) ? 2 : 6,
X  				 u.ux, u.uy, u.dx, u.dy);
X  			} else
X  			    impossible("weffects: unexpected spell or wand");
X  			break;
X  		}
X! 		if(!objects[obj->otyp].oc_name_known) {
X  			makeknown(obj->otyp);
X  			more_experienced(0,10);
X  		}
X--- 1400,1412 ----
X  			    buzz((int) obj->otyp - WAN_MAGIC_MISSILE,
X  				(obj->otyp == WAN_MAGIC_MISSILE) ? 2 : 6,
X  				 u.ux, u.uy, u.dx, u.dy);
X+ 			} else if (obj->otyp == WAN_ACID) {
X+ 			    buzz(ZT_ACID,6,u.ux,u.uy,u.dx,u.dy);
X  			} else
X  			    impossible("weffects: unexpected spell or wand");
X  			break;
X  		}
X! 		if(!objects[obj->otyp].oc_name_known && !obj->otyp == WAN_WONDER && !wan_wonder) {
X  			makeknown(obj->otyp);
X  			more_experienced(0,10);
X  		}
X*** /tmp/tmp.1285	Sat May 28 21:18:56 1994
X--- ./src/Makefile	Sun Apr 10 14:39:00 1994
X***************
X*** 51,57 ****
X  #	if you get setcgtty() warnings during execution, you are feeding gcc
X  #		a non-ANSI <sys/ioctl.h> -- either run fixincludes on it or use
X  #		-traditional in CFLAGS
X! # CC = gcc
X  #
X  #	For Bull DPX/2 systems at B.O.S. 2.0 or higher use the following:
X  #
X--- 51,57 ----
X  #	if you get setcgtty() warnings during execution, you are feeding gcc
X  #		a non-ANSI <sys/ioctl.h> -- either run fixincludes on it or use
X  #		-traditional in CFLAGS
X! CC = cc -DSCO_CC
X  #
X  #	For Bull DPX/2 systems at B.O.S. 2.0 or higher use the following:
X  #
X***************
X*** 91,97 ****
X  # flags for debugging:
X  # CFLAGS = -g -I../include
X  
X! CFLAGS = -g -I../include
X  LFLAGS =
X  
X  
X--- 91,97 ----
X  # flags for debugging:
X  # CFLAGS = -g -I../include
X  
X! CFLAGS = -g -I../include -D_POSIX_SOURCE -DDOUGLAS_ADAMS
X  LFLAGS =
X  
X  
X***************
X*** 112,119 ****
X  	winmisc.o winstat.o wintext.o winval.o
X  #
X  # 
X! WINSRC = $(WINTTYSRC)
X! WINOBJ = $(WINTTYOBJ)
X  
X  # on some systems the termcap library is in -ltermcap or -lcurses
X  # on 386 Xenix, the -ltermlib tputs() seems not to work; use -lcurses instead
X--- 112,119 ----
X  	winmisc.o winstat.o wintext.o winval.o
X  #
X  # 
X! WINSRC = $(WINTTYSRC) $(WINX11SRC)
X! WINOBJ = $(WINTTYOBJ) $(WINX11OBJ)
X  
X  # on some systems the termcap library is in -ltermcap or -lcurses
X  # on 386 Xenix, the -ltermlib tputs() seems not to work; use -lcurses instead
X***************
X*** 130,140 ****
X  WINTTYLIB = -ltermlib
X  #
X  # libraries for X11
X! WINX11LIB = -lXaw -lXmu -lXext -lXt -lX11
X  # WINX11LIB = -lXaw -lXmu -lXt -lX11
X  #
X  #
X! WINLIB = $(WINTTYLIB)
X  
X  # any other strange libraries your system needs (for Sysunix only -- the more
X  # specialized targets should already be right)
X--- 130,140 ----
X  WINTTYLIB = -ltermlib
X  #
X  # libraries for X11
X! WINX11LIB = -lXaw -lXmu -lXext -lXt -lX11 -lsocket
X  # WINX11LIB = -lXaw -lXmu -lXt -lX11
X  #
X  #
X! WINLIB = $(WINTTYLIB) $(WINX11LIB)
X  
X  # any other strange libraries your system needs (for Sysunix only -- the more
X  # specialized targets should already be right)
X***************
X*** 150,156 ****
X  # Linux NetHack uses some bsd style ioctl functions, thus it is necessary to
X  # use the bsd libs.
X  # LIBS = -lbsd
X! LIBS =
X  
X  # make NetHack
X  GAME     = nethack
X--- 150,156 ----
X  # Linux NetHack uses some bsd style ioctl functions, thus it is necessary to
X  # use the bsd libs.
X  # LIBS = -lbsd
X! LIBS = /usr/local/lib/libemu.a
X  
X  # make NetHack
X  GAME     = nethack
X***************
X*** 186,192 ****
X  	   save.c shk.c shknam.c sit.c sounds.c sp_lev.c spell.c steal.c\
X  	   timeout.c topten.c track.c trap.c u_init.c uhitm.c vault.c\
X  	   version.c vision.c weapon.c were.c wield.c windows.c wizard.c\
X! 	   worm.c worn.c write.c zap.c
X  
X  # all operating-system-dependent .c (for dependencies and such)
X  SYSCSRC = ../sys/atari/tos.c ../sys/share/pcmain.c ../sys/share/pcsys.c \
X--- 186,192 ----
X  	   save.c shk.c shknam.c sit.c sounds.c sp_lev.c spell.c steal.c\
X  	   timeout.c topten.c track.c trap.c u_init.c uhitm.c vault.c\
X  	   version.c vision.c weapon.c were.c wield.c windows.c wizard.c\
X! 	   worm.c worn.c write.c zap.c school.c smith.c
X  
X  # all operating-system-dependent .c (for dependencies and such)
X  SYSCSRC = ../sys/atari/tos.c ../sys/share/pcmain.c ../sys/share/pcsys.c \
X***************
X*** 236,242 ****
X  	save.o shk.o shknam.o sit.o sounds.o sp_lev.o spell.o steal.o\
X  	timeout.o topten.o track.o trap.o u_init.o uhitm.o vault.o\
X  	vision.o vis_tab.o weapon.o were.o wield.o windows.o wizard.o\
X! 	worm.o worn.o write.o zap.o\
X  	$(RANDOBJ) $(SYSOBJ) $(WINOBJ) version.o
X  # the .o files from the HACKCSRC, SYSSRC, and WINSRC lists
X  
X--- 236,242 ----
X  	save.o shk.o shknam.o sit.o sounds.o sp_lev.o spell.o steal.o\
X  	timeout.o topten.o track.o trap.o u_init.o uhitm.o vault.o\
X  	vision.o vis_tab.o weapon.o were.o wield.o windows.o wizard.o\
X! 	worm.o worn.o write.o zap.o school.o smith.o\
X  	$(RANDOBJ) $(SYSOBJ) $(WINOBJ) version.o
X  # the .o files from the HACKCSRC, SYSSRC, and WINSRC lists
X  
X***************
X*** 245,251 ****
X  
X  Sysunix:	$(HOBJ) Makefile
X  	@echo "Loading ..."
X! 	@$(CC) $(LFLAGS) -o $(GAME) $(HOBJ) $(WINLIB) $(LIBS)
X  	@touch Sysunix
X  
X  Sys3B2:	$(HOBJ) Makefile
X--- 245,251 ----
X  
X  Sysunix:	$(HOBJ) Makefile
X  	@echo "Loading ..."
X! 	$(CC) $(LFLAGS) -o $(GAME) $(HOBJ) $(WINLIB) $(LIBS)
X  	@touch Sysunix
X  
X  Sys3B2:	$(HOBJ) Makefile
X*** /tmp/tmp.1285	Sat May 28 21:22:57 1994
X--- ./win/tty/wintty.c	Wed Mar 30 17:10:26 1994
X***************
X*** 1217,1223 ****
X  
X      if(str) {
X  	cw->canresp = (char*) alloc(strlen(str)+2);
X! 	cw->canresp[0] = ch;			/* this could be NUL? */
X  	Strcpy(&cw->canresp[1], str);
X  	Strcat(cw->resp, str);
X      }
X--- 1217,1223 ----
X  
X      if(str) {
X  	cw->canresp = (char*) alloc(strlen(str)+2);
X! 	((char *)cw->canresp)[0] = ch;			/* this could be NUL? */
X  	Strcpy(&cw->canresp[1], str);
X  	Strcat(cw->resp, str);
X      }
X*** /tmp/tmp.1285	Sat May 28 21:23:14 1994
X--- ./win/X11/winX.c	Fri Mar 18 19:47:09 1994
X***************
X*** 836,842 ****
X  		    &app_context,
X  		    "NetHack",		/* application class */
X  		    (XrmOptionDescList)0, 0,	/* options list */
X! 		    &i, av,		/* command line args */
X  		    (String *)0,	/* fallback resources */
X  		    (ArgList)args, num_args);
X      XtOverrideTranslations(toplevel,
X--- 836,842 ----
X  		    &app_context,
X  		    "NetHack",		/* application class */
X  		    (XrmOptionDescList)0, 0,	/* options list */
X! 		    &i, (char **) av,		/* command line args */
X  		    (String *)0,	/* fallback resources */
X  		    (ArgList)args, num_args);
X      XtOverrideTranslations(toplevel,
X*** /tmp/tmp.1285	Sat May 28 21:23:16 1994
X--- ./Makefile	Sun May 22 19:05:38 1994
X***************
X*** 15,26 ****
X  
X  # make NetHack
X  GAME     = nethack
X! GAMEUID  = games
X  GAMEGRP  = bin
X  
X  # Permissions - some places use setgid instead of setuid, for instance
X  # See also the option "SECURE" in include/config.h
X! GAMEPERM = 04755
X  FILEPERM = 0644
X  EXEPERM  = 0755
X  DIRPERM  = 0755
X--- 15,26 ----
X  
X  # make NetHack
X  GAME     = nethack
X! GAMEUID  = sebast
X  GAMEGRP  = bin
X  
X  # Permissions - some places use setgid instead of setuid, for instance
X  # See also the option "SECURE" in include/config.h
X! GAMEPERM = 0755
X  FILEPERM = 0644
X  EXEPERM  = 0755
X  DIRPERM  = 0755
X***************
X*** 32,41 ****
X  # therefore there should not be anything in GAMEDIR that you want to keep
X  # (if there is, you'll have to do the installation by hand or modify the
X  # instructions)
X! # GAMEDIR  = /usr/games/lib/$(GAME)dir
X! # SHELLDIR = /usr/games
X  GAMEDIR = /ntd
X! SHELLDIR = /u/local/sh
X  
X  DATHELP = help hh cmdhelp history opthelp wizhelp
X  VARDAT = data oracles options quest.dat rumors
X--- 32,40 ----
X  # therefore there should not be anything in GAMEDIR that you want to keep
X  # (if there is, you'll have to do the installation by hand or modify the
X  # instructions)
X! # GAMEDIR  = /u2/local/lib/$(GAME)testdir
X  GAMEDIR = /ntd
X! SHELLDIR = /u2/local/sh
X  
X  DATHELP = help hh cmdhelp history opthelp wizhelp
X  VARDAT = data oracles options quest.dat rumors
X***************
X*** 43,49 ****
X  SPEC_LEVS = asmodeus.lev baalz.lev bigroom.lev castle.lev fakewiz?.lev \
X  	juiblex.lev knox.lev medusa-?.lev mine_end.lev minefill.lev \
X  	minetown.lev oracle.lev orcus.lev sanctum.lev tower?.lev valley.lev \
X! 	wizard?.lev astral.lev air.lev earth.lev fire.lev water.lev
X  QUEST_LEVS = ?-goal.lev ?-fill?.lev ?-locate.lev ?-start.lev
X  
X  SCRIPT = dungeon
X--- 42,49 ----
X  SPEC_LEVS = asmodeus.lev baalz.lev bigroom.lev castle.lev fakewiz?.lev \
X  	juiblex.lev knox.lev medusa-?.lev mine_end.lev minefill.lev \
X  	minetown.lev oracle.lev orcus.lev sanctum.lev tower?.lev valley.lev \
X! 	wizard?.lev astral.lev air.lev earth.lev fire.lev water.lev school.lev \
X! 	forge.lev compu.lev dragon.lev key.lev hitch.lev
X  QUEST_LEVS = ?-goal.lev ?-fill?.lev ?-locate.lev ?-start.lev
X  
X  SCRIPT = dungeon
END_OF_patch.pa
if test 256107 -ne `wc -c <patch.pa`; then
    echo shar: \"patch.pa\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./dat/Geek.des -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./dat/Geek.des\"
else
echo shar: Extracting \"./dat/Geek.des\" \(11692 characters\)
sed "s/^X//" >./dat/Geek.des <<'END_OF_./dat/Geek.des'
X# Geek.des
X# The Geek quest
X# 03/19/94 by Sebastian Klein
X
X# --- start level ---
X
XMAZE: "G-start",' '
XFLAGS: noteleport,hardfloor
XGEOMETRY: center,center
X
X#         1         2         3         4         5         6         7
X#123456789012345678901234567890123456789012345678901234567890123456789012345
X
XMAP
X............................................................................
X............................................................................
X..........................|-------------------------|.......................
X..........................|.........................|.......................
X..........................|-------------+-----------|.......................
X............................................................................
X............................................................................
X............................................................................
X..........................|-------------------------|-|.....................
X..........................|.........................|.|.....................
X..........................|.........................|.|.....................
X..........................|.........................|.|.....................
X..........................|.........................+.+.....................
X..........................|.........................|.|.....................
X..........................|.........................|.|.....................
X..........................|.........................|.|.....................
X..........................|-------------------------|-|.....................
X............................................................................
X............................................................................
X............................................................................
XENDMAP
X
XREGION:(00,00,75,19),lit,"ordinary"
X
XBRANCH:(60,18,60,18),(0,0,0,0)
X
XSTAIR:(27,03),down
X
XDOOR:locked,(40,04)
XDOOR:locked,(54,12)
XDOOR:locked,(52,12)
X
XMONSTER:'@',"The Dev Team",(38,12)
X
XMONSTER:'@',"hacker",(37,11)
XMONSTER:'@',"hacker",(38,11)
XMONSTER:'@',"hacker",(39,11)
XMONSTER:'@',"hacker",(37,12)
XMONSTER:'@',"hacker",(39,12)
XMONSTER:'@',"hacker",(37,13)
XMONSTER:'@',"hacker",(38,13)
XMONSTER:'@',"hacker",(39,13)
X
X# For the textwork care has to be exercised that there are no
X# rock moles, dwarves with pick-axes etc. to break the walls.
X
X# "May the force be with you"
XMONSTER:'M',random,(27,03)
XMONSTER:'a',random,(28,03)
XMONSTER:'y',random,(29,03)
XMONSTER:':',random,(30,03)
XMONSTER:'t',random,(31,03)
XMONSTER:'h',"hobbit",(32,03)
XMONSTER:'e',random,(33,03)
XMONSTER:':',random,(34,03)
XMONSTER:'f',random,(35,03)
XMONSTER:'o',random,(36,03)
XMONSTER:'r',"sewer rat",(37,03)
XMONSTER:'c',random,(38,03)
XMONSTER:'e',random,(39,03)
XMONSTER:':',random,(40,03)
XMONSTER:'b',random,(41,03)
XMONSTER:'e',random,(42,03)
XMONSTER:':',random,(43,03)
XMONSTER:'w',random,(44,03)
XMONSTER:'i',random,(45,03)
XMONSTER:'t',random,(46,03)
XMONSTER:'h',"hobbit",(47,03)
XMONSTER:':',random,(48,03)
XMONSTER:'y',random,(49,03)
XMONSTER:'o',random,(50,03)
XMONSTER:'u',"young unicorn",(51,03)
X
X# "WELCOME"
XMONSTER:'W',"wraith",(53,09)
XMONSTER:'E',random,(53,10)
XMONSTER:'L',"baby lich",(53,11) 
XMONSTER:'C',random,(53,12)
XMONSTER:'O',random,(53,12)
XMONSTER:'M',random,(53,13)
XMONSTER:'E',random,(53,14)
X
X# To ensure that the player can see the artwork 
XOBJECT:'"',"amulet of ESP",random
XOBJECT:'(',"blindfold",random
X
XOBJECT:'!',"Jolt Cola",random
XOBJECT:'!',"Jolt Cola",random
XOBJECT:'/',"digging",random
X
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
X
XTRAP:random,random
XTRAP:random,random
XTRAP:random,random
XTRAP:random,random
X
X# --- locate level ---
X
X# looks harmless but *IS* tough!!!
X
XMAZE: "G-locate",' '
XFLAGS: hardfloor
XGEOMETRY: center,center
X
X#         1         2         3         4         5         6         7
X#123456789012345678901234567890123456789012345678901234567890123456789012345
X
XMAP
X............................................................................
X............................................................................
X............................................................................
X............................................................................
X.....--------------------------|............|--------------------------.....
X...............................|............|...............................
X...-------------------------|..|............|..|-------------------------...
X............................|..|............|..|............................
X.---------------------|--|..|..|............|..|..|--|---------------------.
X......................|..|..|..|............|..|..|..|......................
X.---------------------|--|..|..|............|..|..|--|---------------------.
X............................|..|............|..|............................
X...-------------------------|..|............|..|-------------------------...
X...............................|............|...............................
X.....--------------------------|............|--------------------------.....
X............................................................................
X............................................................................
X............................................................................
X............................................................................
X............................................................................
XENDMAP
X
XRANDOM_PLACES: (24,09), (27,09), (30,09), (45,09), (48,09), (51,09)
X
XREGION:(00,00,75,19),lit,"ordinary"
X
X# the niches 
XSTAIR:place[0],down
XOBJECT:'"',"amulet of life saving",place[1]
XOBJECT:'"',"amulet of strangulation",place[2]
XMONSTER:'m',"giant mimic",place[3], m_feature "staircase down"
XMONSTER:'m',"giant mimic",place[4], m_feature "staircase down"
XTRAP:"polymorph",place[5]
X
XSTAIR:random,up
X
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
X
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
XMONSTER:random,random,random,hostile
X
XTRAP:random,random
XTRAP:random,random
XTRAP:random,random
XTRAP:random,random
XTRAP:random,random
XTRAP:random,random
XTRAP:random,random
XTRAP:random,random
X
X# --- the goal level ---
X
XMAZE: "G-goal", ' '
XGEOMETRY:center,center
X
X#         1         2         3         4         5         6         7
X#123456789012345678901234567890123456789012345678901234567890123456789012345
X
XMAP
X............................................................................
X.-------------------------------------------------------------------------|.
X..........................................................................|.
X....|-----------------------------------------------------------------|...|.
X....|.................................................................|...|.
X....|...|---------------------------------------------------------|...|...|.
X....|...|...+.....................................................|...|...|.
X....|...|...|.....................................................|...|...|.
X....|...|...|.....................................................|...|...|.
X....|...|...|........................\............................|...|...|.
X....|...|...|.....................................................|...|...|.
X....|...|...|.....................................................|...|...|.
X....|...|...|.....................................................|...|...|.
X....|...|...|-----------------------------------------------------|...|...|.
X....|...|.............................................................|...|.
X....|...|-------------------------------------------------------------|...|.
X....|.....................................................................|.
X....|---------------------------------------------------------------------|.
X............................................................................
X............................................................................
XENDMAP
X
XREGION:(0,0,75,19),lit,"ordinary"
X
XSTAIR:(75,19),up
X
XDOOR:locked,(12,06)
X
X# that's what's this all about :-)
XOBJECT:'(',"pack of floppies",(37,09),blessed,0,"The Nethack Sources"
XMONSTER:'@',"Bill Gates",(37,09)
X
XMONSTER:random,random,random
XMONSTER:random,random,random
XMONSTER:random,random,random
XMONSTER:random,random,random
XMONSTER:random,random,random
XMONSTER:random,random,random
XMONSTER:random,random,random
XMONSTER:random,random,random
X
XOBJECT:'(',"pack of floppies",random
XOBJECT:'(',"pack of floppies",random
XOBJECT:'(',"pack of floppies",random
XOBJECT:'(',"pack of floppies",random
XOBJECT:'(',"pack of floppies",random
XOBJECT:'(',"pack of floppies",random
XOBJECT:'(',"pack of floppies",random
XOBJECT:'(',"pack of floppies",random
X
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
XOBJECT:random,random,random
X
X# --- fill a ---
X
XLEVEL: "G-filla"
X
XROOM: "ordinary", random, random, random, random
XSTAIR: random,up
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XROOM: "ordinary", random, random, random, random
XSTAIR: random,down
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XROOM: "ordinary", random, random, random, random
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XROOM: "ordinary", random, random, random, random
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XROOM: "ordinary", random, random, random, random
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XROOM: "ordinary", random, random, random, random
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XRANDOM_CORRIDORS
X
X
X# --- fill b ---
X
XLEVEL: "G-fillb"
X
XROOM: "ordinary", random, random, random, random
XSTAIR: random,up
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XROOM: "ordinary", random, random, random, random
XSTAIR: random,down
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XROOM: "ordinary", random, random, random, random
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XROOM: "ordinary", random, random, random, random
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XROOM: "ordinary", random, random, random, random
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XROOM: "ordinary", random, random, random, random
XOBJECT:random,random,random
XOBJECT:random,random,random
XMONSTER:random,random,random
XTRAP:random,random
X
XRANDOM_CORRIDORS
END_OF_./dat/Geek.des
if test 11692 -ne `wc -c <./dat/Geek.des`; then
    echo shar: \"./dat/Geek.des\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./dat/spec_levs -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./dat/spec_levs\"
else
echo shar: Extracting \"./dat/spec_levs\" \(0 character\)
sed "s/^X//" >./dat/spec_levs <<'END_OF_./dat/spec_levs'
END_OF_./dat/spec_levs
if test 0 -ne `wc -c <./dat/spec_levs`; then
    echo shar: \"./dat/spec_levs\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./dat/dragon.des -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./dat/dragon.des\"
else
echo shar: Extracting \"./dat/dragon.des\" \(1902 characters\)
sed "s/^X//" >./dat/dragon.des <<'END_OF_./dat/dragon.des'
X# The Draconian Level
X# still to be done ...
X
XMAZE: "dragon", ' '
X# FLAGS:
XGEOMETRY: center,center
X#         1         2         3         4         5         6         7 
X# 23456789012345678901234567890123456789012345678901234567890123456789012345
XMAP
X----------------------------------------------------------------------------
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|--------------------------------------------------------------------------|
XENDMAP
X
XRANDOM_MONSTERS: 'D'
X
XSTAIR: random,up
XSTAIR: random,down
X
XMONSTER:'D',"Dragon Lord",random,hostile
X
END_OF_./dat/dragon.des
if test 1902 -ne `wc -c <./dat/dragon.des`; then
    echo shar: \"./dat/dragon.des\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./dat/rulebar -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./dat/rulebar\"
else
echo shar: Extracting \"./dat/rulebar\" \(150 characters\)
sed "s/^X//" >./dat/rulebar <<'END_OF_./dat/rulebar'
X#         1         2         3         4         5         6         7 
X# 23456789012345678901234567890123456789012345678901234567890123456789012345
END_OF_./dat/rulebar
if test 150 -ne `wc -c <./dat/rulebar`; then
    echo shar: \"./dat/rulebar\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./dat/forge.des -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./dat/forge.des\"
else
echo shar: Extracting \"./dat/forge.des\" \(1870 characters\)
sed "s/^X//" >./dat/forge.des <<'END_OF_./dat/forge.des'
X# the forge
X
XMAZE:"forge",' '
XGEOMETRY:center,center
X#         1         2         3         4         5         6         7 
X# 23456789012345678901234567890123456789012345678901234567890123456789012345
XMAP
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.......LLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.........LLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.......LLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLL...|............LLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLL.....|..............LLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLL..L...|................LLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLL........|.................LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLL............................................LLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLL....}...|.................LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLL......|...............LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLL....|..............LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
XLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
XENDMAP
X
XSTAIR:(56,02),up
XSTAIR:(62,02),down
X
XREGION:(00,00,75,19),lit,"ordinary"
X
XMONSTER:'@',"blacksmith",(25,10),"Duri"
X
END_OF_./dat/forge.des
if test 1870 -ne `wc -c <./dat/forge.des`; then
    echo shar: \"./dat/forge.des\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./dat/quest_levs -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./dat/quest_levs\"
else
echo shar: Extracting \"./dat/quest_levs\" \(0 character\)
sed "s/^X//" >./dat/quest_levs <<'END_OF_./dat/quest_levs'
END_OF_./dat/quest_levs
if test 0 -ne `wc -c <./dat/quest_levs`; then
    echo shar: \"./dat/quest_levs\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./dat/template.des -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./dat/template.des\"
else
echo shar: Extracting \"./dat/template.des\" \(1772 characters\)
sed "s/^X//" >./dat/template.des <<'END_OF_./dat/template.des'
X# whatever ...
X
XMAZE: "template", ' '
XFLAGS:
XGEOMETRY: center,center
X#         1         2         3         4         5         6         7 
X# 23456789012345678901234567890123456789012345678901234567890123456789012345
XMAP
X----------------------------------------------------------------------------
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|..........................................................................|
X|--------------------------------------------------------------------------|
XENDMAP
X
X
END_OF_./dat/template.des
if test 1772 -ne `wc -c <./dat/template.des`; then
    echo shar: \"./dat/template.des\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./dat/key.des -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./dat/key.des\"
else
echo shar: Extracting \"./dat/key.des\" \(2973 characters\)
sed "s/^X//" >./dat/key.des <<'END_OF_./dat/key.des'
X# This is where you might get the Key Of Access
X# The level is somewhat inspired by the Rogue Quest.
X
XMAZE: "key", ' '
X# we cannot use noteleport - this would prevent the nymphs and leprechauns
X# from teleporting, too.
XFLAGS: nommap
XGEOMETRY: center,center
X#         1         2         3         4         5         6         7 
X# 23456789012345678901234567890123456789012345678901234567890123456789012345
XMAP
X----------------------------------------------------------------------------
X|..S...+}....S.......|}|.|L.....IIIPPPCCCAAAAAAAAA.....S...................|
X|---...|}....|..|-S--|}|.|L..............AAAAAAAAA.....|-----------------|.|
X|......|}.|..|-S-....S}|.|L.....IIIP......AAAAAAAA.....|.................|.|
X|---S---}.|..|II|..---}|.|L.....IIIPPP...AAAAAAAAA.....|.|-------------|.|.|
X|}}}.}}}}.|..|CC|..|}}}|.|L.....IIIPPPCCCAAAAAAAAA.....|.|.............|.|.|
X|.........|..|AA|..|}|-|.|L.....IIIPPPCCCAAAAAAAAA.....|.|.|---------|.|.|.|
X|----------------S--}|...|L.....IIIPPPCCCA...AAAAA.....|.|.|.........|.|.|.|
X|}}}}}}}}}}}}}}}}}.}}|...|L.....IIIPPPCCCAA..AAAAA.....|.|.|.|-----|.|.|.|.|
X|-----------------.--|...|L.....IIIPPPCCCAAAAAAAAA.....|.|.|.|.....|.|.|.|.|
X|................|.|.....|L.....IIIPPPCCCAAAAAAAAA.....|.|.|.|.....|.|.|.|.|
X|.|..|..|..|.....S.|.....|L.....IIIP..CCCAAA....AA.....|.|.|.|S----|.|.|.|.|
X|.|--|--|--|-----|-|.....|L.....IIIP.PCCCAA....AAA.....|.|.|.|.......|.|.|.|
X|........................|L.....IIIPPPCCCAAAAAAAAA.....|.|.|.|-------|.|.|.|
X|-----------------------.|L.....IIIPPPCCCAAAAAAAAA.....|.|.|...........|.|.|
X|...S..................S.|L.....IIIPPPCCCA....AAAA.....|.|.------------|.|.|
X|...---------------------|L.....IIIPPPCCCAAAAAAAAA.....|.|...............|.|
X|........................|L.....IIIPPPCCCAAAAA.........|.|---------------|.|
X|........................S......IIIPPPCCCAAAAAAAAA.....|...................|
X|--------------------------------------------------------------------------|
XENDMAP
X
XRANDOM_MONSTERS: 'l', 'n'
XREGION:(00,00,75,19),unlit,"ordinary"
XNON_DIGGABLE:(00,00,75,19)
X
XSTAIR:(01,01),up
XSTAIR:(01,06),down		
X
XDOOR:locked,(03,01)
XDOOR:open,(07,01)
XDOOR:locked,(04,04)
XDOOR:locked,(13,01)
XDOOR:locked,(15,03)
XDOOR:locked,(21,03)
XDOOR:locked,(17,07)
XDOOR:locked,(17,11)
XDOOR:locked,(25,18)
XDOOR:locked,(18,02)
XDOOR:locked,(04,15)
XDOOR:locked,(23,15)
XDOOR:locked,(62,11)
XDOOR:locked,(62,11)
X
XMONSTER:'l',random,random,awake
XMONSTER:'l',random,random,awake
XMONSTER:'l',random,random,awake
XMONSTER:'l',random,random,awake
XMONSTER:'l',random,random,awake
XMONSTER:'l',random,random,awake
XMONSTER:'l',random,random,awake
XMONSTER:'l',random,random,awake
XMONSTER:'n',random,random,awake
XMONSTER:'n',random,random,awake
XMONSTER:'n',random,random,awake
XMONSTER:'n',random,random,awake
XMONSTER:'n',random,random,awake
XMONSTER:'n',random,random,awake
XMONSTER:'n',random,random,awake
XMONSTER:'n',random,random,awake
XMONSTER:'n',"nymph queen",(64,09),hostile,awake
X
XTRAP:"board",(62,12)
XTRAP:"board",(63,12)
X
END_OF_./dat/key.des
if test 2973 -ne `wc -c <./dat/key.des`; then
    echo shar: \"./dat/key.des\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./dat/hitch.des -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./dat/hitch.des\"
else
echo shar: Extracting \"./dat/hitch.des\" \(3509 characters\)
sed "s/^X//" >./dat/hitch.des <<'END_OF_./dat/hitch.des'
X# This is the Hitchhiker's Level. It is created to the honour of Douglas
X# Noel Adams and his works.
X
XMAZE: "hitch", ' '
XFLAGS: nommap
XGEOMETRY: center,center
X#         1         2         3         4         5         6         7 
X# 23456789012345678901234567890123456789012345678901234567890123456789012345
XMAP
X----------------------------------------------------------------------------
X|..........................................................................|
X|..............|.........................|--------|........................|
X|..............|.......................--|........|--......................|
X|..............|.....................--|............|--....................|
X|..............|.....................|................|-.............|.....|
X|..............|......|................................|.............-.....|
X|..............|......|................................|...........-|.|-...|
X|..............|......|...............................-|..........-|...|-..|
X|..............|......|..............................-|...........|.....|..|
X|..............|......|............................--|...........----+----.|
X|..............|------|-------...................--|.............|||...|||.|
X|................PPPPP|.......................---|................|.....|..|
X|................PPPPP|....................---|...................|.....|..|
X|.....................|.............|------|......................|.....|..|
X|.....................|.............|......................................|
X|-------..............|.............|-----------------------...............|
X|......|...................................................................|
X|......+...................................................................|
X|--------------------------------------------------------------------------|
XENDMAP
X
XREGION: (00,00,75,19),unlit,"ordinary"
X
XSTAIR:(15,01),up
XSTAIR:(37,15),down
X
XMONSTER: 'A',"Douglas Adams",(22,05),hostile,asleep
XMONSTER: '@',"Ford Perfect",(16,10),hostile,asleep
XMONSTER: '@',"Arthur Dent",(17,10),hostile,asleep
XMONSTER: '@',"Mr. Prosser",(18,10),hostile,awake
X
XMONSTER: 'a', "Ravenous Bugblatter Beast Of Traal",random,hostile,awake
XMONSTER: 'Z', "creeping 42",random
XMONSTER: 'Z', "creeping 42",random
XMONSTER: 'Z', "creeping 42",random
XMONSTER: 'x', "microscopic space fleet",random
XMONSTER: 'f', "algolian suntiger",random
XMONSTER: 'f', "algolian suntiger",random,hostile,asleep
X
X# The Vogon Headquarter
XDOOR: locked, (07,18)
XMONSTER: 'V',"Prostetnik Vogon Jeltz",(01,17),hostile,asleep
XMONSTER: 'V',"vogon lord",(01,18),hostile,asleep
XMONSTER: 'V',"vogon",(02,17),hostile,asleep
XMONSTER: 'V',"vogon lord",(02,18),hostile,asleep
XMONSTER: 'V',"vogon",(03,17),hostile,asleep
XMONSTER: 'V',"vogon",(03,18),hostile,asleep
XMONSTER: 'V',"vogon",(04,17),hostile,asleep
XMONSTER: 'V',"vogon",(04,18),hostile,asleep
XMONSTER: 'V',"vogon lord",(05,17),hostile,asleep
XMONSTER: 'V',"vogon",(05,18),hostile,asleep
XMONSTER: 'V',"vogon",(06,17),hostile,asleep
XMONSTER: 'V',"vogon lord",(06,18),hostile,asleep
X
X# The Heart Of Gold
XDOOR: closed, (69,10)
XMONSTER: 'Y',"Zaphod Breeblebrox",(69,07),hostile,awake
XMONSTER: 'x',"Deep Thought",(67,09),hostile,awake
XMONSTER: 'x',"Eddie",(71,09),hostile,awake
XMONSTER: 'X',"Marvin",(69,08),hostile,asleep
X
X# The Aquarium
X# (random for ; will find water positions)
XMONSTER: ';',"babelfish",random,hostile,awake
XMONSTER: ';',"babelfish",random,hostile,awake
XMONSTER: ';',"babelfish",random,hostile,awake
X
END_OF_./dat/hitch.des
if test 3509 -ne `wc -c <./dat/hitch.des`; then
    echo shar: \"./dat/hitch.des\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./src/Sysunix -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./src/Sysunix\"
else
echo shar: Extracting \"./src/Sysunix\" \(0 character\)
sed "s/^X//" >./src/Sysunix <<'END_OF_./src/Sysunix'
END_OF_./src/Sysunix
if test 0 -ne `wc -c <./src/Sysunix`; then
    echo shar: \"./src/Sysunix\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./src/.gdbinit -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./src/.gdbinit\"
else
echo shar: Extracting \"./src/.gdbinit\" \(26 characters\)
sed "s/^X//" >./src/.gdbinit <<'END_OF_./src/.gdbinit'
Xset args -D -V -u wizard
X
END_OF_./src/.gdbinit
if test 26 -ne `wc -c <./src/.gdbinit`; then
    echo shar: \"./src/.gdbinit\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./src/school.c -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./src/school.c\"
else
echo shar: Extracting \"./src/school.c\" \(4814 characters\)
sed "s/^X//" >./src/school.c <<'END_OF_./src/school.c'
X/* 	SCCS Id: @(#)school.c 	3.1 	94/26/03	*/
X/* NetHack may be freely redistributed.  See license for details. */
X/* Copyright 1994, Sebastian Klein */
X
X#include "hack.h"
X#include <stdio.h>
X
X#ifdef SOUNDS
X#ifdef OVL0
X
Xstatic char *pupil_msgs[] = {
X	"Today no homework ... *please*",
X	"six times nine is ... um ... uh ... ... forty-two",
X	"you ... Strange word",	/* You're not expected to understand this ... */
X	"Bugger off!",
X	"*uck off!",
X	"What are the newest news about the Super Information Highway?",
X	"What do you want?",
X	"Do the world a favour---jump out of the 20th story of the Uni-Center!",
X	NULL
X};
X
Xstatic char *baumert_msgs[] = {
X	"No chance! Every day you'll get homework!",
X	"Is it really true? Does really _everybody_ have the homework?",
X	"That usage of the word 'goes' does harm to my ears!",
X	NULL
X};
X
Xstatic char *gier_msgs[] = {
X	"Your attitude is really unacceptable!",
X	"The \"Stigel-Brauerei\" was founded 1492. Well, in that year was that affair with that guy, Columbus, but that really isn't important.",
X	"Why are you going? I'm only 20 minutes late!",
X	NULL
X};
X
Xstatic char *dickler_msgs[] = {
X	"Where's your problem? I'll be happy to help you",
X	"You didn't understand? Then let's begin again ... (*sigh*)",
X	NULL
X};
X
Xstatic char *overbeck_msgs[] = {
X	"No homework yet? - This can be changed!",
X	"Overbecks - das Ueberbier",
X	NULL
X};
X
Xstatic char *klomp_msgs[] = {
X	"How about dehydrating carbonhydrates today?",
X	"Back when I was a pupil, the following thing happened ...",
X	"Back when I was studying chemistry, the following thing happened ...",
X	NULL
X};
X
Xstatic char *alers_msgs[] = {
X	"... dann ist die Scheisse am dampfen",
X	"NIKI forever!",
X	"Pascal forever!",
X	"Yes ... I know that everything is easier in C, but I simply love Pascal ...",
X	NULL
X};
X
Xstatic char *geis_haastert_msgs[] = {
X	"You have Str:0 (at most), so bugger off!",
X	"Do it - who cares about the odd broken bone?",
X	"You are sick because you were running for 30 minutes? So run another hour!",
X	"Shall I help you? (takes the whip)",
X	NULL
X};
X
Xstatic char *koerfgen_msgs[] = {
X	"We'll do that diagonally. *grin* (wipes sweat off head)",
X	"*grin*",
X	"You know, (*grin*) we'll have to do something now! (*grin*)",
X	NULL
X};
X
Xstatic char *ennen_msgs[] = {
X	"How about a pupil experiment - cut off your ears?",
X	"Yet another pupil experiment: the consequences of KCN ingested.",
X	NULL
X};
X
Xstatic char *ellerhold_msgs[] = {
X	"Don't expect to get away without homework!",
X	"No homework in the holidays? You must have something to do, after all!",
X	"The low level of you all is really beyond acception!",
X	NULL
X};
X
Xstatic char *hartstone_msgs[] = {
X	"There was endless work in the supervision and administration of the farm ...",
X	/* it's really a shame that I can't think of more messages for him */
X	NULL
X};
X
Xstatic char *generic_msgs[] = {
X	"I expect you to do your homework _regularly_ and _carefully_!",
X	"The level of work is really very low nowadays!",
X	"In _our_ times pupils were real pupils and teachers were real teachers!",
X	"Back when pupils where real pupils and teachers were real teachers, everything was better!",
X	NULL
X};
X
Xstatic struct teacher_msg_desc {
X	char *teacher_name;
X	char **messages;
X} teacher_msgs[] = {
X	{ "Mr. Baumert",	baumert_msgs },
X	{ "Mr. Gier",		gier_msgs },
X	{ "Mrs. Dickler",	dickler_msgs },
X	{ "Mr. Overbeck",	overbeck_msgs },
X	{ "Mr. Klomp",		klomp_msgs },
X	{ "Mr. Alers",		alers_msgs },
X	{ "Mr. Geis",		geis_haastert_msgs },
X	{ "Mrs. Haastert",	geis_haastert_msgs },
X	{ "Mr. Koerfgen",	koerfgen_msgs },
X	{ "Mr. Ennen",		ennen_msgs },
X	{ "Mr. Ellerhold",	ellerhold_msgs },
X	{ "Mr. Hartstone",	hartstone_msgs },
X	{ NULL,			generic_msgs }
X};
X
Xstatic char *principal_msgs[] = {
X	"What's up?",
X	"I really feel sick - there are so many things to do!",
X	"Help me, I faint!",
X	"We'll do that in groups of one person!",
X	NULL
X};
X
Xboolean is_principal(struct monst *mon)
X{
X	return(mon->mnum == PM_PRINCIPAL);
X}
X
Xboolean is_teacher(struct monst *mon)
X{
X	return(mon->mnum == PM_TEACHER);
X}
X
Xboolean is_educator(struct monst *mon)
X{
X	return(is_teacher(mon) || is_principal(mon));
X}
X
Xstatic void select_message(char **msgs)
X{
X	int i;
X
X	i = 0;
X	while (msgs[i] != NULL) i++;
X	verbalize(msgs[rn2(i)]);
X
X}
X
Xstatic void select_teacher_message(struct teacher_msg_desc *mmsgs,char *tname)
X{
X	int i;
X
X	i = 0;
X	while (mmsgs[i].teacher_name != NULL) {
X		if (strcmp(mmsgs[i].teacher_name,tname) == 0) {
X			select_message(mmsgs[i].messages);
X			return;
X		}
X		i++;
X	}
X	select_message(mmsgs[i].messages);
X}
X
Xvoid pupil_sound(struct monst *mon)
X{
X	select_message(pupil_msgs);
X}
X
Xvoid teacher_sound(struct monst *mon)
X{
X	select_teacher_message(teacher_msgs,NAME(mon));
X}
X
Xvoid principal_sound(struct monst *mon)
X{
X	select_message(principal_msgs);
X}
X
X#endif /* OVL0 */
X
X#endif /* SOUNDS */
X
X/* school.c */
X
END_OF_./src/school.c
if test 4814 -ne `wc -c <./src/school.c`; then
    echo shar: \"./src/school.c\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./src/smith.c -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./src/smith.c\"
else
echo shar: Extracting \"./src/smith.c\" \(7937 characters\)
sed "s/^X//" >./src/smith.c <<'END_OF_./src/smith.c'
X/* 	SCCS Id: @(#)smith.c 	3.1 	94/10/04	*/
X/* NetHack may be freely redistributed.  See license for details. */
X/* Copyright 1994, Sebastian Klein */
X
X#include "hack.h"
X#include <stdio.h>
X#include <ctype.h>
X
X#ifdef OVL0
X
Xstatic int time_finished = -1;
Xstatic struct obj *weapon = NULL;
X
Xstatic char *not_interested = "signalize that you are not interested anymore.";
X
Xstruct prices_t
X{
X	int artifact;
X	long price;
X};
X
X/* the code relies on that a) the artifacts are presented in ascending */
X/*			      order of price */
X/*		       and b) no two given artifacts have the same price. */
Xstatic struct prices_t prices[] = {
X	{ ART_STING,			500 },
X	{ ART_ORCRIST,			600 },
X	{ ART_MUMAKBANE,		1000 },
X	{ ART_SHOCKER,			2000 },
X	{ ART_GRIMTOOTH,		2500 },
X	{ ART_CLEAVER,			3000 },
X	{ ART_OGRESMASHER,		3500 },
X	{ ART_TROLLSBANE,		4000 },
X	{ ART_WORMBITER,		4500 },
X	{ ART_DRAGONBANE,		5000 },
X	{ ART_WEREBANE,			5200 },
X	{ ART_FIRE_BRAND,		6500 },
X	{ ART_FROST_BRAND,		6750 },
X	{ ART_SUNSWORD,			7000 },
X	{ ART_MAGICBANE,		8000 },
X	{ ART_GIANTSLAYER,		8500 },
X	{ ART_DEMONBANE,		9000 },
X	{ ART_SNICKERSNEE,		9500 },
X	{ ART_EXCALIBUR,		10000 },
X	{ ART_MJOLLNIR,			11000 },
X	{ ART_STORMBRINGER,		12000 },
X	{ ART_VORPAL_BLADE,		15000 },
X	{ ART_GRAYSWANDIR,		17500 },
X	{ 0,				0 }
X};
X
Xstatic boolean acceptable_artifact(int artifact)
X{
X	if (exists_nrartifact(artifact)) return(FALSE);
X	if (nogen_nrartifact(artifact)) return(FALSE);
X	return(TRUE);
X}
X
Xstatic int artiid2i(int artifact)
X{
X	int i;
X
X	i = 0;
X	while (prices[i].artifact > 0) {
X		if (prices[i].artifact == artifact) return(i);
X		i++;
X	}
X	return(-1);
X}
X
X/* consistent with shk.c */
Xstatic long adjust_gold(long amount)
X{
X	long x;
X
X	x = amount;
X	if (ACURR(A_CHA) > 18) 		x *= 2L;
X	else if (ACURR(A_CHA) > 17)	x += x / 3L;
X	else if (ACURR(A_CHA) > 15)	x += x / 4L;
X	else if (ACURR(A_CHA) < 6)	x /= 2L;
X	else if (ACURR(A_CHA) < 8)	x -= x / 2L;
X	else if (ACURR(A_CHA) < 11)	x -= x / 3L;
X	if (x <= 0L) x = 1L;
X	return(x);
X}
X
Xstatic long unadjust_gold(long ramount)
X{
X	long x;
X
X	x = ramount;
X	if (ACURR(A_CHA) > 18)		x /= 2L;
X	else if (ACURR(A_CHA) > 17)	x -= x / 3L;
X	else if (ACURR(A_CHA) > 15)	x -= x / 4L;
X	else if (ACURR(A_CHA) < 6)	x *= 2L;
X	else if (ACURR(A_CHA) < 8)	x += x / 2L;
X	else if (ACURR(A_CHA) < 11)	x += x / 3L;
X	if (x <= 0L) x = 1L;
X	return(x);
X}
X
Xstatic void apply_extras(struct obj *o,int extras)
X{
X	boolean id;
X
X	id = FALSE;
X	while (extras > 0) {
X		switch(rn2(5)) {
X			case 0:	if (!o->blessed) {
X					o->cursed = FALSE;
X					o->blessed = TRUE;
X					break;
X				} /* else fallthrough */
X			case 1: if (!id) {
X					makeknown(o->otyp);
X					o->known = o->dknown = o->bknown = TRUE;
X					o->rknown = id = TRUE;
X					break;
X				} /* else fallthrough */
X			case 2:	if (!o->oerodeproof) {
X					o->oerodeproof = TRUE;
X					o->greased = FALSE;
X					break;
X				} /* else fallthrough (twice) */
X			case 3: if (!o->greased && !o->oerodeproof) {
X					o->greased = TRUE;
X					break;
X				} /* else fallthrough */
X			case 4: o->spe++;
X				break;
X		}
X		extras--;
X	}
X	if (o->spe > 5) o->spe = 5;
X}
X
Xstatic boolean select_weapon(long ramount)
X{
X	struct obj *otmp;
X	int i,j;
X
X	if (ramount < prices[0].price) {
X		verbalize("What? That little? You're never going to get a personal weapon for that!");
X		if (ramount >= 100) {	
X			verbalize("But you may have this.");
X			otmp = mksobj(LONG_SWORD,TRUE,FALSE);
X			otmp->spe = rn2(5) ? 0 : 1;
X			otmp->oeroded = 1;		
X			hold_another_object(otmp,"Oops! %s out of your grasp!",The(aobjnam(otmp,"slip")),(const char *) 0);
X			return(TRUE);
X		} else {
X			return(FALSE);
X		}
X	}
X
X	i = 0;
X	while (ramount > prices[i].price && prices[i].artifact != 0) i++;
X	if (prices[i].artifact == 0) i--;
X
X	j = 0;
X	while (i >= 0 && j <= 4 && !acceptable_artifact(prices[i].artifact)) {
X		j++;
X		i--;
X	}
X	if (!acceptable_artifact(prices[i].artifact)) {
X		verbalize("I'm sorry, but I am out of stock in this price class.");
X		return(FALSE);
X	}
X
X	weapon = mksobj(nrartifact_obtype(prices[i].artifact),TRUE,FALSE);
X	weapon = oname(weapon,artiname(prices[i].artifact),0);
X	weapon->cursed = FALSE;
X	apply_extras(weapon,j);
X
X	return(TRUE);
X}
X
Xstatic void make_buy1()
X{
X	char artname[BUFSZ],buf[BUFSZ];
X	int artino,artiind;
X	boolean ok;
X	int i;
X	int extras;
X	long amount;
X	char c;
X	int time_to_take;
X
X	if (weapon != NULL) {
X		impossible("weapon left over? (1)");
X		weapon = NULL;
X	}
X
X	ok = FALSE;
X	do {
X		getlin("How do you want me to call your new artifact?",artname);
X		if (artname[0] == 0) {
X			You(not_interested);
X			return;
X		}			
X		artino = artifact_name2no(artname);
X		if (!artino) {
X			verbalize
X("I think this is a dull name. I really can't associate anything with it.");
X			continue;
X		}
X		if (exists_nrartifact(artino)) {
X			verbalize
X("I have already used that name and I never use the same name again.");
X			continue;
X		}
X		artiind = artiid2i(artino);
X		if (!acceptable_artifact(artino) || artiind == -1) {
X			verbalize
X			("I don't know ... I don't think that's a good name.");
X			continue;
X		}
X		ok = TRUE;
X	} while(!ok);
X
X	getlin("How many extras do you want?",buf);
X	i = 0;
X	while (buf[i] != 0) {
X		if (!isdigit(buf[i])) {
X			verbalize("What a strange number this is!");
X			return;
X		}
X		i++;
X	}
X	extras = atoi(buf);
X	if (extras > 6) {
X		verbalize("Sorry, but I cannot offer more that 6 extras!");
X		return;
X	}
X
X	amount = unadjust_gold(prices[artiind].price + extras*1000L);
X
X	verbalize("That will cost you %li zorkmids.",amount);
X	if (u.ugold < amount) {
X		pline("Unfortunately, you don't have enough money.");
X		You(not_interested);
X		return;
X	}
X	c = yn_function("Accept?","yn",'y');
X	if (tolower(c) == 'n') {
X		You(not_interested);
X		return;
X	}
X	u.ugold -= amount;
X
X	weapon = mksobj(nrartifact_obtype(prices[artiind].artifact),TRUE,FALSE);
X	weapon = oname(weapon,artiname(prices[artiind].artifact),0);
X	weapon->cursed = FALSE;
X	apply_extras(weapon,extras);
X
X	time_to_take = adjust_gold(amount) / 10;
X	verbalize("I'll immediately start working. Please come back in approximately %i00 turns.",time_to_take / 100);
X	verbalize("to receive your new weapon.");
X#ifdef WIZARD
X	pline("(%i)",time_to_take);
X#endif
X	time_finished = moves + time_to_take;
X}
X
Xstatic void make_buy2()
X{
X	char buf[BUFSZ];
X	int ok;
X	int i;
X	long amount;
X	int time_to_take;
X
X
X	if (weapon != NULL) {
X		impossible("weapon left over (2)?");
X		weapon = NULL;
X	}
X
X	do {
X		ok = 1;
X		getlin("How much money are you willing to invest?",buf);
X		i = 0;
X		if (buf[0] == 0) {
X			You(not_interested);
X			return;
X		}
X		while (buf[i] != 0) {
X	 		if (!isdigit(buf[i])) ok = 0;
X			i++;
X		}
X		if (!ok) {
X			verbalize("Please talk English to me!");
X			continue;
X		}
X		amount = atol(buf);
X		if (amount <= 0) {
X			You(not_interested);
X			return;
X		}
X		if (amount > u.ugold) {
X			You("don't have that much money!");
X			ok = 0;
X			continue;
X		}
X	} while (!ok);
X
X	if (select_weapon(adjust_gold(amount))) {
X		u.ugold -= amount;
X		You("hand the smith %li zorkmids.",amount);
X	}
X
X	if (!weapon) return;
X
X	time_to_take = adjust_gold(amount) / 10;
X	
X	verbalize("I will immediately start working. Please come back in approximately %i00 turns",time_to_take / 100);
X	verbalize("to receive your new weapon.");
X#ifdef WIZARD
X	if (wizard) pline("(%i)",time_to_take);
X#endif
X	time_finished = moves + time_to_take;
X}
X
Xstatic void hand_object(void)
X{
X	if (weapon == NULL) {
X		impossible("no blade to give?");
X		return;
X	}
X
X	verbalize("This is your blade. It shall be known as %s from now on.",artiname(weapon->oartifact));
X	hold_another_object(weapon,"Oops! You accidentally drop your new blade!",(const char *) 0,(const char *) 0);
X	time_finished = -1;
X	weapon = NULL;
X}
X
Xvoid smith_selling(struct monst *smith)
X{
X	if (time_finished == -1) {
X		if (ACURR(A_CHA) > 14) {
X			make_buy1();
X		} else {
X			make_buy2();
X		}
X	} else if (time_finished <= moves) {
X		hand_object();
X	} else {
X		verbalize("I'm working. Please don't disturb me again!");
X		time_finished += 5;	/* he was interrupted */
X	}
X}
X
X#endif /* OVL0 */
X
X/* smith.c */
X
END_OF_./src/smith.c
if test 7937 -ne `wc -c <./src/smith.c`; then
    echo shar: \"./src/smith.c\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./src/link -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./src/link\"
else
echo shar: Extracting \"./src/link\" \(72 characters\)
sed "s/^X//" >./src/link <<'END_OF_./src/link'
Xrm -f nethack.a
Xnethack_arcmd
Xnethack_l2cmd
X>cc
Xchmod +x cc
Xmake
Xrm cc
X
END_OF_./src/link
if test 72 -ne `wc -c <./src/link`; then
    echo shar: \"./src/link\" unpacked with wrong size!
fi
chmod +x ./src/link
# end of overwriting check
fi
if test -f ./README.DNA -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./README.DNA\"
else
echo shar: Extracting \"./README.DNA\" \(6577 characters\)
sed "s/^X//" >./README.DNA <<'END_OF_./README.DNA'
XThis is a NetHack 3.1.3 extension featuring several monster fashioned
Xafter the Hitchhiker trilogy (five volumes) by Douglas Adams. It contains,
Xamong other things, 14 new monsters and 5 new objects.
X
X				* * *
X
XI hereby declare these patches to be in the Public Domain, therefore
Xyou (yes, _you_) are free to do with them what you want. However, I
Xdo not assume any liability, explicit or implicit, for any damages
Xcaused by bugs in these patches.
XI hereby certify that I, at the time of signing this statement, am 
Xin a state of sound body and mind.
X				Cologne 03/11/94, Sebastian Peter Klein
X
X(However notice the NetHack license implications of applying my patch
Xto the nethack sources)
X
X				* * *
X
XTo apply the patches, use patch from your nethack root directory.
XNotice that all changes are surrounded by #ifdef DOUGLAS_ADAMS (already
Xautomagically patched in the Makefile s).
X
X				* * *
X
XSpoilers for all the features of these patches follow ...
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
XNew monsters:
X	- Ravenous Bugblatter Beast of Traal ('a')
X		Nothing really remarkable here (well, almost nothing ...),
X		although these are somewhat hard to kill. The towel 
X		trick is not yet implemented. :-)
X
X	- microscopic space fleet ('x')
X		These monsters appear in large groups and zap you. This
X		is their only attack. While rather benign to players
X		past the few levels, they can turn your precious wands
X		to dust, which is the only threat they really pose.
X
X	- Deep Thought ('x', unique)
X		This poor computer doesn't pose a threat at all, as it
X		cannot move. When being asked, it will try to convince you
X		that 6*9=42.
X
X	- Douglas Adams ('A', unique)
X		He is not the guy you would want to get in trouble with
X		(at least not in NetHack :-). He flies, for he has missed
X		the floor, and is electricity resistant, something developed
X		in his long experience with computers. 
X		He will carry the Hitchhiker's Guide to the Galaxy.
X		NOTE to the real DNA: If you should ever get these little
X		patches into your hands, please don't get upset about the
X		somewhat unflattering description of yourself and rather
X		remember that _you_ are the person who set all the
X		trouble off ... :-)
X
X	- vogon ('V')
X		These, being very vampire-like, really deserve the letter
X		assigned to them. They do little damage however and are,
X		as opposed to their lords, rather harmless.
X
X	- vogon lord ('V')
X		These are _rather_ tough and can suck out your brains and
X		your life, much like a mind flayer. They may pose a real
X		threat. Beware!
X
X	- Prostetnik Vogon Jeltz ('V')
X		Even more tough that the vogon lord is that vogon who
X		is responsible for the extinction of the galaxy's worst
X		poetry.
X
X	- Marvin ('X')
X		"Life, loathe it or ignore it, you cannot like it."
X		That's this guy's attitude towards life. His depression,
X		which he is well able to inflict upon others as well,
X		might prove more deadly than many a sword.
X
X	- Zaphod Breeblebrox ('Y', unique)
X		This guy is no real problem, in spite of his two heads
X		and three arms.
X
X	- creeping 42 ('Z')
X		This is the incarnated Answer. It will go everywhere to
X		distribute the Holy Message. If you eat a dead creeping 42,
X		you will gain some more knowledge my being given a glimpse
X		on The Answer. Due to this overwhelming experience, your
X		vision will be temporarily blurred.
X
X	- Ford Perfect ('@', unique)
X		He is from Beteigeuze. And, yes, his name _really_ is
X		Ford Perfect.
X		Note to DNA: Why do you write such crap? You can't even
X		spell the name of one of your main characters!
X		:-) :-) :-) :-)	:-) :-) :-) :-) :-) :-) :-) :-) :-) :-) :-)
X		
X	- Arthur Dent ('@', unique)
X		Mostly Harmless.
X
X	- Mr. Prosser ('@', unique)
X		Mostly Harmful.
X
X	- babelfish (';')
X		These are probably the strangest creatures of the Galaxy.
X		Little is known of them, and that, what is known, is found
X		in the holy tome of Douglas Adams, "The Hitchhikers Guide
X		to the Galaxy" which I am forbidden to quote from here,
X		lest I be sued for copyright infringement.
X
XNew objects:
X	- The Hitchhiker's Guide to the Galaxy (unidentified: highly-complicated electronic device)
X		When applying it, you will be overwhelmed by its complexity
X		and get confused for a few turns. When you're hallucinating
X		however, you'll happily push the buttons and get an (always
X		false) fortune message. 
X		Douglas Adams carries this.
X
X	- diode (two-wired thing)
X	- transistor (three-wired thing)
X	- IC (many-wired thing)
X		These are small electronic devices used to build computers
X		and roboters. However, as you don't understand the first
X		thing about electronics, these aren't of any use to you.
X		However they, and especially the ICs, are very expensive
X		and therefore can be sold in shops for a rather large price.
X		Both Deep Thought and Marvin leave these behind.
X
X	- peanut bag
X		Peanuts provide nutrition and may be essential in some
X		situations. It particularly might increase your constitution.
X
XOther new features:
X	- The 42 room
X		Yet another monster room, filled with all of the above
X		monsters.
X
X	- monster chatting
X		Chatting with a DNA-monster might be fun :-)
X
X	- creeping 42 & peanut eating 
X		see above
X
X	- new attack damage type: depression
X		When Marvin attacks you, you may get depressed. Then
X		one of the following thing happens:
X			- you are drained one level
X			- your constitution is lowered by one (you die
X			  if it goes below 3)
X			- your intelligence is lowered by one (may kill
X			  you as well)
X			- nothing ("The feeling subsides")
X
X	- SHOPTYPE
X		  When you are in wizard mode, including a 'd' in SHOPTYPE
X		  ensures a "42"-room to be generated on each level.
X
X
X				* * *
X
XAll those ideas (obviously) owe a lot to the works of Douglas Noel Adams.
XI would like to explicitly thank him here, because I believe that he 
Xis one of the best authors ever existing on this world. I don't think
Xthat he'll dislike this work of mine, and if he does, I don't care either :-)
XSeriously, Douglas, if you have any suggestions, I'd love to hear them.
X
X				* * *
X
XAt Mar 14,1994, 10.15am, I (will post)/(post)/(have posted) these patches to
Xcomp.sources.games and alt.sources. It will be the first piece of 
Xsoftware I contribute to the World Of The Internet. May it be of use
Xand fun for those daring to install it.
XReports of bugs and suggestions of new features are always welcome
X(send them to sebast@axposf.pa.dec.com). Flames be sent to the bit bucket.
X
X					Sebastian Klein
X					sebast@axposf.pa.dec.com
X					Mar 11, 1994
X
X... and may the Force be with you!
X
X--------------------------------- cut here ------------------------------------
X
END_OF_./README.DNA
if test 6577 -ne `wc -c <./README.DNA`; then
    echo shar: \"./README.DNA\" unpacked with wrong size!
fi
# end of overwriting check
fi
if test -f ./README.nh-tng -a "${1}" != "-c" ; then 
  echo shar: Will not over-write existing file \"./README.nh-tng\"
else
echo shar: Extracting \"./README.nh-tng\" \(17555 characters\)
sed "s/^X//" >./README.nh-tng <<'END_OF_./README.nh-tng'
XNetHack: The Next Generation 1.0
X~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
X
X0. Contents:
X	0. Contents
X	1. What is this?
X	2. What does NHTNG include?
X	3. How do you install NHTNG?
X	4. To which extent are NHTNG and vanilla NetHack comparable?
X	5. On Forcing stats
X	6. The Legal Stuff
X	7. Dedication
X	=== SPOILER WARNING ===
X	8. What *exactly* does NHTNG include?
X	9. Rationale of some of the new features in terms of Game Balance
X	   and Plausibility
X
X1. What is this?
X
X	Nethack:The Next Generation (NHTNG) is a set of patches
X	for NetHack 3.1.3. It is highly inofficial and should not be
X	confused with vanilla NetHack.
X
X2. What does NHTNG include?
X
X	- Various Douglas-Adams like monsters and objects (see README.DNA).
X	- A new character class, the Geek, with assorted Quest Levels.
X	- Six new levels
X	- 58 new monsters
X	- 38 new objects
X	- Some fortunes come true.
X	- Eight new artifacts, among them non-quest non-weapon artifacts.
X	- A selector for ability preference.
X	- Special monsters for the rogue level
X	- and much, much more.
X	- The Nethack&DouglasAdams patches I released on Mar 14,1994
X	  are incorporated into NHTNG as well.
X
X3. How do you install NHTNG?
X
X	a. Before starting, read the legal stuff (point 6). 
X	b. You will need a patch program that understands context
X	   diffs (GNU patch, for example).
X	c. Uncompress the original 3.1.3 sources. It is important that
X	   you start with a clean source tree.
X	d. Install the Makefiles as instructed in sys/unix/Install.unx
X	e. Uncompress the archive containing NHTNG. To do this, go to
X	   the main NH313 directory and then type for a shar archive:
X		$ sh <nh313.tng.shar
X	   or the following for a gzipped tar archive:
X		$ gzip -dc <nh313.tng.tar.z | tar xvf -
X	f. Step c will have created, among others, a file named patch.pa
X	   It contains the actual patches to the NH313 sources. To
X	   apply them, type:
X		$ patch <patch.pa
X	g. Now follow the DevTeam's instructions for configuring, compiling
X	   and installing NetHack. DO NOT copy the Makefiles again (as you
X	   did in step d)
X	h. Have fun!
X
X4. To which extent are NHTNG and vanilla NetHack comparable?
X	In NHTNG there are both features making the game easier and
X	making it harder. I suspect, however, that on a large scale
X	NHTHG will be somewhat easier. Since I have never ascended
X	with NHTNG (and in fact, not with vanilla NH313, either), I
X	unfortunately cannot really do more than guess on that.
X
X5. On Forcing Stats
X	"Oh darn, why has this newly-born Valkyrie only Str: 10 ?!?"
X	In situtations as the above, how many times did you quit
X	the game to try again? How often did it take you ten times
X	or more until you had what you wanted? You're now shown the
X	stats of your new character and then you can accept them
X	or not (in which case you roll again).
X	You even can do what I call "forcing a stat". That means that
X	you tell the game that any combination of stats where Xx is
X	lower than 42 is totally unacceptable to you. When you indicate
X	that you want to force something, you're first asked for
X	the stat you want (you can't force more than one). The answer
X	is given according to the following key:
X		s - Strength (St)
X		d - Dexterity (Dx)
X		c - Constitution (Co)
X		i - Intelligence (In)
X		w - Wisdom (Wi)
X		h - Charisma (Ch)
X	Then you're asked for the minimum value (for Strength, 19 means
X	18/01, 20 = 18/02 etc.), after which all rolls are guranteed
X	to satisfy your condition.
X	Some players might object to this extension as a means of cheating
X	or inappropriate manipulation of the stats. I believe that this is
X	not the case, because of:
X		a) It doesn't give you any real advantage over repeatedly
X		   running and then immediately quitting the game. Remember
X		   that all my extension does is rolling dice until
X		   the required conditions are met.
X		b) Remember that you were (or, actually, your character
X		   was) "heralded from birth as the instrument of XXX".
X		   But guess the reasons because of which you were
X		   selected. Surely you were tested on your various
X		   abilities and then chosen. My 'forcing' just
X		   simulates this.
X
X6. The Legal stuff
X	I, being of sound mind and body, do write down on this day of
X	the twentieth of May in the year nineteenhundredninetyfour,
X	for all to see, that these patches of Nethack shall be placed
X	in the Public Domain and therefore free to use for anybody
X	without any restriction. However, I disclaim any liability
X	for any damage or consequences caused by these patches or
X	bugs in them. By using this software you agree to be 
X	bound by these terms.
X	However, note that in the act of applying my patches to 
X	the actual NetHack sources causes the resulting program
X	to be completely bound to the NetHack license agreement
X	as stored in dat/license.
X
X7. Dedication
X	| :hacker: [originally, someone who makes furniture with an axe] n.   |
X   	| 1. A person who enjoys exploring the details of programmable        |
X   	| systems and how to stretch their capabilities, as opposed to most   |
X   	| users, who prefer to learn only the minimum necessary.  2. One who  |
X   	| programs enthusiastically (even obsessively) or who enjoys          |
X   	| programming rather than just theorizing about programming.  3. A    |
X   	| person capable of appreciating {hack value}.  4. A person who is    |
X   	| good at programming quickly.  5. An expert at a particular program, |
X  	|  or one who frequently does work using it or on it; as in `a UNIX   |
X   	| hacker'.  (Definitions 1 through 5 are correlated, and people who   |
X   	| fit them congregate.)  6. An expert or enthusiast of any kind.  One |
X   	| might be an astronomy hacker, for example.  7. One who enjoys the   |
X   	| intellectual challenge of creatively overcoming or circumventing    |
X   	| limitations.  8. [deprecated] A malicious meddler who tries to      |
X   	| discover sensitive information by poking around.  Hence `password   |
X   	| hacker', `network hacker'.  The correct term is {cracker}.          |
X					- The Jargon File, version 3.0.0
X	| 9. A hack or nethack player.					      |
X
X	I hereby dedicate Nethack - The Next Generation to all hackers
X	in this world, by any definition of 'hacker' you care to name.
X	I have really enjoyed programming this piece of software and I 
X	believe it is now truly ready to be shared with the world of
X	the USENET. I hope that you enjoy using this piece of software,
X	which is the second one I release to the USENET. Of course, I 
X	am also always interested in bug reports (or, preferrably,
X	fixes :-), suggestions, enhancements etc.
X
X	At this point I would like to thank the NetHack Development Team
X	for making this marvellous game real and to maintain it. It is
X	only from people like you that such a game can emerge and it were
X	your efforts which inspired me to enjoy this game not only
X	in the way of playing it but also in the way of enhancing it
X	and eventually make my own 'play on NetHack' available on USENET. 
X	I encourage everyone to do the same.
X
X	On Mon May 30, 1994, 9:56am MESZ I will release this to USENET.
X	May you enjoy it!
X
X							05/20/94
X							Sebastian Klein
X							aus001@rrz.uni-koeln.de
X
X8. (P.S.) What *exacty* does NHTNG include?
X	(The following material contains only spoilers. If you do not want
X	to be spoiled, don't read any further. I really believe that stopping
X	here might enhance your fun - so DO NOT READ ANY FURTHER!)
X
X	There's a truck full of spoilers driving past. Jump in front of it? [yn]
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
XDO NOT READ!!! 
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X	You're spoiled to death. You have been warned.
X
X	The Geek Class:
X		Class Name:	Geek
X		Alignment:	Neutral
X		Abilities:
X			Str	Dex	Con 	Int	Wis	Cha
X			10+30%	10+15%	10+15%	8+10%	9+20%	7+10%
X
X		Intrinsics:					(Level)
X			Poison resistance			1
X			Shock resistance			1
X			Teleport control			8
X			Warning					15
X
X		Starting Equipment:
X			a blessed +1 electric sword
X			(1..7) ICs
X			+1 gauntlets of typing
X			4 potions of Jolt Cola
X			2 Hacker's Foods
X			a pack of floppies
X
X		Quest Leader:		The DevTeam
X		Quest Nemesis:		Bill Gates
X		Quest Artifact:		The Nethack Sources 
X					(#invoke = IDENTIFY)
X
X		The Geek is a mixture between a hacker, as defined in the
X		Jargon File and a NetHack player. I would have preferred
X		to call the class "Hacker" but the Healers strongly 
X		disapproved of that.
X
X	New monsters:
X		Ravenous Bugblatter Beast Of Traal
X		Schroedinger's Cat
X		algolian suntiger
X		leprechaun elder
X		leprechaun king
X		nymph queen
X		giant mumak
X		young unicorn
X		Deep Thought
X		Eddie
X		bug
X		heisenbug
X		PDP-11
X		PDP-9
X		VAX
X		walking disk drive
X		cray
X		Douglas Adams
X		ancient multi-hued dragon
X		Dragon Lord
X		baby lich
X		vogon
X		vogon lord
X		Prostetnik Vogon Jeltz
X		Marvin
X		Zaphod Breeblebrox
X		creeping 42
X		pupil
X		teacher
X		principal
X		blacksmith
X		Ford Perfect
X		Arthur Dent
X		Mr. Prosser
X		news daemon
X		printer daemon
X		UNIX Kernel
X		babelfish
X		deminewt
X		masternewt
X		geek
X		The Dev Team
X		Bill Gates
X		hacker
X	
X	The Rogue Monsters:
X		aquator		centaur		dragon		emu
X		venus flytrap	griffin		ice monster	kestrel
X		nymph		phantom		quagga		rattlesnake
X		xeroc		zombie
X
X	58 new monsters.
X
X	New Objects:
X		electric sword			Nothing special
X		tooth of an algolian suntiger	A very good weapon indeed
X		gauntlets of typing		Nothing special
X		ring of health			Increases Constitution
X		ring of timely backup		See Computer Level
X		amulet of second chance		
X			The Amulet Of Second Chance is much like the
X			amulet of life saving, but it doesn't bring
X			you to max HP again, but only to the HPs you
X			had before the final hit. Great for those
X			who think "Well, I have 30HP left. I can
X			surely take one more hit from that mumak."
X		amulet of data storage		See Computer Level	
X		Schroedinger's Box
X			This contains a potion of radium + either:
X				- a live cat + a potion of cyanide
X			or
X				- a cat corpse.
X			What of the two is inside is not determined
X			until the box is opened.
X		bag of digestion		Eats your stuff
X		Hitchhiker's Guide t.t. Galaxy	see README.DNA
X		diode,transistor,IC		see README.DNA
X		pack of floppies
X			They have a random content. If it is MS Windows,
X			you will get confused if you're a geek and 
X			(a)pply them.
X		god-o-meter
X			If blessed, it tells you whether your prayer
X			timeout has expired. If uncursed/cursed, your
X			timeout is prolonged.
X		relay				Artifact prototype
X		bottle				see Chemistry below
X		chemistry set			see Chemistry below
X		Hacker's Food			a food ration for geeks
X		potion of extreme power		gives you rn2(10) HP
X		potion of recovery		puts you back to max HP
X		potion of invulnerability	makes you invulnerable 
X		potion of heroism		
X			gives you several intrinsics + invulnerability
X			for a short period of time.
X		potion of cyanide		kills you
X		potion of radium		makes you sick
X		potion of Jolt Cola		gives you 5 HP up to max
X		potion of Pan Galactic Gargle Blaster
X			You can guess that yourself :-)
X		scroll of mass murder	
X			kills all monsters present of a type, like genocide,
X			but doesn't prevent future creation of them.
X		scroll of undo genocide		permit creation of a mon again
X		scroll of reverse identify
X			This scroll asks you what you want to identify.
X			You do not need a sample of the item, however. It
X			suffices to answer with something like "loadstone",
X			"wand of wishing" or even "smoky potion".
X		scroll of consecration		makes an altar
X		scroll of root pwd detection	see Computer Level below
X		spellbook of finger		like wand of probing
X		spellbook of chemistry		see Chemistry below
X		wand of acid			shoots an acid ray
X		wand of draining
X			This takes away from the hit monster half of
X			its max HP. However, the amount taken is 
X			subtracted from your own HP as well, so care
X			is advised. This wand is inspired by Angband.
X		wand of wonder
X			This does the effect of a random wand class
X			(with a bias against wishing). This is 
X			inspired by Angband as well.
X		wand of bugging			see Computer Level below
X
X		38 new objects.		
X
X	New Levels:
X		The Forge:
X			Here is where the blacksmith Duri lives. (The name
X			Duri is taken from the short story "Blades" by Sonia
X			Orin Lyris, published in the Quanta Magazine, 
X			December 1989). He makes artifacts for you, but
X			it might cost a lot.
X	
X		The School:
X			This level is in memorial of my days at school
X			(which includes today :-). The teachers' names
X			are verbatim and their character as well. Note
X			that it is not by chance that this is in
X			Gehennom.
X
X		Computer Level:
X			This level contains various dangerous computers.
X			Some objects, namely:
X				- ring of timely backup
X				- scroll of root password detection
X				- amulet of data storage
X				- wand of bugging
X			can only be found on this level and will vanish
X			from your pack once you go up or down. The wand
X			of bugging creates bugs and heisenbugs, the other
X			three items only display cute messages.
X
X		Key Level: 
X			This level is full of leprechauns and nymphs,
X			all awake and waiting to steal your stuff. You
X			will eventually be able to kill the nymph
X			queen and get the Key Of Access (see below).
X
X		Dragon Level:
X			This level contains the Dragon Lord with his
X			unique scales.
X
X		The Hitchhiker's Level:
X			In the honour of Douglas Noel Adams and his
X			works this level has been created. 
X
X	New Artifacts:
X		Name		Type		#invoke	Damage	A C
X		~~~~		~~~~		~~~~~~~	~~~~~~	~ ~
X		Mumakbane	long sword	- 	Fire	N -
X							(vs. mumakil)
X		Wormbiter	crysknife	-	Phys	N -
X							(vs. worms)
X		Shocker		electric sword	-	Elec	N -
X
X		Scales Of The Dragon Lord	red dragon scale mail
X						DRAGON_BREATH	C -
X		Burned Moth Relay	relay	-	-	- -
X
X		Wand Of Might	wand of wishing	-	-	- -
X
X		The Key Of Access	key	CREATE_PORTAL	- -
X
X		The Nethack Sources	pack of floppies
X		(G Quest Artifact)		IDENTIFY	N G
X
X		8 new artifacts.
X
X	Chemistry:
X		There has been created a way to create potions, similiar
X		to the blank paper/magic marker combination for scrolls
X		and spellbooks. Before you can use it, you must have met
X		the following conditions:
X			- Read a spellbook of chemistry. Reading it once
X			  is enough - it doesn't wear off like ordinary
X			  spells (save amnesia).
X			- Have a chemistry set. It corresponds to the
X			  magic marker for scrolls. It is charged and
X			  therefore can be used only a limited amount
X			  of times. Charge diminuation is dependent
X			  on the price of the potion.
X			- Have a bottle to hold the newly made potion.
X			  It corresponds to the scroll/spellbook of
X			  blank paper.
X			- Have identified the potion you want to make 
X			  (unless you're lucky).
X		The potion created will be marked as 'selfmade' in the
X		inventory (and so will be selfmade scrolls, spellbooks
X		and tins, now). If you quaff a selfmade potion, there is
X		a chance (luck-dependent) that something bad (posioned
X		from a mistake in making the potion) will happen.
X
X9. Rationale of some of the new features in terms of Game Balance and
X   Plausibility 
X
X- The Hitchhiker's features (hitch level, "42" room etc.)
X	None of the features presented herein have any significant use,
X	with two notable exceptions:
X		- Eating a creeping 42 corpse making you gain a level
X		  Serious abuse (cursed genocide) is prevented by making
X		  the creeping 42 un-genocideable. Minor spoilage of 
X		  game balance is diminushed by making it usually peaceful,
X		  thereby increasing the price of getting its corpse.
X		- Killing a babelfish gives an extraordinarily high amount
X		  of Xp, usually providing a gain level to lowlevel
X		  characters.
X		  This is included (or, rather, not removed) as an extra
X		  gimmick for those ambitioned enough to find out. As
X		  babelfishes are sufficiently rare, there's no real harm 
X	 	  done.
X
X- Various 'parody' items (compu room, Geek class etc.) that might drive
X  the game to the point of being ridicolous
XWell, NetHack as it is consists of elements taken from many different
Xauthors and fantasies, for example:
X	- Herbert ("Dune") --> crysknife etc.
X	- Tolkien ("The Lord Of The Rings") --> elves, orcs, hobbits etc.
X	- Greek mythology --> Medusa etc.
X	- other mythologies --> Asmodeus, Juiblex and many others.
XAll I have done is adding elements taken from other, possibly from more
Xrecent, sources:
X	- Adams ("The Hitchhiker's Guide to the Galaxy") --> 42, Deep Thought,
X		Arthur Dent, algolian suntiger etc.
X	- Computer Folklore --> Geek, PDP-11, UNIX, news daemon etc.
X	- NetHack itself --> Stormbringer attracting vortices
X	- myself --> pupil, deminewt, Douglas Adams etc.
XI strongly believe that those added things enhance the game a lot. It
Xcertainly does not become ridicolous.
X
X- Ring of Health
XSomeone on USENET has objected to my ring of health, increasing constitution.
XHe said that, since Co is only significant when you gain a level, you would
Xhave a permanent gain from wearing the ring only when you're about to go up.
XI believe this to be irrelevant, however, since there are many rings doing
Xexactly this: for example, the extra HP gained by wearing a ring of 
Xregeneration do *not* vanish again once you remove the ring again. 
XMy ring of health fills a niche in which it nicely fits.
X
X- potion of invulerability too powerful?
XCome to think of it, it is not really *that* powerful. If you're surrounded
Xit only delays your fate by several turns. If there's only one mumak (or
XArchon) there trying to blast you, it is indeed the most valueable thing
Xto have, however. But, remember, that it is also very rare and expensive,
Xso you're not likely to get more that at most one or two per full game.
X
X================================= END OF FILE =================================
END_OF_./README.nh-tng
if test 17555 -ne `wc -c <./README.nh-tng`; then
    echo shar: \"./README.nh-tng\" unpacked with wrong size!
fi
# end of overwriting check
fi
echo shar: End of shell archive.
exit 0

